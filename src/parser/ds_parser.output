Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 313 conflicts: 1 shift/reduce
State 409 conflicts: 1 shift/reduce
State 516 conflicts: 2 shift/reduce
State 625 conflicts: 1 shift/reduce
State 905 conflicts: 2 shift/reduce
State 998 conflicts: 1 shift/reduce
State 1086 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program ';'

   16 top_level_reader_macro: expr_reader ';'

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';'

   75 $@4: %empty

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   77 expression_unsafe: "unsafe" expression_block

   78 expression_while_loop: "while" expr expression_block

   79 expression_with: "with" expr expression_block

   80 $@5: %empty

   81 expression_with_alias: "assume" "name" '=' $@5 expr

   82 annotation_argument_value: string_constant
   83                          | "name"
   84                          | "integer constant"
   85                          | "floating point constant"
   86                          | "true"
   87                          | "false"

   88 annotation_argument_value_list: annotation_argument_value
   89                               | annotation_argument_value_list ',' annotation_argument_value

   90 annotation_argument_name: "name"
   91                         | "type"
   92                         | "in"

   93 annotation_argument: annotation_argument_name '=' string_constant
   94                    | annotation_argument_name '=' "name"
   95                    | annotation_argument_name '=' "integer constant"
   96                    | annotation_argument_name '=' "floating point constant"
   97                    | annotation_argument_name '=' "true"
   98                    | annotation_argument_name '=' "false"
   99                    | annotation_argument_name
  100                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  101 annotation_argument_list: annotation_argument
  102                         | annotation_argument_list ',' annotation_argument

  103 annotation_declaration_name: name_in_namespace
  104                            | "require"
  105                            | "private"

  106 annotation_declaration_basic: annotation_declaration_name
  107                             | annotation_declaration_name '(' annotation_argument_list ')'

  108 annotation_declaration: annotation_declaration_basic
  109                       | '!' annotation_declaration
  110                       | annotation_declaration "&&" annotation_declaration
  111                       | annotation_declaration "||" annotation_declaration
  112                       | annotation_declaration "^^" annotation_declaration
  113                       | '(' annotation_declaration ')'
  114                       | "|>" annotation_declaration

  115 annotation_list: annotation_declaration
  116                | annotation_list ',' annotation_declaration

  117 optional_annotation_list: %empty
  118                         | '[' annotation_list ']'

  119 optional_function_argument_list: %empty
  120                                | '(' ')'
  121                                | '(' function_argument_list ')'

  122 optional_function_type: %empty
  123                       | ':' type_declaration

  124 function_name: "name"
  125              | "operator" '!'
  126              | "operator" '~'
  127              | "operator" "+="
  128              | "operator" "-="
  129              | "operator" "*="
  130              | "operator" "/="
  131              | "operator" "%="
  132              | "operator" "&="
  133              | "operator" "|="
  134              | "operator" "^="
  135              | "operator" "&&="
  136              | "operator" "||="
  137              | "operator" "^^="
  138              | "operator" "&&"
  139              | "operator" "||"
  140              | "operator" "^^"
  141              | "operator" '+'
  142              | "operator" '-'
  143              | "operator" '*'
  144              | "operator" '/'
  145              | "operator" '%'
  146              | "operator" '<'
  147              | "operator" '>'
  148              | "operator" ".."
  149              | "operator" "=="
  150              | "operator" "!="
  151              | "operator" "<="
  152              | "operator" ">="
  153              | "operator" '&'
  154              | "operator" '|'
  155              | "operator" '^'
  156              | "++" "operator"
  157              | "--" "operator"
  158              | "operator" "++"
  159              | "operator" "--"
  160              | "operator" "<<"
  161              | "operator" ">>"
  162              | "operator" "<<="
  163              | "operator" ">>="
  164              | "operator" "<<<"
  165              | "operator" ">>>"
  166              | "operator" "<<<="
  167              | "operator" ">>>="
  168              | "operator" '[' ']'
  169              | "operator" "?[" ']'
  170              | "operator" '.'
  171              | "operator" "?."
  172              | "operator" '.' "name"
  173              | "operator" '.' "name" ":="
  174              | "operator" "?." "name"
  175              | "operator" ":="
  176              | "operator" "delete"
  177              | "operator" "??"
  178              | "operator" "is"
  179              | "operator" "as"
  180              | "operator" "is" "name"
  181              | "operator" "as" "name"
  182              | "operator" '?' "as"
  183              | "operator" '?' "as" "name"
  184              | "bool"
  185              | "string"
  186              | "int"
  187              | "int2"
  188              | "int3"
  189              | "int4"
  190              | "uint"
  191              | "uint2"
  192              | "uint3"
  193              | "uint4"
  194              | "float"
  195              | "float2"
  196              | "float3"
  197              | "float4"
  198              | "range"
  199              | "urange"
  200              | "range64"
  201              | "urange64"
  202              | "int64"
  203              | "uint64"
  204              | "double"
  205              | "int8"
  206              | "uint8"
  207              | "int16"
  208              | "uint16"

  209 global_function_declaration: optional_annotation_list "def" function_declaration

  210 optional_public_or_private_function: %empty
  211                                    | "private"
  212                                    | "public"

  213 function_declaration_header: function_name optional_function_argument_list optional_function_type

  214 $@6: %empty

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  216 expression_block: '{' expressions '}'
  217                 | '{' expressions '}' "finally" '{' expressions '}'

  218 expression_any: ';'
  219               | expr_pipe
  220               | expr_keyword
  221               | expr_assign_pipe
  222               | expr_assign ';'
  223               | expression_delete ';'
  224               | expression_let
  225               | expression_while_loop
  226               | expression_unsafe
  227               | expression_with
  228               | expression_with_alias
  229               | expression_for_loop
  230               | expression_break ';'
  231               | expression_continue ';'
  232               | expression_return
  233               | expression_yield
  234               | expression_if_then_else
  235               | expression_try_catch
  236               | expression_label ';'
  237               | expression_goto ';'
  238               | "pass" ';'

  239 expressions: %empty
  240            | expressions expression_any
  241            | expressions error

  242 expr_keyword: "keyword" expr expression_block

  243 optional_expr_list: %empty
  244                   | expr_list

  245 type_declaration_no_options_list: type_declaration
  246                                 | type_declaration_no_options_list ';' type_declaration

  247 $@7: %empty

  248 $@8: %empty

  249 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr

  250 $@9: %empty

  251 $@10: %empty

  252 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 '(' expr_list ')'

  253 expr_pipe: expr_assign " <|" expr_block
  254          | "@ <|" expr_block
  255          | "@@ <|" expr_block
  256          | "$ <|" expr_block

  257 name_in_namespace: "name"
  258                  | "name" "::" "name"
  259                  | "::" "name"

  260 expression_delete: "delete" expr
  261                  | "delete" "explicit" expr

  262 $@11: %empty

  263 $@12: %empty

  264 new_type_declaration: '<' $@11 type_declaration '>' $@12
  265                     | structure_type_declaration

  266 expr_new: "new" new_type_declaration
  267         | "new" new_type_declaration '(' ')'
  268         | "new" new_type_declaration '(' expr_list ')'
  269         | "new" new_type_declaration '(' make_struct_dim ')'
  270         | "new" make_decl

  271 expression_break: "break"

  272 expression_continue: "continue"

  273 expression_return_no_pipe: "return"
  274                          | "return" expr_list
  275                          | "return" "<-" expr_list

  276 expression_return: expression_return_no_pipe ';'
  277                  | "return" expr_pipe
  278                  | "return" "<-" expr_pipe

  279 expression_yield_no_pipe: "yield" expr
  280                         | "yield" "<-" expr

  281 expression_yield: expression_yield_no_pipe ';'
  282                 | "yield" expr_pipe
  283                 | "yield" "<-" expr_pipe

  284 expression_try_catch: "try" expression_block "recover" expression_block

  285 kwd_let: "let"
  286        | "var"

  287 optional_in_scope: "inscope"
  288                  | %empty

  289 tuple_expansion: "name"
  290                | tuple_expansion ',' "name"

  291 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  292                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

  293 expression_let: kwd_let optional_in_scope let_variable_declaration
  294               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  295 $@13: %empty

  296 $@14: %empty

  297 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  298 $@15: %empty

  299 $@16: %empty

  300 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  301 $@17: %empty

  302 $@18: %empty

  303 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  304 $@19: %empty

  305 $@20: %empty

  306 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  307 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  308               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  309               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  310 expr_list: expr
  311          | expr_list ',' expr

  312 block_or_simple_block: expression_block
  313                      | "=>" expr
  314                      | "=>" "<-" expr

  315 block_or_lambda: '$'
  316                | '@'
  317                | '@' '@'

  318 capture_entry: '&' "name"
  319              | '=' "name"
  320              | "<-" "name"
  321              | ":=" "name"

  322 capture_list: capture_entry
  323             | capture_list ',' capture_entry

  324 optional_capture_list: %empty
  325                      | "[[" capture_list ']' ']'

  326 expr_block: expression_block
  327           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  328 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  329 expr_numeric_const: "integer constant"
  330                   | "unsigned integer constant"
  331                   | "long integer constant"
  332                   | "unsigned long integer constant"
  333                   | "unsigned int8 constant"
  334                   | "floating point constant"
  335                   | "double constant"

  336 expr_assign: expr
  337            | expr '=' expr
  338            | expr "<-" expr
  339            | expr ":=" expr
  340            | expr "&=" expr
  341            | expr "|=" expr
  342            | expr "^=" expr
  343            | expr "&&=" expr
  344            | expr "||=" expr
  345            | expr "^^=" expr
  346            | expr "+=" expr
  347            | expr "-=" expr
  348            | expr "*=" expr
  349            | expr "/=" expr
  350            | expr "%=" expr
  351            | expr "<<=" expr
  352            | expr ">>=" expr
  353            | expr "<<<=" expr
  354            | expr ">>>=" expr

  355 expr_assign_pipe: expr '=' "@ <|" expr_block
  356                 | expr '=' "@@ <|" expr_block
  357                 | expr '=' "$ <|" expr_block
  358                 | expr "<-" "@ <|" expr_block
  359                 | expr "<-" "@@ <|" expr_block
  360                 | expr "<-" "$ <|" expr_block

  361 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  362                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  363 expr_method_call: expr "->" "name" '(' ')'
  364                 | expr "->" "name" '(' expr_list ')'

  365 func_addr_name: name_in_namespace
  366               | "$i" '(' expr ')'

  367 func_addr_expr: '@' '@' func_addr_name

  368 $@21: %empty

  369 $@22: %empty

  370 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name

  371 $@23: %empty

  372 $@24: %empty

  373 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name

  374 expr_field: expr '.' "name"
  375           | expr '.' '.' "name"
  376           | expr '.' "name" '(' ')'
  377           | expr '.' "name" '(' expr_list ')'

  378 $@25: %empty

  379 $@26: %empty

  380 expr_field: expr '.' $@25 error $@26

  381 expr: "null"
  382     | name_in_namespace
  383     | expr_numeric_const
  384     | expr_reader
  385     | string_builder
  386     | make_decl
  387     | "true"
  388     | "false"
  389     | expr_field
  390     | expr_mtag
  391     | '!' expr
  392     | '~' expr
  393     | '+' expr
  394     | '-' expr
  395     | expr "<<" expr
  396     | expr ">>" expr
  397     | expr "<<<" expr
  398     | expr ">>>" expr
  399     | expr '+' expr
  400     | expr '-' expr
  401     | expr '*' expr
  402     | expr '/' expr
  403     | expr '%' expr
  404     | expr '<' expr
  405     | expr '>' expr
  406     | expr "==" expr
  407     | expr "!=" expr
  408     | expr "<=" expr
  409     | expr ">=" expr
  410     | expr '&' expr
  411     | expr '|' expr
  412     | expr '^' expr
  413     | expr "&&" expr
  414     | expr "||" expr
  415     | expr "^^" expr
  416     | expr ".." expr
  417     | "++" expr
  418     | "--" expr
  419     | expr "++"
  420     | expr "--"
  421     | '(' expr_list optional_comma ')'
  422     | expr '[' expr ']'
  423     | expr '.' '[' expr ']'
  424     | expr "?[" expr ']'
  425     | expr '.' "?[" expr ']'
  426     | expr "?." "name"
  427     | expr '.' "?." "name"
  428     | func_addr_expr
  429     | name_in_namespace '(' ')'
  430     | name_in_namespace '(' make_struct_dim ')'
  431     | name_in_namespace '(' expr_list ')'
  432     | basic_type_declaration '(' ')'
  433     | basic_type_declaration '(' expr_list ')'
  434     | '*' expr
  435     | "deref" '(' expr ')'
  436     | "addr" '(' expr ')'
  437     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  438     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  439     | expr "??" expr
  440     | expr '?' expr ':' expr

  441 $@27: %empty

  442 $@28: %empty

  443 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr "is" basic_type_declaration
  445     | expr "is" "name"
  446     | expr "as" "name"

  447 $@29: %empty

  448 $@30: %empty

  449 expr: expr "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr "as" basic_type_declaration
  451     | expr '?' "as" "name"

  452 $@31: %empty

  453 $@32: %empty

  454 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr '?' "as" basic_type_declaration
  456     | expr_type_info
  457     | expr_type_decl
  458     | expr_cast
  459     | expr_new
  460     | expr_method_call
  461     | expr_named_call
  462     | expr_full_block
  463     | expr "<|" expr
  464     | expr "|>" expr
  465     | expr "|>" basic_type_declaration
  466     | name_in_namespace "name"
  467     | "unsafe" '(' expr ')'
  468     | expression_keyword

  469 expr_mtag: "$$" '(' expr ')'
  470          | "$i" '(' expr ')'
  471          | "$v" '(' expr ')'
  472          | "$b" '(' expr ')'
  473          | "$a" '(' expr ')'
  474          | "..."
  475          | "$c" '(' expr ')' '(' ')'
  476          | "$c" '(' expr ')' '(' expr_list ')'
  477          | expr '.' "$f" '(' expr ')'
  478          | expr "?." "$f" '(' expr ')'
  479          | expr '.' '.' "$f" '(' expr ')'
  480          | expr '.' "?." "$f" '(' expr ')'
  481          | expr "as" "$f" '(' expr ')'
  482          | expr '?' "as" "$f" '(' expr ')'
  483          | expr "is" "$f" '(' expr ')'
  484          | '@' '@' "$c" '(' expr ')'

  485 optional_field_annotation: %empty
  486                          | "[[" annotation_argument_list ']' ']'

  487 optional_override: %empty
  488                  | "override"
  489                  | "sealed"

  490 optional_constant: %empty
  491                  | "const"

  492 optional_public_or_private_member_variable: %empty
  493                                           | "public"
  494                                           | "private"

  495 optional_static_member_variable: %empty
  496                                | "static"

  497 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  498 struct_variable_declaration_list: %empty

  499 $@33: %empty

  500 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration ';'

  501 $@34: %empty

  502 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'

  503 $@35: %empty

  504 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block
  505                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  506 function_argument_declaration: optional_field_annotation variable_declaration
  507                              | optional_field_annotation "var" variable_declaration
  508                              | "$a" '(' expr ')'

  509 function_argument_list: function_argument_declaration
  510                       | function_argument_list ';' function_argument_declaration

  511 tuple_type: type_declaration
  512           | "name" ':' type_declaration

  513 tuple_type_list: tuple_type
  514                | tuple_type_list ';' tuple_type

  515 tuple_alias_type_list: %empty
  516                      | tuple_alias_type_list ';'
  517                      | tuple_alias_type_list tuple_type ';'

  518 variant_type: "name" ':' type_declaration

  519 variant_type_list: variant_type
  520                  | variant_type_list ';' variant_type

  521 variant_alias_type_list: %empty
  522                        | variant_alias_type_list ';'
  523                        | variant_alias_type_list variant_type ';'

  524 copy_or_move: '='
  525             | "<-"

  526 variable_declaration: variable_name_with_pos_list
  527                     | variable_name_with_pos_list '&'
  528                     | variable_name_with_pos_list ':' type_declaration
  529                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  530                     | variable_name_with_pos_list copy_or_move expr
  531                     | variable_name_with_pos_list copy_or_move expr_pipe

  532 copy_or_move_or_clone: '='
  533                      | "<-"
  534                      | ":="

  535 optional_ref: %empty
  536             | '&'

  537 let_variable_name_with_pos_list: "name"
  538                                | "$i" '(' expr ')'
  539                                | "name" "aka" "name"
  540                                | let_variable_name_with_pos_list ',' "name"
  541                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  542 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  543                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  544                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  545                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  546                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  547 global_variable_declaration_list: %empty

  548 $@36: %empty

  549 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation let_variable_declaration

  550 optional_shared: %empty
  551                | "shared"

  552 optional_public_or_private_variable: %empty
  553                                    | "private"
  554                                    | "public"

  555 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  556 $@37: %empty

  557 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation let_variable_declaration

  558 enum_list: %empty
  559          | enum_list ';'
  560          | enum_list "name" ';'
  561          | enum_list "name" '=' expr ';'

  562 optional_public_or_private_alias: %empty
  563                                 | "private"
  564                                 | "public"

  565 $@38: %empty

  566 single_alias: optional_public_or_private_alias "name" $@38 '=' type_declaration

  567 alias_list: single_alias ';'
  568           | alias_list single_alias ';'

  569 alias_declaration: "typedef" '{' alias_list '}'

  570 $@39: %empty

  571 alias_declaration: "typedef" $@39 single_alias ';'

  572 optional_public_or_private_enum: %empty
  573                                | "private"
  574                                | "public"

  575 enum_name: "name"

  576 $@40: %empty

  577 $@41: %empty

  578 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 '}'

  579 $@42: %empty

  580 $@43: %empty

  581 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

  582 optional_structure_parent: %empty
  583                          | ':' name_in_namespace

  584 optional_sealed: %empty
  585                | "sealed"

  586 structure_name: optional_sealed "name" optional_structure_parent

  587 class_or_struct: "class"
  588                | "struct"

  589 optional_public_or_private_structure: %empty
  590                                     | "private"
  591                                     | "public"

  592 optional_struct_variable_declaration_list: %empty
  593                                          | '{' struct_variable_declaration_list '}'

  594 $@44: %empty

  595 $@45: %empty

  596 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 structure_name $@45 optional_struct_variable_declaration_list

  597 variable_name_with_pos_list: "name"
  598                            | "$i" '(' expr ')'
  599                            | "name" "aka" "name"
  600                            | variable_name_with_pos_list ',' "name"
  601                            | variable_name_with_pos_list ',' "name" "aka" "name"

  602 basic_type_declaration: "bool"
  603                       | "string"
  604                       | "int"
  605                       | "int8"
  606                       | "int16"
  607                       | "int64"
  608                       | "int2"
  609                       | "int3"
  610                       | "int4"
  611                       | "uint"
  612                       | "uint8"
  613                       | "uint16"
  614                       | "uint64"
  615                       | "uint2"
  616                       | "uint3"
  617                       | "uint4"
  618                       | "float"
  619                       | "float2"
  620                       | "float3"
  621                       | "float4"
  622                       | "void"
  623                       | "range"
  624                       | "urange"
  625                       | "range64"
  626                       | "urange64"
  627                       | "double"
  628                       | "bitfield"

  629 enum_basic_type_declaration: "int"
  630                            | "int8"
  631                            | "int16"
  632                            | "uint"
  633                            | "uint8"
  634                            | "uint16"

  635 structure_type_declaration: name_in_namespace

  636 auto_type_declaration: "auto"
  637                      | "auto" '(' "name" ')'
  638                      | "$t" '(' expr ')'

  639 bitfield_bits: "name"
  640              | bitfield_bits ';' "name"

  641 bitfield_alias_bits: %empty
  642                    | bitfield_alias_bits ';'
  643                    | bitfield_alias_bits "name" ';'

  644 $@46: %empty

  645 $@47: %empty

  646 bitfield_type_declaration: "bitfield" '<' $@46 bitfield_bits '>' $@47

  647 table_type_pair: type_declaration
  648                | type_declaration ';' type_declaration

  649 dim_list: '[' expr ']'
  650         | dim_list '[' expr ']'

  651 type_declaration_no_options: basic_type_declaration
  652                            | auto_type_declaration
  653                            | bitfield_type_declaration
  654                            | structure_type_declaration
  655                            | type_declaration_no_options dim_list
  656                            | type_declaration_no_options '[' ']'

  657 $@48: %empty

  658 $@49: %empty

  659 type_declaration_no_options: "type" '<' $@48 type_declaration '>' $@49
  660                            | "typedecl" '(' expr ')'
  661                            | '$' name_in_namespace '(' optional_expr_list ')'

  662 $@50: %empty

  663 type_declaration_no_options: '$' name_in_namespace '<' $@50 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  664                            | type_declaration_no_options '-' '[' ']'
  665                            | type_declaration_no_options "explicit"
  666                            | type_declaration_no_options "const"
  667                            | type_declaration_no_options '-' "const"
  668                            | type_declaration_no_options '&'
  669                            | type_declaration_no_options '-' '&'
  670                            | type_declaration_no_options '#'
  671                            | type_declaration_no_options "implicit"
  672                            | type_declaration_no_options '-' '#'
  673                            | type_declaration_no_options "==" "const"
  674                            | type_declaration_no_options "==" '&'
  675                            | type_declaration_no_options '?'

  676 $@51: %empty

  677 $@52: %empty

  678 type_declaration_no_options: "smart_ptr" '<' $@51 type_declaration '>' $@52
  679                            | type_declaration_no_options "??"

  680 $@53: %empty

  681 $@54: %empty

  682 type_declaration_no_options: "array" '<' $@53 type_declaration '>' $@54

  683 $@55: %empty

  684 $@56: %empty

  685 type_declaration_no_options: "table" '<' $@55 table_type_pair '>' $@56

  686 $@57: %empty

  687 $@58: %empty

  688 type_declaration_no_options: "iterator" '<' $@57 type_declaration '>' $@58
  689                            | "block"

  690 $@59: %empty

  691 $@60: %empty

  692 type_declaration_no_options: "block" '<' $@59 type_declaration '>' $@60

  693 $@61: %empty

  694 $@62: %empty

  695 type_declaration_no_options: "block" '<' $@61 optional_function_argument_list optional_function_type '>' $@62
  696                            | "function"

  697 $@63: %empty

  698 $@64: %empty

  699 type_declaration_no_options: "function" '<' $@63 type_declaration '>' $@64

  700 $@65: %empty

  701 $@66: %empty

  702 type_declaration_no_options: "function" '<' $@65 optional_function_argument_list optional_function_type '>' $@66
  703                            | "lambda"

  704 $@67: %empty

  705 $@68: %empty

  706 type_declaration_no_options: "lambda" '<' $@67 type_declaration '>' $@68

  707 $@69: %empty

  708 $@70: %empty

  709 type_declaration_no_options: "lambda" '<' $@69 optional_function_argument_list optional_function_type '>' $@70

  710 $@71: %empty

  711 $@72: %empty

  712 type_declaration_no_options: "tuple" '<' $@71 tuple_type_list '>' $@72

  713 $@73: %empty

  714 $@74: %empty

  715 type_declaration_no_options: "variant" '<' $@73 variant_type_list '>' $@74

  716 type_declaration: type_declaration_no_options
  717                 | type_declaration '|' type_declaration_no_options
  718                 | type_declaration '|' '#'

  719 $@75: %empty

  720 $@76: %empty

  721 $@77: %empty

  722 $@78: %empty

  723 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@75 "name" $@76 '{' $@77 tuple_alias_type_list $@78 '}'

  724 $@79: %empty

  725 $@80: %empty

  726 $@81: %empty

  727 $@82: %empty

  728 variant_alias_declaration: "variant" optional_public_or_private_alias $@79 "name" $@80 '{' $@81 variant_alias_type_list $@82 '}'

  729 $@83: %empty

  730 $@84: %empty

  731 $@85: %empty

  732 $@86: %empty

  733 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@83 "name" $@84 '{' $@85 bitfield_alias_bits $@86 '}'

  734 make_decl: make_struct_decl
  735          | make_dim_decl
  736          | make_table_decl
  737          | array_comprehension
  738          | make_tuple_call

  739 make_struct_fields: "name" copy_or_move expr
  740                   | "name" ":=" expr
  741                   | make_struct_fields ',' "name" copy_or_move expr
  742                   | make_struct_fields ',' "name" ":=" expr
  743                   | "$f" '(' expr ')' copy_or_move expr
  744                   | "$f" '(' expr ')' ":=" expr
  745                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  746                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  747 make_struct_dim: make_struct_fields
  748                | make_struct_dim ';' make_struct_fields

  749 optional_block: %empty
  750               | "where" expr_block

  751 optional_trailing_semicolon_cur_cur: '}' '}'
  752                                    | ";}}"

  753 optional_trailing_semicolon_cur_sqr: '}' ']'
  754                                    | ";}]"

  755 optional_trailing_semicolon_sqr_sqr: ']' ']'
  756                                    | ";]]"

  757 optional_trailing_delim_sqr_sqr: ']' ']'
  758                                | ";]]"
  759                                | ",]]"

  760 optional_trailing_delim_cur_sqr: '}' ']'
  761                                | ";}]"
  762                                | ",}]"

  763 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  764                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  765                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  766                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  767                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  768                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  769 $@87: %empty

  770 $@88: %empty

  771 make_struct_decl: "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim ')'

  772 $@89: %empty

  773 $@90: %empty

  774 make_struct_decl: "class" '<' $@89 type_declaration_no_options '>' $@90 '(' make_struct_dim ')'

  775 $@91: %empty

  776 $@92: %empty

  777 make_struct_decl: "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim ')'

  778 $@93: %empty

  779 $@94: %empty

  780 make_struct_decl: "default" '<' $@93 type_declaration_no_options '>' $@94

  781 make_tuple: expr
  782           | expr "=>" expr
  783           | make_tuple ',' expr

  784 make_map_tuple: expr "=>" expr
  785               | expr

  786 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  787 $@95: %empty

  788 $@96: %empty

  789 make_tuple_call: "tuple" '<' $@95 type_declaration_no_options '>' $@96 '(' make_struct_dim ')'

  790 make_dim: make_tuple
  791         | make_dim ';' make_tuple

  792 make_dim_decl: '[' expr_list optional_comma ']'
  793              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  794              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  795              | "array" '(' expr_list optional_comma ')'

  796 $@97: %empty

  797 $@98: %empty

  798 make_dim_decl: "array" '<' $@97 type_declaration_no_options '>' $@98 '(' expr_list optional_comma ')'
  799              | "fixed_array" '(' expr_list optional_comma ')'

  800 $@99: %empty

  801 $@100: %empty

  802 make_dim_decl: "fixed_array" '<' $@99 type_declaration_no_options '>' $@100 '(' expr_list optional_comma ')'

  803 make_table: make_map_tuple
  804           | make_table ';' make_map_tuple

  805 expr_map_tuple_list: make_map_tuple
  806                    | expr_map_tuple_list ',' make_map_tuple

  807 make_table_decl: '{' expr_map_tuple_list optional_comma '}'
  808                | "{{" make_table optional_trailing_semicolon_cur_cur
  809                | "table" '(' expr_map_tuple_list optional_comma ')'
  810                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  811                | "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  812 array_comprehension_where: %empty
  813                          | ';' "where" expr

  814 optional_comma: %empty
  815               | ','

  816 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'
  817                    | "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  818                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'
  819                    | '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'
  820                    | "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 109 125 391
    '#' (35) 670 672 718
    '$' (36) 20 315 661 663
    '%' (37) 35 42 145 403
    '&' (38) 153 318 410 527 536 668 669 674
    '(' (40) 100 107 113 120 121 252 267 268 269 307 308 309 361 362 363 364 366 376 377 421 429 430 431 432 433 435 436 437 438 467 469 470 471 472 473 475 476 477 478 479 480 481 482 483 484 508 538 598 637 638 660 661 663 743 744 745 746 765 766 768 771 774 777 786 789 795 798 799 802 809 810 811
    ')' (41) 100 107 113 120 121 252 267 268 269 307 308 309 361 362 363 364 366 376 377 421 429 430 431 432 433 435 436 437 438 467 469 470 471 472 473 475 476 477 478 479 480 481 482 483 484 508 538 598 637 638 660 661 663 743 744 745 746 765 766 768 771 774 777 786 789 795 798 799 802 809 810 811
    '*' (42) 143 401 434
    '+' (43) 141 393 399
    ',' (44) 51 89 102 116 290 311 323 362 540 541 600 601 741 742 745 746 783 806 815
    '-' (45) 142 394 400 664 667 669 672
    '.' (46) 43 170 172 173 374 375 376 377 380 423 425 427 477 479 480
    '/' (47) 44 144 402
    ':' (58) 53 54 123 291 440 512 518 528 529 542 543 544 581 583
    ';' (59) 15 16 74 218 222 223 230 231 236 237 238 246 276 281 291 292 309 500 502 505 510 514 516 517 520 522 523 542 543 545 559 560 561 567 568 571 640 642 643 648 748 791 804 811 813 816 817 818 819 820
    '<' (60) 146 249 252 264 297 300 303 306 308 309 370 373 404 437 438 443 449 454 646 659 663 678 682 685 688 692 695 699 702 706 709 712 715 771 774 777 780 789 798 802 810 811
    '=' (61) 81 93 94 95 96 97 98 100 319 337 355 356 357 524 532 561 566
    '>' (62) 147 249 252 264 297 300 303 306 308 309 370 373 405 437 438 443 449 454 646 659 663 678 682 685 688 692 695 699 702 706 709 712 715 771 774 777 780 789 798 802 810 811
    '?' (63) 182 183 440 451 454 455 482 675
    '@' (64) 316 317 367 370 373 484
    '[' (91) 118 168 361 362 422 423 505 649 650 656 664 792 816
    ']' (93) 118 168 169 291 292 325 361 362 422 423 424 425 486 505 649 650 656 664 753 755 757 760 792 816 817 818
    '^' (94) 155 412
    '{' (123) 216 217 555 569 578 581 593 723 728 733 807 819
    '|' (124) 154 411 717 718
    '}' (125) 216 217 555 569 578 581 593 723 728 733 751 753 760 807 818 819 820
    '~' (126) 126 392
    error (256) 241 380
    "lexer error" (258)
    "struct" (259) 588 771
    "class" (260) 587 774
    "let" (261) 285
    "def" (262) 209 502 504
    "while" (263) 78
    "if" (264) 62 74
    "static_if" (265) 63
    "else" (266) 60 66
    "for" (267) 76 816 817 818 819 820
    "recover" (268) 284
    "true" (269) 86 97 387
    "false" (270) 87 98 388
    "new" (271) 266 267 268 269 270
    "typeinfo" (272) 307 308 309
    "type" (273) 91 306 443 449 454 659
    "in" (274) 76 92 816 817 818 819 820
    "is" (275) 178 180 443 444 445 483
    "as" (276) 46 179 181 182 183 446 449 450 451 454 455 481 482
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 682 795 798
    "return" (280) 273 274 275 277 278
    "null" (281) 381
    "break" (282) 271
    "try" (283) 284
    "options" (284) 36
    "table" (285) 685 809 810 811
    "expect" (286) 49
    "const" (287) 491 666 667 673
    "require" (288) 37 104
    "operator" (289) 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183
    "enum" (290) 578 581
    "finally" (291) 217
    "delete" (292) 176 260 261
    "deref" (293) 435
    "typedef" (294) 569 571
    "typedecl" (295) 660
    "with" (296) 79
    "aka" (297) 539 541 599 601
    "assume" (298) 81
    "cast" (299) 297
    "override" (300) 488
    "abstract" (301) 502
    "upcast" (302) 300
    "iterator" (303) 688
    "var" (304) 286 507
    "addr" (305) 436
    "continue" (306) 272
    "where" (307) 750 813
    "pass" (308) 238
    "reinterpret" (309) 303
    "module" (310) 22
    "public" (311) 18 48 212 493 554 564 574 591
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 671
    "explicit" (315) 261 665
    "shared" (316) 551
    "private" (317) 19 105 211 494 553 563 573 590
    "smart_ptr" (318) 678
    "unsafe" (319) 77 467
    "inscope" (320) 287
    "static" (321) 496
    "fixed_array" (322) 799 802
    "default" (323) 780
    "bool" (324) 184 602
    "void" (325) 622
    "string" (326) 185 603
    "auto" (327) 636 637
    "int" (328) 186 604 629
    "int2" (329) 187 608
    "int3" (330) 188 609
    "int4" (331) 189 610
    "uint" (332) 190 611 632
    "bitfield" (333) 628 646 733
    "uint2" (334) 191 615
    "uint3" (335) 192 616
    "uint4" (336) 193 617
    "float" (337) 194 618
    "float2" (338) 195 619
    "float3" (339) 196 620
    "float4" (340) 197 621
    "range" (341) 198 623
    "urange" (342) 199 624
    "range64" (343) 200 625
    "urange64" (344) 201 626
    "block" (345) 689 692 695
    "int64" (346) 202 607
    "uint64" (347) 203 614
    "double" (348) 204 627
    "function" (349) 696 699 702
    "lambda" (350) 703 706 709
    "int8" (351) 205 605 630
    "uint8" (352) 206 612 633
    "int16" (353) 207 606 631
    "uint16" (354) 208 613 634
    "tuple" (355) 712 723 786 789
    "variant" (356) 715 728 777
    "generator" (357) 437 438
    "yield" (358) 279 280 282 283
    "sealed" (359) 489 585
    "+=" (360) 127 346
    "-=" (361) 128 347
    "/=" (362) 130 349
    "*=" (363) 129 348
    "%=" (364) 131 350
    "&=" (365) 132 340
    "|=" (366) 133 341
    "^=" (367) 134 342
    "<<" (368) 160 395
    ">>" (369) 161 396
    "++" (370) 156 158 417 419
    "--" (371) 157 159 418 420
    "<=" (372) 151 408
    "<<=" (373) 162 351
    ">>=" (374) 163 352
    ">=" (375) 152 409
    "==" (376) 149 406 673 674
    "!=" (377) 150 407
    "->" (378) 363 364
    "<-" (379) 275 278 280 283 314 320 338 358 359 360 525 533
    "??" (380) 177 439 679
    "?." (381) 171 174 426 427 478 480
    "?[" (382) 169 424 425
    "<|" (383) 463
    " <|" (384) 253
    "$ <|" (385) 256 357 360
    "@ <|" (386) 254 355 358
    "@@ <|" (387) 255 356 359
    "|>" (388) 114 464 465
    ":=" (389) 173 175 321 339 534 740 742 744 746
    "<<<" (390) 164 397
    ">>>" (391) 165 398
    "<<<=" (392) 166 353
    ">>>=" (393) 167 354
    "=>" (394) 313 314 782 784
    "::" (395) 258 259
    "&&" (396) 110 138 413
    "||" (397) 111 139 414
    "^^" (398) 112 140 415
    "&&=" (399) 135 343
    "||=" (400) 136 344
    "^^=" (401) 137 345
    ".." (402) 148 416
    "$$" (403) 469
    "$i" (404) 366 470 538 598
    "$v" (405) 471
    "$b" (406) 472
    "$a" (407) 473 508
    "$t" (408) 638
    "$c" (409) 475 476 484
    "$f" (410) 477 478 479 480 481 482 483 743 744 745 746
    "..." (411) 474
    "[[" (412) 291 292 325 486 763 764 765 766 793 817
    "[{" (413) 767 768 794 818
    "{{" (414) 808 820
    "integer constant" <i> (415) 52 53 54 55 84 95 329
    "long integer constant" <i64> (416) 331
    "unsigned integer constant" <ui> (417) 330
    "unsigned long integer constant" <ui64> (418) 332
    "unsigned int8 constant" <ui> (419) 333
    "floating point constant" <fd> (420) 85 96 334
    "double constant" <d> (421) 335
    "name" <s> (422) 21 38 46 81 83 90 94 124 172 173 174 180 181 183 257 258 259 289 290 308 309 318 319 320 321 363 364 374 375 376 377 426 427 445 446 451 466 512 518 537 539 540 541 560 561 566 575 586 597 599 600 601 637 639 640 643 723 728 733 739 740 741 742
    "keyword" <s> (423) 39 242 249
    "type function" <s> (424) 40 252
    "start of the string" (425) 27 31
    STRING_CHARACTER <ch> (426) 23 25 32 33
    STRING_CHARACTER_ESC (427) 24 26
    "end of the string" (428) 27 31
    "{" (429) 30
    "}" (430) 30
    "end of failed eader macro" (431)
    ";}}" (432) 752
    ";}]" (433) 754 761
    ";]]" (434) 756 758
    ",]]" (435) 759
    ",}]" (436) 762
    UNARY_MINUS (437)
    UNARY_PLUS (438)
    PRE_INC (439)
    PRE_DEC (440)
    POST_INC (441)
    POST_DEC (442)
    DEREF (443)


Nonterminals, with rules where they appear

    $accept (216)
        on left: 0
    program (217)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (218)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (219)
        on left: 17 18 19
        on right: 22
    module_name <s> (220)
        on left: 20 21
        on right: 22
    module_declaration (221)
        on left: 22
        on right: 2
    character_sequence <s> (222)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (223)
        on left: 27
        on right: 82 93
    string_builder_body <pExpression> (224)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (225)
        on left: 31
        on right: 385
    reader_character_sequence (226)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (227)
        on left: 35
        on right: 16 384
    $@1 (228)
        on left: 34
        on right: 35
    options_declaration (229)
        on left: 36
        on right: 9
    require_declaration (230)
        on left: 37
        on right: 8
    keyword_or_name <s> (231)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (232)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (233)
        on left: 45 46
        on right: 37
    is_public_module <b> (234)
        on left: 47 48
        on right: 45 46
    expect_declaration (235)
        on left: 49
        on right: 7
    expect_list (236)
        on left: 50 51
        on right: 49 51
    expect_error (237)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (238)
        on left: 54
        on right: 236
    expression_goto <pExpression> (239)
        on left: 55 56
        on right: 237
    elif_or_static_elif <b> (240)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (241)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (242)
        on left: 62 63
        on right: 72
    expression_else_one_liner <pExpression> (243)
        on left: 64 66
        on right: 74
    $@2 (244)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (245)
        on left: 67 68 69 70 71
        on right: 66 74
    expression_if_then_else <pExpression> (246)
        on left: 72 74
        on right: 234
    $@3 (247)
        on left: 73
        on right: 74
    expression_for_loop <pExpression> (248)
        on left: 76
        on right: 229
    $@4 (249)
        on left: 75
        on right: 76
    expression_unsafe <pExpression> (250)
        on left: 77
        on right: 226
    expression_while_loop <pExpression> (251)
        on left: 78
        on right: 225
    expression_with <pExpression> (252)
        on left: 79
        on right: 227
    expression_with_alias <pExpression> (253)
        on left: 81
        on right: 228
    $@5 (254)
        on left: 80
        on right: 81
    annotation_argument_value <aa> (255)
        on left: 82 83 84 85 86 87
        on right: 88 89
    annotation_argument_value_list <aaList> (256)
        on left: 88 89
        on right: 89 100
    annotation_argument_name <s> (257)
        on left: 90 91 92
        on right: 93 94 95 96 97 98 99 100
    annotation_argument <aa> (258)
        on left: 93 94 95 96 97 98 99 100
        on right: 101 102
    annotation_argument_list <aaList> (259)
        on left: 101 102
        on right: 36 102 107 486
    annotation_declaration_name <s> (260)
        on left: 103 104 105
        on right: 106 107
    annotation_declaration_basic <fa> (261)
        on left: 106 107
        on right: 108
    annotation_declaration <fa> (262)
        on left: 108 109 110 111 112 113 114
        on right: 109 110 111 112 113 114 115 116
    annotation_list <faList> (263)
        on left: 115 116
        on right: 116 118 505
    optional_annotation_list <faList> (264)
        on left: 117 118
        on right: 209 327 328 502 504 578 581 596
    optional_function_argument_list <pVarDeclList> (265)
        on left: 119 120 121
        on right: 213 327 328 373 695 702 709
    optional_function_type <pTypeDecl> (266)
        on left: 122 123
        on right: 213 327 328 373 695 702 709
    function_name <s> (267)
        on left: 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208
        on right: 213
    global_function_declaration (268)
        on left: 209
        on right: 6
    optional_public_or_private_function <b> (269)
        on left: 210 211 212
        on right: 215
    function_declaration_header <pFuncDecl> (270)
        on left: 213
        on right: 215 502 504
    function_declaration <pFuncDecl> (271)
        on left: 215
        on right: 209
    $@6 (272)
        on left: 214
        on right: 215
    expression_block <pExpression> (273)
        on left: 216 217
        on right: 60 61 72 76 77 78 79 215 242 284 312 326 504
    expression_any <pExpression> (274)
        on left: 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238
        on right: 240
    expressions <pExpression> (275)
        on left: 239 240 241
        on right: 216 217 240 241
    expr_keyword <pExpression> (276)
        on left: 242
        on right: 220
    optional_expr_list <pExpression> (277)
        on left: 243 244
        on right: 661 663
    type_declaration_no_options_list <pTypeDeclList> (278)
        on left: 245 246
        on right: 246 249 252 663
    expression_keyword <pExpression> (279)
        on left: 249 252
        on right: 468
    $@7 (280)
        on left: 247
        on right: 249
    $@8 (281)
        on left: 248
        on right: 249
    $@9 (282)
        on left: 250
        on right: 252
    $@10 (283)
        on left: 251
        on right: 252
    expr_pipe <pExpression> (284)
        on left: 253 254 255 256
        on right: 219 277 278 282 283 531 544 546
    name_in_namespace <s> (285)
        on left: 257 258 259
        on right: 35 103 307 308 309 361 362 365 382 429 430 431 466 583 635 661 663
    expression_delete <pExpression> (286)
        on left: 260 261
        on right: 223
    new_type_declaration <pTypeDecl> (287)
        on left: 264 265
        on right: 266 267 268 269
    $@11 (288)
        on left: 262
        on right: 264
    $@12 (289)
        on left: 263
        on right: 264
    expr_new <pExpression> (290)
        on left: 266 267 268 269 270
        on right: 459
    expression_break <pExpression> (291)
        on left: 271
        on right: 70 230
    expression_continue <pExpression> (292)
        on left: 272
        on right: 71 231
    expression_return_no_pipe <pExpression> (293)
        on left: 273 274 275
        on right: 68 276
    expression_return <pExpression> (294)
        on left: 276 277 278
        on right: 232
    expression_yield_no_pipe <pExpression> (295)
        on left: 279 280
        on right: 69 281
    expression_yield <pExpression> (296)
        on left: 281 282 283
        on right: 233
    expression_try_catch <pExpression> (297)
        on left: 284
        on right: 235
    kwd_let <b> (298)
        on left: 285 286
        on right: 293 294 555 557
    optional_in_scope <b> (299)
        on left: 287 288
        on right: 293 294
    tuple_expansion <pNameList> (300)
        on left: 289 290
        on right: 290 291 292
    tuple_expansion_variable_declaration <pVarDecl> (301)
        on left: 291 292
        on right: 294
    expression_let <pExpression> (302)
        on left: 293 294
        on right: 224
    expr_cast <pExpression> (303)
        on left: 297 300 303
        on right: 458
    $@13 (304)
        on left: 295
        on right: 297
    $@14 (305)
        on left: 296
        on right: 297
    $@15 (306)
        on left: 298
        on right: 300
    $@16 (307)
        on left: 299
        on right: 300
    $@17 (308)
        on left: 301
        on right: 303
    $@18 (309)
        on left: 302
        on right: 303
    expr_type_decl <pExpression> (310)
        on left: 306
        on right: 457
    $@19 (311)
        on left: 304
        on right: 306
    $@20 (312)
        on left: 305
        on right: 306
    expr_type_info <pExpression> (313)
        on left: 307 308 309
        on right: 456
    expr_list <pExpression> (314)
        on left: 310 311
        on right: 76 244 252 268 274 275 311 362 364 377 421 431 433 476 786 792 795 798 799 802 816 817 818 819 820
    block_or_simple_block <pExpression> (315)
        on left: 312 313 314
        on right: 327 328
    block_or_lambda <i> (316)
        on left: 315 316 317
        on right: 327 328
    capture_entry <pCapt> (317)
        on left: 318 319 320 321
        on right: 322 323
    capture_list <pCaptList> (318)
        on left: 322 323
        on right: 323 325
    optional_capture_list <pCaptList> (319)
        on left: 324 325
        on right: 327 328 437 438
    expr_block <pExpression> (320)
        on left: 326 327
        on right: 253 254 255 256 355 356 357 358 359 360 750
    expr_full_block <pExpression> (321)
        on left: 328
        on right: 462
    expr_numeric_const <pExpression> (322)
        on left: 329 330 331 332 333 334 335
        on right: 383
    expr_assign <pExpression> (323)
        on left: 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354
        on right: 222 253
    expr_assign_pipe <pExpression> (324)
        on left: 355 356 357 358 359 360
        on right: 221
    expr_named_call <pExpression> (325)
        on left: 361 362
        on right: 461
    expr_method_call <pExpression> (326)
        on left: 363 364
        on right: 460
    func_addr_name <pExpression> (327)
        on left: 365 366
        on right: 367 370 373
    func_addr_expr <pExpression> (328)
        on left: 367 370 373
        on right: 428
    $@21 (329)
        on left: 368
        on right: 370
    $@22 (330)
        on left: 369
        on right: 370
    $@23 (331)
        on left: 371
        on right: 373
    $@24 (332)
        on left: 372
        on right: 373
    expr_field <pExpression> (333)
        on left: 374 375 376 377 380
        on right: 389
    $@25 (334)
        on left: 378
        on right: 380
    $@26 (335)
        on left: 379
        on right: 380
    expr <pExpression> (336)
        on left: 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 443 444 445 446 449 450 451 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468
        on right
    $@27 (337)
        on left: 441
        on right: 443
    $@28 (338)
        on left: 442
        on right: 443
    $@29 (339)
        on left: 447
        on right: 449
    $@30 (340)
        on left: 448
        on right: 449
    $@31 (341)
        on left: 452
        on right: 454
    $@32 (342)
        on left: 453
        on right: 454
    expr_mtag <pExpression> (343)
        on left: 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484
        on right: 390
    optional_field_annotation <aaList> (344)
        on left: 485 486
        on right: 497 506 507 549 557
    optional_override <i> (345)
        on left: 487 488 489
        on right: 497 504
    optional_constant <b> (346)
        on left: 490 491
        on right: 502 504
    optional_public_or_private_member_variable <b> (347)
        on left: 492 493 494
        on right: 497 502 504
    optional_static_member_variable <b> (348)
        on left: 495 496
        on right: 497 504
    structure_variable_declaration <pVarDecl> (349)
        on left: 497
        on right: 500
    struct_variable_declaration_list <pVarDeclList> (350)
        on left: 498 500 502 504 505
        on right: 500 502 504 505 593
    $@33 (351)
        on left: 499
        on right: 500
    $@34 (352)
        on left: 501
        on right: 502
    $@35 (353)
        on left: 503
        on right: 504
    function_argument_declaration <pVarDecl> (354)
        on left: 506 507 508
        on right: 509 510
    function_argument_list <pVarDeclList> (355)
        on left: 509 510
        on right: 121 510
    tuple_type <pVarDecl> (356)
        on left: 511 512
        on right: 513 514 517
    tuple_type_list <pVarDeclList> (357)
        on left: 513 514
        on right: 514 712
    tuple_alias_type_list <pVarDeclList> (358)
        on left: 515 516 517
        on right: 516 517 723
    variant_type <pVarDecl> (359)
        on left: 518
        on right: 519 520 523
    variant_type_list <pVarDeclList> (360)
        on left: 519 520
        on right: 520 715
    variant_alias_type_list <pVarDeclList> (361)
        on left: 521 522 523
        on right: 522 523 728
    copy_or_move <b> (362)
        on left: 524 525
        on right: 529 530 531 739 741 743 745
    variable_declaration <pVarDecl> (363)
        on left: 526 527 528 529 530 531
        on right: 497 506 507
    copy_or_move_or_clone <i> (364)
        on left: 532 533 534
        on right: 291 292 543 544 545 546
    optional_ref <b> (365)
        on left: 535 536
        on right: 292 545 546
    let_variable_name_with_pos_list <pNameWithPosList> (366)
        on left: 537 538 539 540 541
        on right: 540 541 542 543 544 545 546
    let_variable_declaration <pVarDecl> (367)
        on left: 542 543 544 545 546
        on right: 293 549 557
    global_variable_declaration_list <pVarDeclList> (368)
        on left: 547 549
        on right: 549 555
    $@36 (369)
        on left: 548
        on right: 549
    optional_shared <b> (370)
        on left: 550 551
        on right: 22 555 557
    optional_public_or_private_variable <b> (371)
        on left: 552 553 554
        on right: 555 557
    global_let (372)
        on left: 555 557
        on right: 5
    $@37 (373)
        on left: 556
        on right: 557
    enum_list <pEnum> (374)
        on left: 558 559 560 561
        on right: 559 560 561 578 581
    optional_public_or_private_alias <b> (375)
        on left: 562 563 564
        on right: 566 723 728 733
    single_alias (376)
        on left: 566
        on right: 567 568 571
    $@38 (377)
        on left: 565
        on right: 566
    alias_list (378)
        on left: 567 568
        on right: 568 569
    alias_declaration (379)
        on left: 569 571
        on right: 10
    $@39 (380)
        on left: 570
        on right: 571
    optional_public_or_private_enum <b> (381)
        on left: 572 573 574
        on right: 578 581
    enum_name <pEnum> (382)
        on left: 575
        on right: 578 581
    enum_declaration (383)
        on left: 578 581
        on right: 4
    $@40 (384)
        on left: 576
        on right: 578
    $@41 (385)
        on left: 577
        on right: 578
    $@42 (386)
        on left: 579
        on right: 581
    $@43 (387)
        on left: 580
        on right: 581
    optional_structure_parent <s> (388)
        on left: 582 583
        on right: 586
    optional_sealed <b> (389)
        on left: 584 585
        on right: 586
    structure_name <pStructure> (390)
        on left: 586
        on right: 596
    class_or_struct <b> (391)
        on left: 587 588
        on right: 596
    optional_public_or_private_structure <b> (392)
        on left: 589 590 591
        on right: 596
    optional_struct_variable_declaration_list <pVarDeclList> (393)
        on left: 592 593
        on right: 596
    structure_declaration (394)
        on left: 596
        on right: 3
    $@44 (395)
        on left: 594
        on right: 596
    $@45 (396)
        on left: 595
        on right: 596
    variable_name_with_pos_list <pNameWithPosList> (397)
        on left: 597 598 599 600 601
        on right: 76 526 527 528 529 530 531 600 601 816 817 818 819 820
    basic_type_declaration <type> (398)
        on left: 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628
        on right: 432 433 444 450 455 465 651
    enum_basic_type_declaration <type> (399)
        on left: 629 630 631 632 633 634
        on right: 581
    structure_type_declaration <pTypeDecl> (400)
        on left: 635
        on right: 265 654
    auto_type_declaration <pTypeDecl> (401)
        on left: 636 637 638
        on right: 652
    bitfield_bits <pNameList> (402)
        on left: 639 640
        on right: 640 646
    bitfield_alias_bits <pNameList> (403)
        on left: 641 642 643
        on right: 642 643 733
    bitfield_type_declaration <pTypeDecl> (404)
        on left: 646
        on right: 653
    $@46 (405)
        on left: 644
        on right: 646
    $@47 (406)
        on left: 645
        on right: 646
    table_type_pair <aTypePair> (407)
        on left: 647 648
        on right: 685
    dim_list <pTypeDecl> (408)
        on left: 649 650
        on right: 650 655
    type_declaration_no_options <pTypeDecl> (409)
        on left: 651 652 653 654 655 656 659 660 661 663 664 665 666 667 668 669 670 671 672 673 674 675 678 679 682 685 688 689 692 695 696 699 702 703 706 709 712 715
        on right: 291 297 300 303 370 437 438 443 542 543 544 655 656 664 665 666 667 668 669 670 671 672 673 674 675 679 716 717 763 764 765 766 767 768 771 774 777 780 789 793 794 798 802 810 811
    $@48 (410)
        on left: 657
        on right: 659
    $@49 (411)
        on left: 658
        on right: 659
    $@50 (412)
        on left: 662
        on right: 663
    $@51 (413)
        on left: 676
        on right: 678
    $@52 (414)
        on left: 677
        on right: 678
    $@53 (415)
        on left: 680
        on right: 682
    $@54 (416)
        on left: 681
        on right: 682
    $@55 (417)
        on left: 683
        on right: 685
    $@56 (418)
        on left: 684
        on right: 685
    $@57 (419)
        on left: 686
        on right: 688
    $@58 (420)
        on left: 687
        on right: 688
    $@59 (421)
        on left: 690
        on right: 692
    $@60 (422)
        on left: 691
        on right: 692
    $@61 (423)
        on left: 693
        on right: 695
    $@62 (424)
        on left: 694
        on right: 695
    $@63 (425)
        on left: 697
        on right: 699
    $@64 (426)
        on left: 698
        on right: 699
    $@65 (427)
        on left: 700
        on right: 702
    $@66 (428)
        on left: 701
        on right: 702
    $@67 (429)
        on left: 704
        on right: 706
    $@68 (430)
        on left: 705
        on right: 706
    $@69 (431)
        on left: 707
        on right: 709
    $@70 (432)
        on left: 708
        on right: 709
    $@71 (433)
        on left: 710
        on right: 712
    $@72 (434)
        on left: 711
        on right: 712
    $@73 (435)
        on left: 713
        on right: 715
    $@74 (436)
        on left: 714
        on right: 715
    type_declaration <pTypeDecl> (437)
        on left: 716 717 718
        on right: 123 245 246 264 306 449 454 511 512 518 528 529 566 647 648 659 678 682 688 692 699 706 717 718
    tuple_alias_declaration (438)
        on left: 723
        on right: 12
    $@75 (439)
        on left: 719
        on right: 723
    $@76 (440)
        on left: 720
        on right: 723
    $@77 (441)
        on left: 721
        on right: 723
    $@78 (442)
        on left: 722
        on right: 723
    variant_alias_declaration (443)
        on left: 728
        on right: 11
    $@79 (444)
        on left: 724
        on right: 728
    $@80 (445)
        on left: 725
        on right: 728
    $@81 (446)
        on left: 726
        on right: 728
    $@82 (447)
        on left: 727
        on right: 728
    bitfield_alias_declaration (448)
        on left: 733
        on right: 13
    $@83 (449)
        on left: 729
        on right: 733
    $@84 (450)
        on left: 730
        on right: 733
    $@85 (451)
        on left: 731
        on right: 733
    $@86 (452)
        on left: 732
        on right: 733
    make_decl <pExpression> (453)
        on left: 734 735 736 737 738
        on right: 270 386
    make_struct_fields <pMakeStruct> (454)
        on left: 739 740 741 742 743 744 745 746
        on right: 361 362 741 742 745 746 747 748
    make_struct_dim <pExpression> (455)
        on left: 747 748
        on right: 269 430 748 763 766 767 768 771 774 777 789
    optional_block <pExpression> (456)
        on left: 749 750
        on right: 763 764 765 766 767 768
    optional_trailing_semicolon_cur_cur (457)
        on left: 751 752
        on right: 808
    optional_trailing_semicolon_cur_sqr (458)
        on left: 753 754
        on right: 794
    optional_trailing_semicolon_sqr_sqr (459)
        on left: 755 756
        on right: 793
    optional_trailing_delim_sqr_sqr (460)
        on left: 757 758 759
        on right: 763 764 765 766
    optional_trailing_delim_cur_sqr (461)
        on left: 760 761 762
        on right: 767 768
    make_struct_decl <pExpression> (462)
        on left: 763 764 765 766 767 768 771 774 777 780
        on right: 734
    $@87 (463)
        on left: 769
        on right: 771
    $@88 (464)
        on left: 770
        on right: 771
    $@89 (465)
        on left: 772
        on right: 774
    $@90 (466)
        on left: 773
        on right: 774
    $@91 (467)
        on left: 775
        on right: 777
    $@92 (468)
        on left: 776
        on right: 777
    $@93 (469)
        on left: 778
        on right: 780
    $@94 (470)
        on left: 779
        on right: 780
    make_tuple <pExpression> (471)
        on left: 781 782 783
        on right: 783 790 791
    make_map_tuple <pExpression> (472)
        on left: 784 785
        on right: 803 804 805 806 819 820
    make_tuple_call <pExpression> (473)
        on left: 786 789
        on right: 738
    $@95 (474)
        on left: 787
        on right: 789
    $@96 (475)
        on left: 788
        on right: 789
    make_dim <pExpression> (476)
        on left: 790 791
        on right: 791 793 794
    make_dim_decl <pExpression> (477)
        on left: 792 793 794 795 798 799 802
        on right: 735
    $@97 (478)
        on left: 796
        on right: 798
    $@98 (479)
        on left: 797
        on right: 798
    $@99 (480)
        on left: 800
        on right: 802
    $@100 (481)
        on left: 801
        on right: 802
    make_table <pExpression> (482)
        on left: 803 804
        on right: 804 808
    expr_map_tuple_list <pExpression> (483)
        on left: 805 806
        on right: 806 807 809 810 811
    make_table_decl <pExpression> (484)
        on left: 807 808 809 810 811
        on right: 736
    array_comprehension_where <pExpression> (485)
        on left: 812 813
        on right: 816 817 818 819 820
    optional_comma <b> (486)
        on left: 814 815
        on right: 421 786 792 795 798 799 802 807 809 810 811
    array_comprehension <pExpression> (487)
        on left: 816 817 818 819 820
        on right: 737


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "tuple"     shift, and go to state 11
    "variant"   shift, and go to state 12
    '%'         shift, and go to state 13
    '['         shift, and go to state 14
    ';'         shift, and go to state 15

    $default  reduce using rule 117 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  285 kwd_let: "let" .

    $default  reduce using rule 285 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  569 alias_declaration: "typedef" . '{' alias_list '}'
  571                  | "typedef" . $@39 single_alias ';'

    '{'  shift, and go to state 48

    $default  reduce using rule 570 ($@39)

    $@39  go to state 49


State 8

  286 kwd_let: "var" .

    $default  reduce using rule 286 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  733 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@83 "name" $@84 '{' $@85 bitfield_alias_bits $@86 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 562 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  723 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@75 "name" $@76 '{' $@77 tuple_alias_type_list $@78 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 562 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  728 variant_alias_declaration: "variant" . optional_public_or_private_alias $@79 "name" $@80 '{' $@81 variant_alias_type_list $@82 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 562 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 14

  118 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 15

   15 program: program ';' .

    $default  reduce using rule 15 (program)


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . ';'

    ';'  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  209 global_function_declaration: optional_annotation_list . "def" function_declaration
  578 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 '}'
  581                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'
  596 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@44 structure_name $@45 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  555 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  557           | kwd_let . optional_shared optional_public_or_private_variable $@37 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 550 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   91 annotation_argument_name: "type" .

    $default  reduce using rule 91 (annotation_argument_name)


State 33

   92 annotation_argument_name: "in" .

    $default  reduce using rule 92 (annotation_argument_name)


State 34

   90 annotation_argument_name: "name" .

    $default  reduce using rule 90 (annotation_argument_name)


State 35

   93 annotation_argument: annotation_argument_name . '=' string_constant
   94                    | annotation_argument_name . '=' "name"
   95                    | annotation_argument_name . '=' "integer constant"
   96                    | annotation_argument_name . '=' "floating point constant"
   97                    | annotation_argument_name . '=' "true"
   98                    | annotation_argument_name . '=' "false"
   99                    | annotation_argument_name .
  100                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 99 (annotation_argument)


State 36

  101 annotation_argument_list: annotation_argument .

    $default  reduce using rule 101 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  569 alias_declaration: "typedef" '{' . alias_list '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 562 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  571 alias_declaration: "typedef" $@39 . single_alias ';'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 562 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 550 (optional_shared)

    optional_shared  go to state 93


State 53

  564 optional_public_or_private_alias: "public" .

    $default  reduce using rule 564 (optional_public_or_private_alias)


State 54

  563 optional_public_or_private_alias: "private" .

    $default  reduce using rule 563 (optional_public_or_private_alias)


State 55

  733 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@83 "name" $@84 '{' $@85 bitfield_alias_bits $@86 '}'

    $default  reduce using rule 729 ($@83)

    $@83  go to state 94


State 56

  723 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@75 "name" $@76 '{' $@77 tuple_alias_type_list $@78 '}'

    $default  reduce using rule 719 ($@75)

    $@75  go to state 95


State 57

  728 variant_alias_declaration: "variant" optional_public_or_private_alias . $@79 "name" $@80 '{' $@81 variant_alias_type_list $@82 '}'

    $default  reduce using rule 724 ($@79)

    $@79  go to state 96


State 58

  259 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  257 name_in_namespace: "name" .
  258                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 257 (name_in_namespace)]
    $default  reduce using rule 257 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 99


State 61

  104 annotation_declaration_name: "require" .

    $default  reduce using rule 104 (annotation_declaration_name)


State 62

  105 annotation_declaration_name: "private" .

    $default  reduce using rule 105 (annotation_declaration_name)


State 63

  114 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  109 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  113 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  106 annotation_declaration_basic: annotation_declaration_name .
  107                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 106 (annotation_declaration_basic)


State 67

  108 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 108 (annotation_declaration)


State 68

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  115 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 115 (annotation_list)


State 69

  116 annotation_list: annotation_list . ',' annotation_declaration
  118 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  103 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 103 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader ';' .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  588 class_or_struct: "struct" .

    $default  reduce using rule 588 (class_or_struct)


State 73

  587 class_or_struct: "class" .

    $default  reduce using rule 587 (class_or_struct)


State 74

  209 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 210 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  578 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 '}'
  581                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 572 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  596 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@44 structure_name $@45 optional_struct_variable_declaration_list

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 589 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  551 optional_shared: "shared" .

    $default  reduce using rule 551 (optional_shared)


State 78

  555 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  557           | kwd_let optional_shared . optional_public_or_private_variable $@37 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 552 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   93 annotation_argument: annotation_argument_name '=' . string_constant
   94                    | annotation_argument_name '=' . "name"
   95                    | annotation_argument_name '=' . "integer constant"
   96                    | annotation_argument_name '=' . "floating point constant"
   97                    | annotation_argument_name '=' . "true"
   98                    | annotation_argument_name '=' . "false"
  100                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  102 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  566 single_alias: optional_public_or_private_alias . "name" $@38 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  567 alias_list: single_alias . ';'

    ';'  shift, and go to state 137


State 91

  568 alias_list: alias_list . single_alias ';'
  569 alias_declaration: "typedef" '{' alias_list . '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54
    '}'        shift, and go to state 138

    $default  reduce using rule 562 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  571 alias_declaration: "typedef" $@39 single_alias . ';'

    ';'  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  733 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@83 . "name" $@84 '{' $@85 bitfield_alias_bits $@86 '}'

    "name"  shift, and go to state 144


State 95

  723 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@75 . "name" $@76 '{' $@77 tuple_alias_type_list $@78 '}'

    "name"  shift, and go to state 145


State 96

  728 variant_alias_declaration: "variant" optional_public_or_private_alias $@79 . "name" $@80 '{' $@81 variant_alias_type_list $@82 '}'

    "name"  shift, and go to state 146


State 97

  259 name_in_namespace: "::" "name" .

    $default  reduce using rule 259 (name_in_namespace)


State 98

  258 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  114                       | "|>" annotation_declaration .

    $default  reduce using rule 114 (annotation_declaration)


State 101

  109 annotation_declaration: '!' annotation_declaration .
  110                       | annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 109 (annotation_declaration)


State 102

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  113                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  107 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  110 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  111 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  112 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  116 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  118 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 118 (optional_annotation_list)


State 109

  212 optional_public_or_private_function: "public" .

    $default  reduce using rule 212 (optional_public_or_private_function)


State 110

  211 optional_public_or_private_function: "private" .

    $default  reduce using rule 211 (optional_public_or_private_function)


State 111

  215 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 214 ($@6)

    $@6  go to state 156


State 112

  209 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 209 (global_function_declaration)


State 113

  574 optional_public_or_private_enum: "public" .

    $default  reduce using rule 574 (optional_public_or_private_enum)


State 114

  573 optional_public_or_private_enum: "private" .

    $default  reduce using rule 573 (optional_public_or_private_enum)


State 115

  578 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' $@40 enum_list $@41 '}'
  581                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  591 optional_public_or_private_structure: "public" .

    $default  reduce using rule 591 (optional_public_or_private_structure)


State 117

  590 optional_public_or_private_structure: "private" .

    $default  reduce using rule 590 (optional_public_or_private_structure)


State 118

  596 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@44 structure_name $@45 optional_struct_variable_declaration_list

    $default  reduce using rule 594 ($@44)

    $@44  go to state 159


State 119

  554 optional_public_or_private_variable: "public" .

    $default  reduce using rule 554 (optional_public_or_private_variable)


State 120

  553 optional_public_or_private_variable: "private" .

    $default  reduce using rule 553 (optional_public_or_private_variable)


State 121

  555 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  557           | kwd_let optional_shared optional_public_or_private_variable . $@37 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 160

    $default  reduce using rule 556 ($@37)

    $@37  go to state 161


State 122

   97 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 97 (annotation_argument)


State 123

   98 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 98 (annotation_argument)


State 124

   95 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 95 (annotation_argument)


State 125

   96 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 96 (annotation_argument)


State 126

   94 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 94 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 128

  100 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 129

   93 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 93 (annotation_argument)


State 130

  102 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 131

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 132

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 133

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 134

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 135

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 136

  566 single_alias: optional_public_or_private_alias "name" . $@38 '=' type_declaration

    $default  reduce using rule 565 ($@38)

    $@38  go to state 174


State 137

  567 alias_list: single_alias ';' .

    $default  reduce using rule 567 (alias_list)


State 138

  569 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 569 (alias_declaration)


State 139

  568 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 175


State 140

  571 alias_declaration: "typedef" $@39 single_alias ';' .

    $default  reduce using rule 571 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  733 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@83 "name" . $@84 '{' $@85 bitfield_alias_bits $@86 '}'

    $default  reduce using rule 730 ($@84)

    $@84  go to state 176


State 145

  723 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@75 "name" . $@76 '{' $@77 tuple_alias_type_list $@78 '}'

    $default  reduce using rule 720 ($@76)

    $@76  go to state 177


State 146

  728 variant_alias_declaration: "variant" optional_public_or_private_alias $@79 "name" . $@80 '{' $@81 variant_alias_type_list $@82 '}'

    $default  reduce using rule 725 ($@80)

    $@80  go to state 178


State 147

  258 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 258 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  113 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 113 (annotation_declaration)


State 151

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  107 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 152

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  110                       | annotation_declaration "&&" annotation_declaration .
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 110 (annotation_declaration)


State 153

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  111                       | annotation_declaration "||" annotation_declaration .
  112                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 111 (annotation_declaration)


State 154

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  112                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 112 (annotation_declaration)


State 155

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  116 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 116 (annotation_list)


State 156

  215 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  575 enum_name: "name" .

    $default  reduce using rule 575 (enum_name)


State 158

  578 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' $@40 enum_list $@41 '}'
  581                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

    ':'  shift, and go to state 212
    '{'  shift, and go to state 213


State 159

  596 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 . structure_name $@45 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 584 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  555 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 547 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  557 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 485 (optional_field_annotation)

    optional_field_annotation  go to state 219


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221
    "end of the string"   shift, and go to state 222


State 165

   86 annotation_argument_value: "true" .

    $default  reduce using rule 86 (annotation_argument_value)


State 166

   87 annotation_argument_value: "false" .

    $default  reduce using rule 87 (annotation_argument_value)


State 167

   84 annotation_argument_value: "integer constant" .

    $default  reduce using rule 84 (annotation_argument_value)


State 168

   85 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 169

   83 annotation_argument_value: "name" .

    $default  reduce using rule 83 (annotation_argument_value)


State 170

   82 annotation_argument_value: string_constant .

    $default  reduce using rule 82 (annotation_argument_value)


State 171

   88 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 88 (annotation_argument_value_list)


State 172

   89 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 223
    ')'  shift, and go to state 224


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  566 single_alias: optional_public_or_private_alias "name" $@38 . '=' type_declaration

    '='  shift, and go to state 225


State 175

  568 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 568 (alias_list)


State 176

  733 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@83 "name" $@84 . '{' $@85 bitfield_alias_bits $@86 '}'

    '{'  shift, and go to state 226


State 177

  723 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@75 "name" $@76 . '{' $@77 tuple_alias_type_list $@78 '}'

    '{'  shift, and go to state 227


State 178

  728 variant_alias_declaration: "variant" optional_public_or_private_alias $@79 "name" $@80 . '{' $@81 variant_alias_type_list $@82 '}'

    '{'  shift, and go to state 228


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  107 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 107 (annotation_declaration_basic)


State 181

  125 function_name: "operator" . '!'
  126              | "operator" . '~'
  127              | "operator" . "+="
  128              | "operator" . "-="
  129              | "operator" . "*="
  130              | "operator" . "/="
  131              | "operator" . "%="
  132              | "operator" . "&="
  133              | "operator" . "|="
  134              | "operator" . "^="
  135              | "operator" . "&&="
  136              | "operator" . "||="
  137              | "operator" . "^^="
  138              | "operator" . "&&"
  139              | "operator" . "||"
  140              | "operator" . "^^"
  141              | "operator" . '+'
  142              | "operator" . '-'
  143              | "operator" . '*'
  144              | "operator" . '/'
  145              | "operator" . '%'
  146              | "operator" . '<'
  147              | "operator" . '>'
  148              | "operator" . ".."
  149              | "operator" . "=="
  150              | "operator" . "!="
  151              | "operator" . "<="
  152              | "operator" . ">="
  153              | "operator" . '&'
  154              | "operator" . '|'
  155              | "operator" . '^'
  158              | "operator" . "++"
  159              | "operator" . "--"
  160              | "operator" . "<<"
  161              | "operator" . ">>"
  162              | "operator" . "<<="
  163              | "operator" . ">>="
  164              | "operator" . "<<<"
  165              | "operator" . ">>>"
  166              | "operator" . "<<<="
  167              | "operator" . ">>>="
  168              | "operator" . '[' ']'
  169              | "operator" . "?[" ']'
  170              | "operator" . '.'
  171              | "operator" . "?."
  172              | "operator" . '.' "name"
  173              | "operator" . '.' "name" ":="
  174              | "operator" . "?." "name"
  175              | "operator" . ":="
  176              | "operator" . "delete"
  177              | "operator" . "??"
  178              | "operator" . "is"
  179              | "operator" . "as"
  180              | "operator" . "is" "name"
  181              | "operator" . "as" "name"
  182              | "operator" . '?' "as"
  183              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 229
    "as"      shift, and go to state 230
    "delete"  shift, and go to state 231
    "+="      shift, and go to state 232
    "-="      shift, and go to state 233
    "/="      shift, and go to state 234
    "*="      shift, and go to state 235
    "%="      shift, and go to state 236
    "&="      shift, and go to state 237
    "|="      shift, and go to state 238
    "^="      shift, and go to state 239
    "<<"      shift, and go to state 240
    ">>"      shift, and go to state 241
    "++"      shift, and go to state 242
    "--"      shift, and go to state 243
    "<="      shift, and go to state 244
    "<<="     shift, and go to state 245
    ">>="     shift, and go to state 246
    ">="      shift, and go to state 247
    "=="      shift, and go to state 248
    "!="      shift, and go to state 249
    "??"      shift, and go to state 250
    "?."      shift, and go to state 251
    "?["      shift, and go to state 252
    ":="      shift, and go to state 253
    "<<<"     shift, and go to state 254
    ">>>"     shift, and go to state 255
    "<<<="    shift, and go to state 256
    ">>>="    shift, and go to state 257
    "&&"      shift, and go to state 258
    "||"      shift, and go to state 259
    "^^"      shift, and go to state 260
    "&&="     shift, and go to state 261
    "||="     shift, and go to state 262
    "^^="     shift, and go to state 263
    ".."      shift, and go to state 264
    '?'       shift, and go to state 265
    '|'       shift, and go to state 266
    '^'       shift, and go to state 267
    '&'       shift, and go to state 268
    '<'       shift, and go to state 269
    '>'       shift, and go to state 270
    '-'       shift, and go to state 271
    '+'       shift, and go to state 272
    '*'       shift, and go to state 273
    '/'       shift, and go to state 274
    '%'       shift, and go to state 275
    '~'       shift, and go to state 276
    '!'       shift, and go to state 277
    '.'       shift, and go to state 278
    '['       shift, and go to state 279


State 182

  184 function_name: "bool" .

    $default  reduce using rule 184 (function_name)


State 183

  185 function_name: "string" .

    $default  reduce using rule 185 (function_name)


State 184

  186 function_name: "int" .

    $default  reduce using rule 186 (function_name)


State 185

  187 function_name: "int2" .

    $default  reduce using rule 187 (function_name)


State 186

  188 function_name: "int3" .

    $default  reduce using rule 188 (function_name)


State 187

  189 function_name: "int4" .

    $default  reduce using rule 189 (function_name)


State 188

  190 function_name: "uint" .

    $default  reduce using rule 190 (function_name)


State 189

  191 function_name: "uint2" .

    $default  reduce using rule 191 (function_name)


State 190

  192 function_name: "uint3" .

    $default  reduce using rule 192 (function_name)


State 191

  193 function_name: "uint4" .

    $default  reduce using rule 193 (function_name)


State 192

  194 function_name: "float" .

    $default  reduce using rule 194 (function_name)


State 193

  195 function_name: "float2" .

    $default  reduce using rule 195 (function_name)


State 194

  196 function_name: "float3" .

    $default  reduce using rule 196 (function_name)


State 195

  197 function_name: "float4" .

    $default  reduce using rule 197 (function_name)


State 196

  198 function_name: "range" .

    $default  reduce using rule 198 (function_name)


State 197

  199 function_name: "urange" .

    $default  reduce using rule 199 (function_name)


State 198

  200 function_name: "range64" .

    $default  reduce using rule 200 (function_name)


State 199

  201 function_name: "urange64" .

    $default  reduce using rule 201 (function_name)


State 200

  202 function_name: "int64" .

    $default  reduce using rule 202 (function_name)


State 201

  203 function_name: "uint64" .

    $default  reduce using rule 203 (function_name)


State 202

  204 function_name: "double" .

    $default  reduce using rule 204 (function_name)


State 203

  205 function_name: "int8" .

    $default  reduce using rule 205 (function_name)


State 204

  206 function_name: "uint8" .

    $default  reduce using rule 206 (function_name)


State 205

  207 function_name: "int16" .

    $default  reduce using rule 207 (function_name)


State 206

  208 function_name: "uint16" .

    $default  reduce using rule 208 (function_name)


State 207

  156 function_name: "++" . "operator"

    "operator"  shift, and go to state 280


State 208

  157 function_name: "--" . "operator"

    "operator"  shift, and go to state 281


State 209

  124 function_name: "name" .

    $default  reduce using rule 124 (function_name)


State 210

  213 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 283


State 211

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 285


State 212

  581 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

    "int"     shift, and go to state 286
    "uint"    shift, and go to state 287
    "int8"    shift, and go to state 288
    "uint8"   shift, and go to state 289
    "int16"   shift, and go to state 290
    "uint16"  shift, and go to state 291

    enum_basic_type_declaration  go to state 292


State 213

  578 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . $@40 enum_list $@41 '}'

    $default  reduce using rule 576 ($@40)

    $@40  go to state 293


State 214

  585 optional_sealed: "sealed" .

    $default  reduce using rule 585 (optional_sealed)


State 215

  586 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 294


State 216

  596 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 structure_name . $@45 optional_struct_variable_declaration_list

    $default  reduce using rule 595 ($@45)

    $@45  go to state 295


State 217

  549 global_variable_declaration_list: global_variable_declaration_list . $@36 optional_field_annotation let_variable_declaration
  555 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 296

    $default  reduce using rule 548 ($@36)

    $@36  go to state 297


State 218

  486 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 298


State 219

  557 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 302


State 220

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 221

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 222

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 223

   89 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant            go to state 170
    annotation_argument_value  go to state 303


State 224

  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 100 (annotation_argument)


State 225

  566 single_alias: optional_public_or_private_alias "name" $@38 '=' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 351


State 226

  733 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@83 "name" $@84 '{' . $@85 bitfield_alias_bits $@86 '}'

    $default  reduce using rule 731 ($@85)

    $@85  go to state 352


State 227

  723 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@75 "name" $@76 '{' . $@77 tuple_alias_type_list $@78 '}'

    $default  reduce using rule 721 ($@77)

    $@77  go to state 353


State 228

  728 variant_alias_declaration: "variant" optional_public_or_private_alias $@79 "name" $@80 '{' . $@81 variant_alias_type_list $@82 '}'

    $default  reduce using rule 726 ($@81)

    $@81  go to state 354


State 229

  178 function_name: "operator" "is" .
  180              | "operator" "is" . "name"

    "name"  shift, and go to state 355

    $default  reduce using rule 178 (function_name)


State 230

  179 function_name: "operator" "as" .
  181              | "operator" "as" . "name"

    "name"  shift, and go to state 356

    $default  reduce using rule 179 (function_name)


State 231

  176 function_name: "operator" "delete" .

    $default  reduce using rule 176 (function_name)


State 232

  127 function_name: "operator" "+=" .

    $default  reduce using rule 127 (function_name)


State 233

  128 function_name: "operator" "-=" .

    $default  reduce using rule 128 (function_name)


State 234

  130 function_name: "operator" "/=" .

    $default  reduce using rule 130 (function_name)


State 235

  129 function_name: "operator" "*=" .

    $default  reduce using rule 129 (function_name)


State 236

  131 function_name: "operator" "%=" .

    $default  reduce using rule 131 (function_name)


State 237

  132 function_name: "operator" "&=" .

    $default  reduce using rule 132 (function_name)


State 238

  133 function_name: "operator" "|=" .

    $default  reduce using rule 133 (function_name)


State 239

  134 function_name: "operator" "^=" .

    $default  reduce using rule 134 (function_name)


State 240

  160 function_name: "operator" "<<" .

    $default  reduce using rule 160 (function_name)


State 241

  161 function_name: "operator" ">>" .

    $default  reduce using rule 161 (function_name)


State 242

  158 function_name: "operator" "++" .

    $default  reduce using rule 158 (function_name)


State 243

  159 function_name: "operator" "--" .

    $default  reduce using rule 159 (function_name)


State 244

  151 function_name: "operator" "<=" .

    $default  reduce using rule 151 (function_name)


State 245

  162 function_name: "operator" "<<=" .

    $default  reduce using rule 162 (function_name)


State 246

  163 function_name: "operator" ">>=" .

    $default  reduce using rule 163 (function_name)


State 247

  152 function_name: "operator" ">=" .

    $default  reduce using rule 152 (function_name)


State 248

  149 function_name: "operator" "==" .

    $default  reduce using rule 149 (function_name)


State 249

  150 function_name: "operator" "!=" .

    $default  reduce using rule 150 (function_name)


State 250

  177 function_name: "operator" "??" .

    $default  reduce using rule 177 (function_name)


State 251

  171 function_name: "operator" "?." .
  174              | "operator" "?." . "name"

    "name"  shift, and go to state 357

    $default  reduce using rule 171 (function_name)


State 252

  169 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 358


State 253

  175 function_name: "operator" ":=" .

    $default  reduce using rule 175 (function_name)


State 254

  164 function_name: "operator" "<<<" .

    $default  reduce using rule 164 (function_name)


State 255

  165 function_name: "operator" ">>>" .

    $default  reduce using rule 165 (function_name)


State 256

  166 function_name: "operator" "<<<=" .

    $default  reduce using rule 166 (function_name)


State 257

  167 function_name: "operator" ">>>=" .

    $default  reduce using rule 167 (function_name)


State 258

  138 function_name: "operator" "&&" .

    $default  reduce using rule 138 (function_name)


State 259

  139 function_name: "operator" "||" .

    $default  reduce using rule 139 (function_name)


State 260

  140 function_name: "operator" "^^" .

    $default  reduce using rule 140 (function_name)


State 261

  135 function_name: "operator" "&&=" .

    $default  reduce using rule 135 (function_name)


State 262

  136 function_name: "operator" "||=" .

    $default  reduce using rule 136 (function_name)


State 263

  137 function_name: "operator" "^^=" .

    $default  reduce using rule 137 (function_name)


State 264

  148 function_name: "operator" ".." .

    $default  reduce using rule 148 (function_name)


State 265

  182 function_name: "operator" '?' . "as"
  183              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 359


State 266

  154 function_name: "operator" '|' .

    $default  reduce using rule 154 (function_name)


State 267

  155 function_name: "operator" '^' .

    $default  reduce using rule 155 (function_name)


State 268

  153 function_name: "operator" '&' .

    $default  reduce using rule 153 (function_name)


State 269

  146 function_name: "operator" '<' .

    $default  reduce using rule 146 (function_name)


State 270

  147 function_name: "operator" '>' .

    $default  reduce using rule 147 (function_name)


State 271

  142 function_name: "operator" '-' .

    $default  reduce using rule 142 (function_name)


State 272

  141 function_name: "operator" '+' .

    $default  reduce using rule 141 (function_name)


State 273

  143 function_name: "operator" '*' .

    $default  reduce using rule 143 (function_name)


State 274

  144 function_name: "operator" '/' .

    $default  reduce using rule 144 (function_name)


State 275

  145 function_name: "operator" '%' .

    $default  reduce using rule 145 (function_name)


State 276

  126 function_name: "operator" '~' .

    $default  reduce using rule 126 (function_name)


State 277

  125 function_name: "operator" '!' .

    $default  reduce using rule 125 (function_name)


State 278

  170 function_name: "operator" '.' .
  172              | "operator" '.' . "name"
  173              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 360

    $default  reduce using rule 170 (function_name)


State 279

  168 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 361


State 280

  156 function_name: "++" "operator" .

    $default  reduce using rule 156 (function_name)


State 281

  157 function_name: "--" "operator" .

    $default  reduce using rule 157 (function_name)


State 282

  120 optional_function_argument_list: '(' . ')'
  121                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218
    ')'   shift, and go to state 363

    $default  reduce using rule 485 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 365
    function_argument_list         go to state 366


State 283

  213 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 368


State 284

  216 expression_block: '{' . expressions '}'
  217                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 239 (expressions)

    expressions  go to state 369


State 285

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 215 (function_declaration)


State 286

  629 enum_basic_type_declaration: "int" .

    $default  reduce using rule 629 (enum_basic_type_declaration)


State 287

  632 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 632 (enum_basic_type_declaration)


State 288

  630 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 630 (enum_basic_type_declaration)


State 289

  633 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 633 (enum_basic_type_declaration)


State 290

  631 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 631 (enum_basic_type_declaration)


State 291

  634 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 634 (enum_basic_type_declaration)


State 292

  581 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' $@42 enum_list $@43 '}'

    '{'  shift, and go to state 370


State 293

  578 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 . enum_list $@41 '}'

    $default  reduce using rule 558 (enum_list)

    enum_list  go to state 371


State 294

  586 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 372

    $default  reduce using rule 582 (optional_structure_parent)

    optional_structure_parent  go to state 373


State 295

  596 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 structure_name $@45 . optional_struct_variable_declaration_list

    '{'  shift, and go to state 374

    $default  reduce using rule 592 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 375


State 296

  555 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 555 (global_let)


State 297

  549 global_variable_declaration_list: global_variable_declaration_list $@36 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 485 (optional_field_annotation)

    optional_field_annotation  go to state 376


State 298

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  486 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 377


State 299

  538 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 378


State 300

  537 let_variable_name_with_pos_list: "name" .
  539                                | "name" . "aka" "name"

    "aka"  shift, and go to state 379

    $default  reduce using rule 537 (let_variable_name_with_pos_list)


State 301

  540 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  541                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  542 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  543                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  544                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  545                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  546                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 380
    ':'  shift, and go to state 381
    '&'  shift, and go to state 382

    $default  reduce using rule 535 (optional_ref)

    optional_ref  go to state 383


State 302

  557 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 557 (global_let)


State 303

   89 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 304

  659 type_declaration_no_options: "type" . '<' $@48 type_declaration '>' $@49

    '<'  shift, and go to state 384


State 305

  682 type_declaration_no_options: "array" . '<' $@53 type_declaration '>' $@54

    '<'  shift, and go to state 385


State 306

  685 type_declaration_no_options: "table" . '<' $@55 table_type_pair '>' $@56

    '<'  shift, and go to state 386


State 307

  660 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 387


State 308

  688 type_declaration_no_options: "iterator" . '<' $@57 type_declaration '>' $@58

    '<'  shift, and go to state 388


State 309

  678 type_declaration_no_options: "smart_ptr" . '<' $@51 type_declaration '>' $@52

    '<'  shift, and go to state 389


State 310

  602 basic_type_declaration: "bool" .

    $default  reduce using rule 602 (basic_type_declaration)


State 311

  622 basic_type_declaration: "void" .

    $default  reduce using rule 622 (basic_type_declaration)


State 312

  603 basic_type_declaration: "string" .

    $default  reduce using rule 603 (basic_type_declaration)


State 313

  636 auto_type_declaration: "auto" .
  637                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 390

    '('       [reduce using rule 636 (auto_type_declaration)]
    $default  reduce using rule 636 (auto_type_declaration)


State 314

  604 basic_type_declaration: "int" .

    $default  reduce using rule 604 (basic_type_declaration)


State 315

  608 basic_type_declaration: "int2" .

    $default  reduce using rule 608 (basic_type_declaration)


State 316

  609 basic_type_declaration: "int3" .

    $default  reduce using rule 609 (basic_type_declaration)


State 317

  610 basic_type_declaration: "int4" .

    $default  reduce using rule 610 (basic_type_declaration)


State 318

  611 basic_type_declaration: "uint" .

    $default  reduce using rule 611 (basic_type_declaration)


State 319

  628 basic_type_declaration: "bitfield" .
  646 bitfield_type_declaration: "bitfield" . '<' $@46 bitfield_bits '>' $@47

    '<'  shift, and go to state 391

    $default  reduce using rule 628 (basic_type_declaration)


State 320

  615 basic_type_declaration: "uint2" .

    $default  reduce using rule 615 (basic_type_declaration)


State 321

  616 basic_type_declaration: "uint3" .

    $default  reduce using rule 616 (basic_type_declaration)


State 322

  617 basic_type_declaration: "uint4" .

    $default  reduce using rule 617 (basic_type_declaration)


State 323

  618 basic_type_declaration: "float" .

    $default  reduce using rule 618 (basic_type_declaration)


State 324

  619 basic_type_declaration: "float2" .

    $default  reduce using rule 619 (basic_type_declaration)


State 325

  620 basic_type_declaration: "float3" .

    $default  reduce using rule 620 (basic_type_declaration)


State 326

  621 basic_type_declaration: "float4" .

    $default  reduce using rule 621 (basic_type_declaration)


State 327

  623 basic_type_declaration: "range" .

    $default  reduce using rule 623 (basic_type_declaration)


State 328

  624 basic_type_declaration: "urange" .

    $default  reduce using rule 624 (basic_type_declaration)


State 329

  625 basic_type_declaration: "range64" .

    $default  reduce using rule 625 (basic_type_declaration)


State 330

  626 basic_type_declaration: "urange64" .

    $default  reduce using rule 626 (basic_type_declaration)


State 331

  689 type_declaration_no_options: "block" .
  692                            | "block" . '<' $@59 type_declaration '>' $@60
  695                            | "block" . '<' $@61 optional_function_argument_list optional_function_type '>' $@62

    '<'  shift, and go to state 392

    $default  reduce using rule 689 (type_declaration_no_options)


State 332

  607 basic_type_declaration: "int64" .

    $default  reduce using rule 607 (basic_type_declaration)


State 333

  614 basic_type_declaration: "uint64" .

    $default  reduce using rule 614 (basic_type_declaration)


State 334

  627 basic_type_declaration: "double" .

    $default  reduce using rule 627 (basic_type_declaration)


State 335

  696 type_declaration_no_options: "function" .
  699                            | "function" . '<' $@63 type_declaration '>' $@64
  702                            | "function" . '<' $@65 optional_function_argument_list optional_function_type '>' $@66

    '<'  shift, and go to state 393

    $default  reduce using rule 696 (type_declaration_no_options)


State 336

  703 type_declaration_no_options: "lambda" .
  706                            | "lambda" . '<' $@67 type_declaration '>' $@68
  709                            | "lambda" . '<' $@69 optional_function_argument_list optional_function_type '>' $@70

    '<'  shift, and go to state 394

    $default  reduce using rule 703 (type_declaration_no_options)


State 337

  605 basic_type_declaration: "int8" .

    $default  reduce using rule 605 (basic_type_declaration)


State 338

  612 basic_type_declaration: "uint8" .

    $default  reduce using rule 612 (basic_type_declaration)


State 339

  606 basic_type_declaration: "int16" .

    $default  reduce using rule 606 (basic_type_declaration)


State 340

  613 basic_type_declaration: "uint16" .

    $default  reduce using rule 613 (basic_type_declaration)


State 341

  712 type_declaration_no_options: "tuple" . '<' $@71 tuple_type_list '>' $@72

    '<'  shift, and go to state 395


State 342

  715 type_declaration_no_options: "variant" . '<' $@73 variant_type_list '>' $@74

    '<'  shift, and go to state 396


State 343

  638 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 397


State 344

  661 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  663                            | '$' . name_in_namespace '<' $@50 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 398


State 345

  635 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 635 (structure_type_declaration)


State 346

  651 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 651 (type_declaration_no_options)


State 347

  654 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 654 (type_declaration_no_options)


State 348

  652 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 652 (type_declaration_no_options)


State 349

  653 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 653 (type_declaration_no_options)


State 350

  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"
  716 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 716 (type_declaration)

    dim_list  go to state 409


State 351

  566 single_alias: optional_public_or_private_alias "name" $@38 '=' type_declaration .
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 566 (single_alias)


State 352

  733 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@83 "name" $@84 '{' $@85 . bitfield_alias_bits $@86 '}'

    $default  reduce using rule 641 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 411


State 353

  723 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@75 "name" $@76 '{' $@77 . tuple_alias_type_list $@78 '}'

    $default  reduce using rule 515 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 412


State 354

  728 variant_alias_declaration: "variant" optional_public_or_private_alias $@79 "name" $@80 '{' $@81 . variant_alias_type_list $@82 '}'

    $default  reduce using rule 521 (variant_alias_type_list)

    variant_alias_type_list  go to state 413


State 355

  180 function_name: "operator" "is" "name" .

    $default  reduce using rule 180 (function_name)


State 356

  181 function_name: "operator" "as" "name" .

    $default  reduce using rule 181 (function_name)


State 357

  174 function_name: "operator" "?." "name" .

    $default  reduce using rule 174 (function_name)


State 358

  169 function_name: "operator" "?[" ']' .

    $default  reduce using rule 169 (function_name)


State 359

  182 function_name: "operator" '?' "as" .
  183              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 414

    $default  reduce using rule 182 (function_name)


State 360

  172 function_name: "operator" '.' "name" .
  173              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 415

    $default  reduce using rule 172 (function_name)


State 361

  168 function_name: "operator" '[' ']' .

    $default  reduce using rule 168 (function_name)


State 362

  508 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 416


State 363

  120 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 120 (optional_function_argument_list)


State 364

  506 function_argument_declaration: optional_field_annotation . variable_declaration
  507                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 417
    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_declaration         go to state 420
    variable_name_with_pos_list  go to state 421


State 365

  509 function_argument_list: function_argument_declaration .

    $default  reduce using rule 509 (function_argument_list)


State 366

  121 optional_function_argument_list: '(' function_argument_list . ')'
  510 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 422
    ';'  shift, and go to state 423


State 367

  123 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 424


State 368

  213 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 213 (function_declaration_header)


State 369

  216 expression_block: '{' expressions . '}'
  217                 | '{' expressions . '}' "finally" '{' expressions '}'
  240 expressions: expressions . expression_any
  241            | expressions . error

    error                             shift, and go to state 425
    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 428
    "if"                              shift, and go to state 429
    "static_if"                       shift, and go to state 430
    "for"                             shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 438
    "null"                            shift, and go to state 439
    "break"                           shift, and go to state 440
    "try"                             shift, and go to state 441
    "table"                           shift, and go to state 442
    "delete"                          shift, and go to state 443
    "deref"                           shift, and go to state 444
    "with"                            shift, and go to state 445
    "assume"                          shift, and go to state 446
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 449
    "continue"                        shift, and go to state 450
    "pass"                            shift, and go to state 451
    "reinterpret"                     shift, and go to state 452
    "label"                           shift, and go to state 453
    "goto"                            shift, and go to state 454
    "unsafe"                          shift, and go to state 455
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "yield"                           shift, and go to state 462
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 485
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    ';'                               shift, and go to state 497
    '{'                               shift, and go to state 498
    '}'                               shift, and go to state 499

    string_builder             go to state 500
    expr_reader                go to state 501
    expression_label           go to state 502
    expression_goto            go to state 503
    if_or_static_if            go to state 504
    expression_if_one_liner    go to state 505
    expression_if_then_else    go to state 506
    expression_for_loop        go to state 507
    expression_unsafe          go to state 508
    expression_while_loop      go to state 509
    expression_with            go to state 510
    expression_with_alias      go to state 511
    expression_any             go to state 512
    expr_keyword               go to state 513
    expression_keyword         go to state 514
    expr_pipe                  go to state 515
    name_in_namespace          go to state 516
    expression_delete          go to state 517
    expr_new                   go to state 518
    expression_break           go to state 519
    expression_continue        go to state 520
    expression_return_no_pipe  go to state 521
    expression_return          go to state 522
    expression_yield_no_pipe   go to state 523
    expression_yield           go to state 524
    expression_try_catch       go to state 525
    kwd_let                    go to state 526
    expression_let             go to state 527
    expr_cast                  go to state 528
    expr_type_decl             go to state 529
    expr_type_info             go to state 530
    block_or_lambda            go to state 531
    expr_full_block            go to state 532
    expr_numeric_const         go to state 533
    expr_assign                go to state 534
    expr_assign_pipe           go to state 535
    expr_named_call            go to state 536
    expr_method_call           go to state 537
    func_addr_expr             go to state 538
    expr_field                 go to state 539
    expr                       go to state 540
    expr_mtag                  go to state 541
    basic_type_declaration     go to state 542
    make_decl                  go to state 543
    make_struct_decl           go to state 544
    make_tuple_call            go to state 545
    make_dim_decl              go to state 546
    make_table_decl            go to state 547
    array_comprehension        go to state 548


State 370

  581 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . $@42 enum_list $@43 '}'

    $default  reduce using rule 579 ($@42)

    $@42  go to state 549


State 371

  559 enum_list: enum_list . ';'
  560          | enum_list . "name" ';'
  561          | enum_list . "name" '=' expr ';'
  578 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list . $@41 '}'

    "name"  shift, and go to state 550
    ';'     shift, and go to state 551

    $default  reduce using rule 577 ($@41)

    $@41  go to state 552


State 372

  583 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 553


State 373

  586 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 586 (structure_name)


State 374

  593 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 498 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 554


State 375

  596 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 structure_name $@45 optional_struct_variable_declaration_list .

    $default  reduce using rule 596 (structure_declaration)


State 376

  549 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 555


State 377

  486 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 556


State 378

  538 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 559
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 379

  539 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 560


State 380

  540 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  541                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 561


State 381

  542 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  543                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'
  544                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 562


State 382

  536 optional_ref: '&' .

    $default  reduce using rule 536 (optional_ref)


State 383

  545 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  546                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 563
    ":="  shift, and go to state 564
    '='   shift, and go to state 565

    copy_or_move_or_clone  go to state 566


State 384

  659 type_declaration_no_options: "type" '<' . $@48 type_declaration '>' $@49

    $default  reduce using rule 657 ($@48)

    $@48  go to state 567


State 385

  682 type_declaration_no_options: "array" '<' . $@53 type_declaration '>' $@54

    $default  reduce using rule 680 ($@53)

    $@53  go to state 568


State 386

  685 type_declaration_no_options: "table" '<' . $@55 table_type_pair '>' $@56

    $default  reduce using rule 683 ($@55)

    $@55  go to state 569


State 387

  660 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 570
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 388

  688 type_declaration_no_options: "iterator" '<' . $@57 type_declaration '>' $@58

    $default  reduce using rule 686 ($@57)

    $@57  go to state 571


State 389

  678 type_declaration_no_options: "smart_ptr" '<' . $@51 type_declaration '>' $@52

    $default  reduce using rule 676 ($@51)

    $@51  go to state 572


State 390

  637 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 573


State 391

  646 bitfield_type_declaration: "bitfield" '<' . $@46 bitfield_bits '>' $@47

    $default  reduce using rule 644 ($@46)

    $@46  go to state 574


State 392

  692 type_declaration_no_options: "block" '<' . $@59 type_declaration '>' $@60
  695                            | "block" '<' . $@61 optional_function_argument_list optional_function_type '>' $@62

    ':'       reduce using rule 693 ($@61)
    '>'       reduce using rule 693 ($@61)
    '('       reduce using rule 693 ($@61)
    $default  reduce using rule 690 ($@59)

    $@59  go to state 575
    $@61  go to state 576


State 393

  699 type_declaration_no_options: "function" '<' . $@63 type_declaration '>' $@64
  702                            | "function" '<' . $@65 optional_function_argument_list optional_function_type '>' $@66

    ':'       reduce using rule 700 ($@65)
    '>'       reduce using rule 700 ($@65)
    '('       reduce using rule 700 ($@65)
    $default  reduce using rule 697 ($@63)

    $@63  go to state 577
    $@65  go to state 578


State 394

  706 type_declaration_no_options: "lambda" '<' . $@67 type_declaration '>' $@68
  709                            | "lambda" '<' . $@69 optional_function_argument_list optional_function_type '>' $@70

    ':'       reduce using rule 707 ($@69)
    '>'       reduce using rule 707 ($@69)
    '('       reduce using rule 707 ($@69)
    $default  reduce using rule 704 ($@67)

    $@67  go to state 579
    $@69  go to state 580


State 395

  712 type_declaration_no_options: "tuple" '<' . $@71 tuple_type_list '>' $@72

    $default  reduce using rule 710 ($@71)

    $@71  go to state 581


State 396

  715 type_declaration_no_options: "variant" '<' . $@73 variant_type_list '>' $@74

    $default  reduce using rule 713 ($@73)

    $@73  go to state 582


State 397

  638 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 583
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 398

  661 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  663                            | '$' name_in_namespace . '<' $@50 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 584
    '('  shift, and go to state 585


State 399

  666 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 666 (type_declaration_no_options)


State 400

  671 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 671 (type_declaration_no_options)


State 401

  665 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 665 (type_declaration_no_options)


State 402

  673 type_declaration_no_options: type_declaration_no_options "==" . "const"
  674                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 586
    '&'      shift, and go to state 587


State 403

  679 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 679 (type_declaration_no_options)


State 404

  675 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 675 (type_declaration_no_options)


State 405

  668 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 668 (type_declaration_no_options)


State 406

  664 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  667                            | type_declaration_no_options '-' . "const"
  669                            | type_declaration_no_options '-' . '&'
  672                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 588
    '&'      shift, and go to state 589
    '['      shift, and go to state 590
    '#'      shift, and go to state 591


State 407

  649 dim_list: '[' . expr ']'
  656 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    ']'                               shift, and go to state 592
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 593
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 408

  670 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 670 (type_declaration_no_options)


State 409

  650 dim_list: dim_list . '[' expr ']'
  655 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 594

    '['       [reduce using rule 655 (type_declaration_no_options)]
    $default  reduce using rule 655 (type_declaration_no_options)


State 410

  717 type_declaration: type_declaration '|' . type_declaration_no_options
  718                 | type_declaration '|' . '#'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344
    '#'          shift, and go to state 595

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 596


State 411

  642 bitfield_alias_bits: bitfield_alias_bits . ';'
  643                    | bitfield_alias_bits . "name" ';'
  733 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@83 "name" $@84 '{' $@85 bitfield_alias_bits . $@86 '}'

    "name"  shift, and go to state 597
    ';'     shift, and go to state 598

    $default  reduce using rule 732 ($@86)

    $@86  go to state 599


State 412

  516 tuple_alias_type_list: tuple_alias_type_list . ';'
  517                      | tuple_alias_type_list . tuple_type ';'
  723 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@75 "name" $@76 '{' $@77 tuple_alias_type_list . $@78 '}'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 600
    '$'          shift, and go to state 344
    ';'          shift, and go to state 601

    $default  reduce using rule 722 ($@78)

    name_in_namespace            go to state 345
    tuple_type                   go to state 602
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 603
    $@78                         go to state 604


State 413

  522 variant_alias_type_list: variant_alias_type_list . ';'
  523                        | variant_alias_type_list . variant_type ';'
  728 variant_alias_declaration: "variant" optional_public_or_private_alias $@79 "name" $@80 '{' $@81 variant_alias_type_list . $@82 '}'

    "name"  shift, and go to state 605
    ';'     shift, and go to state 606

    $default  reduce using rule 727 ($@82)

    variant_type  go to state 607
    $@82          go to state 608


State 414

  183 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 183 (function_name)


State 415

  173 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 173 (function_name)


State 416

  508 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 609
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 417

  507 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_declaration         go to state 610
    variable_name_with_pos_list  go to state 421


State 418

  598 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 611


State 419

  597 variable_name_with_pos_list: "name" .
  599                            | "name" . "aka" "name"

    "aka"  shift, and go to state 612

    $default  reduce using rule 597 (variable_name_with_pos_list)


State 420

  506 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 506 (function_argument_declaration)


State 421

  526 variable_declaration: variable_name_with_pos_list .
  527                     | variable_name_with_pos_list . '&'
  528                     | variable_name_with_pos_list . ':' type_declaration
  529                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  530                     | variable_name_with_pos_list . copy_or_move expr
  531                     | variable_name_with_pos_list . copy_or_move expr_pipe
  600 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  601                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 613
    ','   shift, and go to state 614
    '='   shift, and go to state 615
    ':'   shift, and go to state 616
    '&'   shift, and go to state 617

    $default  reduce using rule 526 (variable_declaration)

    copy_or_move  go to state 618


State 422

  121 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 121 (optional_function_argument_list)


State 423

  510 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218

    $default  reduce using rule 485 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 619


State 424

  123 optional_function_type: ':' type_declaration .
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 123 (optional_function_type)


State 425

  241 expressions: expressions error .

    $default  reduce using rule 241 (expressions)


State 426

  771 make_struct_decl: "struct" . '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim ')'

    '<'  shift, and go to state 620


State 427

  774 make_struct_decl: "class" . '<' $@89 type_declaration_no_options '>' $@90 '(' make_struct_dim ')'

    '<'  shift, and go to state 621


State 428

   78 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 622
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 429

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 430

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 431

   76 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 75 ($@4)

    $@4  go to state 623


State 432

  387 expr: "true" .

    $default  reduce using rule 387 (expr)


State 433

  388 expr: "false" .

    $default  reduce using rule 388 (expr)


State 434

  266 expr_new: "new" . new_type_declaration
  267         | "new" . new_type_declaration '(' ')'
  268         | "new" . new_type_declaration '(' expr_list ')'
  269         | "new" . new_type_declaration '(' make_struct_dim ')'
  270         | "new" . make_decl

    "struct"       shift, and go to state 426
    "class"        shift, and go to state 427
    "array"        shift, and go to state 437
    "table"        shift, and go to state 442
    "fixed_array"  shift, and go to state 456
    "default"      shift, and go to state 457
    "tuple"        shift, and go to state 459
    "variant"      shift, and go to state 460
    "::"           shift, and go to state 58
    "[["           shift, and go to state 475
    "[{"           shift, and go to state 476
    "{{"           shift, and go to state 477
    "name"         shift, and go to state 59
    '<'            shift, and go to state 624
    '['            shift, and go to state 493
    '{'            shift, and go to state 498

    name_in_namespace           go to state 345
    new_type_declaration        go to state 625
    structure_type_declaration  go to state 626
    make_decl                   go to state 627
    make_struct_decl            go to state 544
    make_tuple_call             go to state 545
    make_dim_decl               go to state 546
    make_table_decl             go to state 547
    array_comprehension         go to state 548


State 435

  307 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  308               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  309               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 628


State 436

  306 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 629


State 437

  795 make_dim_decl: "array" . '(' expr_list optional_comma ')'
  798              | "array" . '<' $@97 type_declaration_no_options '>' $@98 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 630
    '('  shift, and go to state 631


State 438

  273 expression_return_no_pipe: "return" .
  274                          | "return" . expr_list
  275                          | "return" . "<-" expr_list
  277 expression_return: "return" . expr_pipe
  278                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 632
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 273 (expression_return_no_pipe)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    expr_pipe               go to state 633
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 634
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_assign             go to state 635
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 636
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 439

  381 expr: "null" .

    $default  reduce using rule 381 (expr)


State 440

  271 expression_break: "break" .

    $default  reduce using rule 271 (expression_break)


State 441

  284 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 637


State 442

  809 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  810                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  811                | "table" . '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 638
    '('  shift, and go to state 639


State 443

  260 expression_delete: "delete" . expr
  261                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "explicit"                        shift, and go to state 640
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 641
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 444

  435 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 642


State 445

   79 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 643
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 446

   81 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 644


State 447

  297 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 645


State 448

  300 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 646


State 449

  436 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 647


State 450

  272 expression_continue: "continue" .

    $default  reduce using rule 272 (expression_continue)


State 451

  238 expression_any: "pass" . ';'

    ';'  shift, and go to state 648


State 452

  303 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 649


State 453

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 650


State 454

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "label"                           shift, and go to state 651
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 652
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 455

   77 expression_unsafe: "unsafe" . expression_block
  467 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 653
    '{'  shift, and go to state 284

    expression_block  go to state 654


State 456

  799 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  802              | "fixed_array" . '<' $@99 type_declaration_no_options '>' $@100 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 655
    '('  shift, and go to state 656


State 457

  780 make_struct_decl: "default" . '<' $@93 type_declaration_no_options '>' $@94

    '<'  shift, and go to state 657


State 458

  628 basic_type_declaration: "bitfield" .

    $default  reduce using rule 628 (basic_type_declaration)


State 459

  786 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  789                | "tuple" . '<' $@95 type_declaration_no_options '>' $@96 '(' make_struct_dim ')'

    '<'  shift, and go to state 658
    '('  shift, and go to state 659


State 460

  777 make_struct_decl: "variant" . '<' $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim ')'

    '<'  shift, and go to state 660


State 461

  437 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  438     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 661


State 462

  279 expression_yield_no_pipe: "yield" . expr
  280                         | "yield" . "<-" expr
  282 expression_yield: "yield" . expr_pipe
  283                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 662
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    expr_pipe               go to state 663
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_assign             go to state 635
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 664
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 463

  417 expr: "++" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 665
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 464

  418 expr: "--" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 666
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 465

  256 expr_pipe: "$ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 667
    '{'  shift, and go to state 284

    expression_block  go to state 668
    block_or_lambda   go to state 669
    expr_block        go to state 670


State 466

  254 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 667
    '{'  shift, and go to state 284

    expression_block  go to state 668
    block_or_lambda   go to state 669
    expr_block        go to state 671


State 467

  255 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 667
    '{'  shift, and go to state 284

    expression_block  go to state 668
    block_or_lambda   go to state 669
    expr_block        go to state 672


State 468

  469 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 673


State 469

  470 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 674


State 470

  471 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 675


State 471

  472 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 676


State 472

  473 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 677


State 473

  475 expr_mtag: "$c" . '(' expr ')' '(' ')'
  476          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 678


State 474

  474 expr_mtag: "..." .

    $default  reduce using rule 474 (expr_mtag)


State 475

  763 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  764                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  765                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  766                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  793 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  817 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 679
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 680


State 476

  767 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  768                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  794 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  818 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 681
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 682


State 477

  808 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  820 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 683
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 684
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 685
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table              go to state 686
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 478

  329 expr_numeric_const: "integer constant" .

    $default  reduce using rule 329 (expr_numeric_const)


State 479

  331 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 331 (expr_numeric_const)


State 480

  330 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 330 (expr_numeric_const)


State 481

  332 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 332 (expr_numeric_const)


State 482

  333 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 333 (expr_numeric_const)


State 483

  334 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 334 (expr_numeric_const)


State 484

  335 expr_numeric_const: "double constant" .

    $default  reduce using rule 335 (expr_numeric_const)


State 485

  242 expr_keyword: "keyword" . expr expression_block
  249 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '<'                               shift, and go to state 687
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 688
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 486

  252 expression_keyword: "type function" . '<' $@9 type_declaration_no_options_list '>' $@10 '(' expr_list ')'

    '<'  shift, and go to state 689


State 487

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 690


State 488

  394 expr: '-' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 691
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 489

  393 expr: '+' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 692
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 490

  434 expr: '*' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 693
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 491

  392 expr: '~' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 694
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 492

  391 expr: '!' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 695
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 493

  792 make_dim_decl: '[' . expr_list optional_comma ']'
  816 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 696
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 697
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 494

  421 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 699
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 495

  315 block_or_lambda: '$' .

    $default  reduce using rule 315 (block_or_lambda)


State 496

  316 block_or_lambda: '@' .
  317                | '@' . '@'
  367 func_addr_expr: '@' . '@' func_addr_name
  370               | '@' . '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name
  373               | '@' . '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name
  484 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 700

    $default  reduce using rule 316 (block_or_lambda)


State 497

  218 expression_any: ';' .

    $default  reduce using rule 218 (expression_any)


State 498

  807 make_table_decl: '{' . expr_map_tuple_list optional_comma '}'
  819 array_comprehension: '{' . "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 701
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 684
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 702
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    expr_map_tuple_list     go to state 703
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 499

  216 expression_block: '{' expressions '}' .
  217                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 704

    $default  reduce using rule 216 (expression_block)


State 500

  385 expr: string_builder .

    $default  reduce using rule 385 (expr)


State 501

  384 expr: expr_reader .

    $default  reduce using rule 384 (expr)


State 502

  236 expression_any: expression_label . ';'

    ';'  shift, and go to state 705


State 503

  237 expression_any: expression_goto . ';'

    ';'  shift, and go to state 706


State 504

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 707
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 505

   74 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner ';'

    "if"  shift, and go to state 708


State 506

  234 expression_any: expression_if_then_else .

    $default  reduce using rule 234 (expression_any)


State 507

  229 expression_any: expression_for_loop .

    $default  reduce using rule 229 (expression_any)


State 508

  226 expression_any: expression_unsafe .

    $default  reduce using rule 226 (expression_any)


State 509

  225 expression_any: expression_while_loop .

    $default  reduce using rule 225 (expression_any)


State 510

  227 expression_any: expression_with .

    $default  reduce using rule 227 (expression_any)


State 511

  228 expression_any: expression_with_alias .

    $default  reduce using rule 228 (expression_any)


State 512

  240 expressions: expressions expression_any .

    $default  reduce using rule 240 (expressions)


State 513

  220 expression_any: expr_keyword .

    $default  reduce using rule 220 (expression_any)


State 514

  468 expr: expression_keyword .

    $default  reduce using rule 468 (expr)


State 515

  219 expression_any: expr_pipe .

    $default  reduce using rule 219 (expression_any)


State 516

  361 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  362                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  382 expr: name_in_namespace .
  429     | name_in_namespace . '(' ')'
  430     | name_in_namespace . '(' make_struct_dim ')'
  431     | name_in_namespace . '(' expr_list ')'
  466     | name_in_namespace . "name"

    "name"  shift, and go to state 709
    '('     shift, and go to state 710

    "name"    [reduce using rule 382 (expr)]
    '('       [reduce using rule 382 (expr)]
    $default  reduce using rule 382 (expr)


State 517

  223 expression_any: expression_delete . ';'

    ';'  shift, and go to state 711


State 518

  459 expr: expr_new .

    $default  reduce using rule 459 (expr)


State 519

   70 expression_if_one_liner: expression_break .
  230 expression_any: expression_break . ';'

    ';'  shift, and go to state 712

    $default  reduce using rule 70 (expression_if_one_liner)


State 520

   71 expression_if_one_liner: expression_continue .
  231 expression_any: expression_continue . ';'

    ';'  shift, and go to state 713

    $default  reduce using rule 71 (expression_if_one_liner)


State 521

   68 expression_if_one_liner: expression_return_no_pipe .
  276 expression_return: expression_return_no_pipe . ';'

    ';'  shift, and go to state 714

    $default  reduce using rule 68 (expression_if_one_liner)


State 522

  232 expression_any: expression_return .

    $default  reduce using rule 232 (expression_any)


State 523

   69 expression_if_one_liner: expression_yield_no_pipe .
  281 expression_yield: expression_yield_no_pipe . ';'

    ';'  shift, and go to state 715

    $default  reduce using rule 69 (expression_if_one_liner)


State 524

  233 expression_any: expression_yield .

    $default  reduce using rule 233 (expression_any)


State 525

  235 expression_any: expression_try_catch .

    $default  reduce using rule 235 (expression_any)


State 526

  293 expression_let: kwd_let . optional_in_scope let_variable_declaration
  294               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 716

    $default  reduce using rule 288 (optional_in_scope)

    optional_in_scope  go to state 717


State 527

  224 expression_any: expression_let .

    $default  reduce using rule 224 (expression_any)


State 528

  458 expr: expr_cast .

    $default  reduce using rule 458 (expr)


State 529

  457 expr: expr_type_decl .

    $default  reduce using rule 457 (expr)


State 530

  456 expr: expr_type_info .

    $default  reduce using rule 456 (expr)


State 531

  328 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 718


State 532

  462 expr: expr_full_block .

    $default  reduce using rule 462 (expr)


State 533

  383 expr: expr_numeric_const .

    $default  reduce using rule 383 (expr)


State 534

  222 expression_any: expr_assign . ';'
  253 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 719
    ';'    shift, and go to state 720


State 535

  221 expression_any: expr_assign_pipe .

    $default  reduce using rule 221 (expression_any)


State 536

  461 expr: expr_named_call .

    $default  reduce using rule 461 (expr)


State 537

  460 expr: expr_method_call .

    $default  reduce using rule 460 (expr)


State 538

  428 expr: func_addr_expr .

    $default  reduce using rule 428 (expr)


State 539

  389 expr: expr_field .

    $default  reduce using rule 389 (expr)


State 540

   67 expression_if_one_liner: expr .
  336 expr_assign: expr .
  337            | expr . '=' expr
  338            | expr . "<-" expr
  339            | expr . ":=" expr
  340            | expr . "&=" expr
  341            | expr . "|=" expr
  342            | expr . "^=" expr
  343            | expr . "&&=" expr
  344            | expr . "||=" expr
  345            | expr . "^^=" expr
  346            | expr . "+=" expr
  347            | expr . "-=" expr
  348            | expr . "*=" expr
  349            | expr . "/=" expr
  350            | expr . "%=" expr
  351            | expr . "<<=" expr
  352            | expr . ">>=" expr
  353            | expr . "<<<=" expr
  354            | expr . ">>>=" expr
  355 expr_assign_pipe: expr . '=' "@ <|" expr_block
  356                 | expr . '=' "@@ <|" expr_block
  357                 | expr . '=' "$ <|" expr_block
  358                 | expr . "<-" "@ <|" expr_block
  359                 | expr . "<-" "@@ <|" expr_block
  360                 | expr . "<-" "$ <|" expr_block
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 721
    "as"    shift, and go to state 722
    "+="    shift, and go to state 723
    "-="    shift, and go to state 724
    "/="    shift, and go to state 725
    "*="    shift, and go to state 726
    "%="    shift, and go to state 727
    "&="    shift, and go to state 728
    "|="    shift, and go to state 729
    "^="    shift, and go to state 730
    "<<"    shift, and go to state 731
    ">>"    shift, and go to state 732
    "++"    shift, and go to state 733
    "--"    shift, and go to state 734
    "<="    shift, and go to state 735
    "<<="   shift, and go to state 736
    ">>="   shift, and go to state 737
    ">="    shift, and go to state 738
    "=="    shift, and go to state 739
    "!="    shift, and go to state 740
    "->"    shift, and go to state 741
    "<-"    shift, and go to state 742
    "??"    shift, and go to state 743
    "?."    shift, and go to state 744
    "?["    shift, and go to state 745
    "<|"    shift, and go to state 746
    "|>"    shift, and go to state 747
    ":="    shift, and go to state 748
    "<<<"   shift, and go to state 749
    ">>>"   shift, and go to state 750
    "<<<="  shift, and go to state 751
    ">>>="  shift, and go to state 752
    "&&"    shift, and go to state 753
    "||"    shift, and go to state 754
    "^^"    shift, and go to state 755
    "&&="   shift, and go to state 756
    "||="   shift, and go to state 757
    "^^="   shift, and go to state 758
    ".."    shift, and go to state 759
    '='     shift, and go to state 760
    '?'     shift, and go to state 761
    '|'     shift, and go to state 762
    '^'     shift, and go to state 763
    '&'     shift, and go to state 764
    '<'     shift, and go to state 765
    '>'     shift, and go to state 766
    '-'     shift, and go to state 767
    '+'     shift, and go to state 768
    '*'     shift, and go to state 769
    '/'     shift, and go to state 770
    '%'     shift, and go to state 771
    '.'     shift, and go to state 772
    '['     shift, and go to state 773

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 336 (expr_assign)


State 541

  390 expr: expr_mtag .

    $default  reduce using rule 390 (expr)


State 542

  432 expr: basic_type_declaration . '(' ')'
  433     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 774


State 543

  386 expr: make_decl .

    $default  reduce using rule 386 (expr)


State 544

  734 make_decl: make_struct_decl .

    $default  reduce using rule 734 (make_decl)


State 545

  738 make_decl: make_tuple_call .

    $default  reduce using rule 738 (make_decl)


State 546

  735 make_decl: make_dim_decl .

    $default  reduce using rule 735 (make_decl)


State 547

  736 make_decl: make_table_decl .

    $default  reduce using rule 736 (make_decl)


State 548

  737 make_decl: array_comprehension .

    $default  reduce using rule 737 (make_decl)


State 549

  581 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 . enum_list $@43 '}'

    $default  reduce using rule 558 (enum_list)

    enum_list  go to state 775


State 550

  560 enum_list: enum_list "name" . ';'
  561          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 776
    ';'  shift, and go to state 777


State 551

  559 enum_list: enum_list ';' .

    $default  reduce using rule 559 (enum_list)


State 552

  578 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 . '}'

    '}'  shift, and go to state 778


State 553

  583 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 583 (optional_structure_parent)


State 554

  500 struct_variable_declaration_list: struct_variable_declaration_list . $@33 structure_variable_declaration ';'
  502                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  504                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block
  505                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  593 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 779
    '}'  shift, and go to state 780

    "def"     reduce using rule 117 (optional_annotation_list)
    $default  reduce using rule 499 ($@33)

    optional_annotation_list  go to state 781
    $@33                      go to state 782


State 555

  549 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 549 (global_variable_declaration_list)


State 556

  486 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 486 (optional_field_annotation)


State 557

  467 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 653


State 558

  249 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    '<'  shift, and go to state 687


State 559

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  538 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 783


State 560

  539 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 539 (let_variable_name_with_pos_list)


State 561

  540 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  541                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 784

    $default  reduce using rule 540 (let_variable_name_with_pos_list)


State 562

  542 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  543                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  544                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 563
    "??"        shift, and go to state 403
    ":="        shift, and go to state 564
    '='         shift, and go to state 565
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    ';'         shift, and go to state 785
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 786
    dim_list               go to state 409


State 563

  533 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 533 (copy_or_move_or_clone)


State 564

  534 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 534 (copy_or_move_or_clone)


State 565

  532 copy_or_move_or_clone: '=' .

    $default  reduce using rule 532 (copy_or_move_or_clone)


State 566

  545 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  546                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    expr_pipe               go to state 787
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_assign             go to state 635
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 788
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 567

  659 type_declaration_no_options: "type" '<' $@48 . type_declaration '>' $@49

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 789


State 568

  682 type_declaration_no_options: "array" '<' $@53 . type_declaration '>' $@54

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 790


State 569

  685 type_declaration_no_options: "table" '<' $@55 . table_type_pair '>' $@56

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    table_type_pair              go to state 791
    type_declaration_no_options  go to state 350
    type_declaration             go to state 792


State 570

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  660 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 793


State 571

  688 type_declaration_no_options: "iterator" '<' $@57 . type_declaration '>' $@58

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 794


State 572

  678 type_declaration_no_options: "smart_ptr" '<' $@51 . type_declaration '>' $@52

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 795


State 573

  637 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 796


State 574

  646 bitfield_type_declaration: "bitfield" '<' $@46 . bitfield_bits '>' $@47

    "name"  shift, and go to state 797

    bitfield_bits  go to state 798


State 575

  692 type_declaration_no_options: "block" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 799


State 576

  695 type_declaration_no_options: "block" '<' $@61 . optional_function_argument_list optional_function_type '>' $@62

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 800


State 577

  699 type_declaration_no_options: "function" '<' $@63 . type_declaration '>' $@64

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 801


State 578

  702 type_declaration_no_options: "function" '<' $@65 . optional_function_argument_list optional_function_type '>' $@66

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 802


State 579

  706 type_declaration_no_options: "lambda" '<' $@67 . type_declaration '>' $@68

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 803


State 580

  709 type_declaration_no_options: "lambda" '<' $@69 . optional_function_argument_list optional_function_type '>' $@70

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 804


State 581

  712 type_declaration_no_options: "tuple" '<' $@71 . tuple_type_list '>' $@72

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 600
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 805
    tuple_type_list              go to state 806
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 603


State 582

  715 type_declaration_no_options: "variant" '<' $@73 . variant_type_list '>' $@74

    "name"  shift, and go to state 605

    variant_type       go to state 807
    variant_type_list  go to state 808


State 583

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  638 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 809


State 584

  663 type_declaration_no_options: '$' name_in_namespace '<' . $@50 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 662 ($@50)

    $@50  go to state 810


State 585

  661 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 500
    expr_reader             go to state 501
    optional_expr_list      go to state 811
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 812
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 586

  673 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 673 (type_declaration_no_options)


State 587

  674 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 674 (type_declaration_no_options)


State 588

  667 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 667 (type_declaration_no_options)


State 589

  669 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 669 (type_declaration_no_options)


State 590

  664 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 813


State 591

  672 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 672 (type_declaration_no_options)


State 592

  656 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 656 (type_declaration_no_options)


State 593

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  649 dim_list: '[' expr . ']'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ']'    shift, and go to state 814


State 594

  650 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 815
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 595

  718 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 718 (type_declaration)


State 596

  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"
  717 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 717 (type_declaration)

    dim_list  go to state 409


State 597

  643 bitfield_alias_bits: bitfield_alias_bits "name" . ';'

    ';'  shift, and go to state 816


State 598

  642 bitfield_alias_bits: bitfield_alias_bits ';' .

    $default  reduce using rule 642 (bitfield_alias_bits)


State 599

  733 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@83 "name" $@84 '{' $@85 bitfield_alias_bits $@86 . '}'

    '}'  shift, and go to state 817


State 600

  257 name_in_namespace: "name" .
  258                  | "name" . "::" "name"
  512 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 818

    $default  reduce using rule 257 (name_in_namespace)


State 601

  516 tuple_alias_type_list: tuple_alias_type_list ';' .

    $default  reduce using rule 516 (tuple_alias_type_list)


State 602

  517 tuple_alias_type_list: tuple_alias_type_list tuple_type . ';'

    ';'  shift, and go to state 819


State 603

  511 tuple_type: type_declaration .
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 511 (tuple_type)


State 604

  723 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@75 "name" $@76 '{' $@77 tuple_alias_type_list $@78 . '}'

    '}'  shift, and go to state 820


State 605

  518 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 821


State 606

  522 variant_alias_type_list: variant_alias_type_list ';' .

    $default  reduce using rule 522 (variant_alias_type_list)


State 607

  523 variant_alias_type_list: variant_alias_type_list variant_type . ';'

    ';'  shift, and go to state 822


State 608

  728 variant_alias_declaration: "variant" optional_public_or_private_alias $@79 "name" $@80 '{' $@81 variant_alias_type_list $@82 . '}'

    '}'  shift, and go to state 823


State 609

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  508 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 824


State 610

  507 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 507 (function_argument_declaration)


State 611

  598 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 825
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 612

  599 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 826


State 613

  525 copy_or_move: "<-" .

    $default  reduce using rule 525 (copy_or_move)


State 614

  600 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  601                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 827


State 615

  524 copy_or_move: '=' .

    $default  reduce using rule 524 (copy_or_move)


State 616

  528 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  529                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 828


State 617

  527 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 527 (variable_declaration)


State 618

  530 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  531                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    expr_pipe               go to state 829
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_assign             go to state 635
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 830
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 619

  510 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 510 (function_argument_list)


State 620

  771 make_struct_decl: "struct" '<' . $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim ')'

    $default  reduce using rule 769 ($@87)

    $@87  go to state 831


State 621

  774 make_struct_decl: "class" '<' . $@89 type_declaration_no_options '>' $@90 '(' make_struct_dim ')'

    $default  reduce using rule 772 ($@89)

    $@89  go to state 832


State 622

   78 expression_while_loop: "while" expr . expression_block
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    '{'    shift, and go to state 284

    expression_block  go to state 833


State 623

   76 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 834


State 624

  264 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 262 ($@11)

    $@11  go to state 835


State 625

  266 expr_new: "new" new_type_declaration .
  267         | "new" new_type_declaration . '(' ')'
  268         | "new" new_type_declaration . '(' expr_list ')'
  269         | "new" new_type_declaration . '(' make_struct_dim ')'

    '('  shift, and go to state 836

    '('       [reduce using rule 266 (expr_new)]
    $default  reduce using rule 266 (expr_new)


State 626

  265 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 265 (new_type_declaration)


State 627

  270 expr_new: "new" make_decl .

    $default  reduce using rule 270 (expr_new)


State 628

  307 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  308               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  309               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 837


State 629

  306 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 304 ($@19)

    $@19  go to state 838


State 630

  798 make_dim_decl: "array" '<' . $@97 type_declaration_no_options '>' $@98 '(' expr_list optional_comma ')'

    $default  reduce using rule 796 ($@97)

    $@97  go to state 839


State 631

  795 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 840
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 632

  275 expression_return_no_pipe: "return" "<-" . expr_list
  278 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    expr_pipe               go to state 841
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 842
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_assign             go to state 635
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 636
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 633

  277 expression_return: "return" expr_pipe .

    $default  reduce using rule 277 (expression_return)


State 634

  274 expression_return_no_pipe: "return" expr_list .
  311 expr_list: expr_list . ',' expr

    ','  shift, and go to state 843

    $default  reduce using rule 274 (expression_return_no_pipe)


State 635

  253 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 719


State 636

  310 expr_list: expr .
  336 expr_assign: expr .
  337            | expr . '=' expr
  338            | expr . "<-" expr
  339            | expr . ":=" expr
  340            | expr . "&=" expr
  341            | expr . "|=" expr
  342            | expr . "^=" expr
  343            | expr . "&&=" expr
  344            | expr . "||=" expr
  345            | expr . "^^=" expr
  346            | expr . "+=" expr
  347            | expr . "-=" expr
  348            | expr . "*=" expr
  349            | expr . "/=" expr
  350            | expr . "%=" expr
  351            | expr . "<<=" expr
  352            | expr . ">>=" expr
  353            | expr . "<<<=" expr
  354            | expr . ">>>=" expr
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 721
    "as"    shift, and go to state 722
    "+="    shift, and go to state 723
    "-="    shift, and go to state 724
    "/="    shift, and go to state 725
    "*="    shift, and go to state 726
    "%="    shift, and go to state 727
    "&="    shift, and go to state 728
    "|="    shift, and go to state 729
    "^="    shift, and go to state 730
    "<<"    shift, and go to state 731
    ">>"    shift, and go to state 732
    "++"    shift, and go to state 733
    "--"    shift, and go to state 734
    "<="    shift, and go to state 735
    "<<="   shift, and go to state 736
    ">>="   shift, and go to state 737
    ">="    shift, and go to state 738
    "=="    shift, and go to state 739
    "!="    shift, and go to state 740
    "->"    shift, and go to state 741
    "<-"    shift, and go to state 844
    "??"    shift, and go to state 743
    "?."    shift, and go to state 744
    "?["    shift, and go to state 745
    "<|"    shift, and go to state 746
    "|>"    shift, and go to state 747
    ":="    shift, and go to state 748
    "<<<"   shift, and go to state 749
    ">>>"   shift, and go to state 750
    "<<<="  shift, and go to state 751
    ">>>="  shift, and go to state 752
    "&&"    shift, and go to state 753
    "||"    shift, and go to state 754
    "^^"    shift, and go to state 755
    "&&="   shift, and go to state 756
    "||="   shift, and go to state 757
    "^^="   shift, and go to state 758
    ".."    shift, and go to state 759
    '='     shift, and go to state 845
    '?'     shift, and go to state 761
    '|'     shift, and go to state 762
    '^'     shift, and go to state 763
    '&'     shift, and go to state 764
    '<'     shift, and go to state 765
    '>'     shift, and go to state 766
    '-'     shift, and go to state 767
    '+'     shift, and go to state 768
    '*'     shift, and go to state 769
    '/'     shift, and go to state 770
    '%'     shift, and go to state 771
    '.'     shift, and go to state 772
    '['     shift, and go to state 773

    " <|"     reduce using rule 336 (expr_assign)
    $default  reduce using rule 310 (expr_list)


State 637

  284 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 846


State 638

  810 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  811                | "table" '<' . type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 847


State 639

  809 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 684
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 702
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    expr_map_tuple_list     go to state 848
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 640

  261 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 849
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 641

  260 expression_delete: "delete" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 260 (expression_delete)


State 642

  435 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 850
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 643

   79 expression_with: "with" expr . expression_block
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    '{'    shift, and go to state 284

    expression_block  go to state 851


State 644

   81 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 852


State 645

  297 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 295 ($@13)

    $@13  go to state 853


State 646

  300 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 298 ($@15)

    $@15  go to state 854


State 647

  436 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 855
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 648

  238 expression_any: "pass" ';' .

    $default  reduce using rule 238 (expression_any)


State 649

  303 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 301 ($@17)

    $@17  go to state 856


State 650

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 857


State 651

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 858


State 652

   56 expression_goto: "goto" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 56 (expression_goto)


State 653

  467 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 859
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 654

   77 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 77 (expression_unsafe)


State 655

  802 make_dim_decl: "fixed_array" '<' . $@99 type_declaration_no_options '>' $@100 '(' expr_list optional_comma ')'

    $default  reduce using rule 800 ($@99)

    $@99  go to state 860


State 656

  799 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 861
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 657

  780 make_struct_decl: "default" '<' . $@93 type_declaration_no_options '>' $@94

    $default  reduce using rule 778 ($@93)

    $@93  go to state 862


State 658

  789 make_tuple_call: "tuple" '<' . $@95 type_declaration_no_options '>' $@96 '(' make_struct_dim ')'

    $default  reduce using rule 787 ($@95)

    $@95  go to state 863


State 659

  786 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 864
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 660

  777 make_struct_decl: "variant" '<' . $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim ')'

    $default  reduce using rule 775 ($@91)

    $@91  go to state 865


State 661

  437 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  438     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 866


State 662

  280 expression_yield_no_pipe: "yield" "<-" . expr
  283 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    expr_pipe               go to state 867
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_assign             go to state 635
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 868
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 663

  282 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 282 (expression_yield)


State 664

  279 expression_yield_no_pipe: "yield" expr .
  336 expr_assign: expr .
  337            | expr . '=' expr
  338            | expr . "<-" expr
  339            | expr . ":=" expr
  340            | expr . "&=" expr
  341            | expr . "|=" expr
  342            | expr . "^=" expr
  343            | expr . "&&=" expr
  344            | expr . "||=" expr
  345            | expr . "^^=" expr
  346            | expr . "+=" expr
  347            | expr . "-=" expr
  348            | expr . "*=" expr
  349            | expr . "/=" expr
  350            | expr . "%=" expr
  351            | expr . "<<=" expr
  352            | expr . ">>=" expr
  353            | expr . "<<<=" expr
  354            | expr . ">>>=" expr
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 721
    "as"    shift, and go to state 722
    "+="    shift, and go to state 723
    "-="    shift, and go to state 724
    "/="    shift, and go to state 725
    "*="    shift, and go to state 726
    "%="    shift, and go to state 727
    "&="    shift, and go to state 728
    "|="    shift, and go to state 729
    "^="    shift, and go to state 730
    "<<"    shift, and go to state 731
    ">>"    shift, and go to state 732
    "++"    shift, and go to state 733
    "--"    shift, and go to state 734
    "<="    shift, and go to state 735
    "<<="   shift, and go to state 736
    ">>="   shift, and go to state 737
    ">="    shift, and go to state 738
    "=="    shift, and go to state 739
    "!="    shift, and go to state 740
    "->"    shift, and go to state 741
    "<-"    shift, and go to state 844
    "??"    shift, and go to state 743
    "?."    shift, and go to state 744
    "?["    shift, and go to state 745
    "<|"    shift, and go to state 746
    "|>"    shift, and go to state 747
    ":="    shift, and go to state 748
    "<<<"   shift, and go to state 749
    ">>>"   shift, and go to state 750
    "<<<="  shift, and go to state 751
    ">>>="  shift, and go to state 752
    "&&"    shift, and go to state 753
    "||"    shift, and go to state 754
    "^^"    shift, and go to state 755
    "&&="   shift, and go to state 756
    "||="   shift, and go to state 757
    "^^="   shift, and go to state 758
    ".."    shift, and go to state 759
    '='     shift, and go to state 845
    '?'     shift, and go to state 761
    '|'     shift, and go to state 762
    '^'     shift, and go to state 763
    '&'     shift, and go to state 764
    '<'     shift, and go to state 765
    '>'     shift, and go to state 766
    '-'     shift, and go to state 767
    '+'     shift, and go to state 768
    '*'     shift, and go to state 769
    '/'     shift, and go to state 770
    '%'     shift, and go to state 771
    '.'     shift, and go to state 772
    '['     shift, and go to state 773

    " <|"     reduce using rule 336 (expr_assign)
    $default  reduce using rule 279 (expression_yield_no_pipe)


State 665

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  417     | "++" expr .
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 721
    "as"  shift, and go to state 722
    "++"  shift, and go to state 733
    "--"  shift, and go to state 734
    "->"  shift, and go to state 741
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    "<|"  shift, and go to state 746
    "|>"  shift, and go to state 747
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 417 (expr)


State 666

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  418     | "--" expr .
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 721
    "as"  shift, and go to state 722
    "++"  shift, and go to state 733
    "--"  shift, and go to state 734
    "->"  shift, and go to state 741
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    "<|"  shift, and go to state 746
    "|>"  shift, and go to state 747
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 418 (expr)


State 667

  316 block_or_lambda: '@' .
  317                | '@' . '@'

    '@'  shift, and go to state 869

    $default  reduce using rule 316 (block_or_lambda)


State 668

  326 expr_block: expression_block .

    $default  reduce using rule 326 (expr_block)


State 669

  327 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 870


State 670

  256 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 256 (expr_pipe)


State 671

  254 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 254 (expr_pipe)


State 672

  255 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 255 (expr_pipe)


State 673

  469 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 871
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 674

  470 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 872
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 675

  471 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 873
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 676

  472 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 874
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 677

  473 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 875
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 678

  475 expr_mtag: "$c" '(' . expr ')' '(' ')'
  476          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 876
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 679

  817 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 877


State 680

  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"
  763 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  764                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  765                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  766                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  793 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "const"                           shift, and go to state 399
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "where"                           shift, and go to state 878
    "reinterpret"                     shift, and go to state 452
    "implicit"                        shift, and go to state 400
    "explicit"                        shift, and go to state 401
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "=="                              shift, and go to state 402
    "??"                              shift, and go to state 403
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 879
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 880
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '?'                               shift, and go to state 404
    '&'                               shift, and go to state 405
    '-'                               shift, and go to state 881
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 882
    '('                               shift, and go to state 883
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498
    '#'                               shift, and go to state 408

    $default  reduce using rule 749 (optional_block)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 884
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    dim_list                go to state 409
    make_decl               go to state 543
    make_struct_fields      go to state 885
    make_struct_dim         go to state 886
    optional_block          go to state 887
    make_struct_decl        go to state 544
    make_tuple              go to state 888
    make_tuple_call         go to state 545
    make_dim                go to state 889
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 681

  818 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 890


State 682

  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"
  767 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  768                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  794 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "const"                           shift, and go to state 399
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "implicit"                        shift, and go to state 400
    "explicit"                        shift, and go to state 401
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "=="                              shift, and go to state 402
    "??"                              shift, and go to state 403
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 879
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 880
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '?'                               shift, and go to state 404
    '&'                               shift, and go to state 405
    '-'                               shift, and go to state 881
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 882
    '('                               shift, and go to state 891
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498
    '#'                               shift, and go to state 408

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 884
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    dim_list                go to state 409
    make_decl               go to state 543
    make_struct_fields      go to state 885
    make_struct_dim         go to state 892
    make_struct_decl        go to state 544
    make_tuple              go to state 888
    make_tuple_call         go to state 545
    make_dim                go to state 893
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 683

  820 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 894


State 684

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  784 make_map_tuple: expr . "=>" expr
  785               | expr .

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "=>"   shift, and go to state 895
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 785 (make_map_tuple)


State 685

  803 make_table: make_map_tuple .

    $default  reduce using rule 803 (make_table)


State 686

  804 make_table: make_table . ';' make_map_tuple
  808 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    ";}}"  shift, and go to state 896
    ';'    shift, and go to state 897
    '}'    shift, and go to state 898

    optional_trailing_semicolon_cur_cur  go to state 899


State 687

  249 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options_list '>' $@8 expr

    $default  reduce using rule 247 ($@7)

    $@7  go to state 900


State 688

  242 expr_keyword: "keyword" expr . expression_block
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    '{'    shift, and go to state 284

    expression_block  go to state 901


State 689

  252 expression_keyword: "type function" '<' . $@9 type_declaration_no_options_list '>' $@10 '(' expr_list ')'

    $default  reduce using rule 250 ($@9)

    $@9  go to state 902


State 690

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 903
    "{"                   shift, and go to state 904

    character_sequence  go to state 905


State 691

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  394 expr: '-' expr .
  395     | expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 721
    "as"  shift, and go to state 722
    "++"  shift, and go to state 733
    "--"  shift, and go to state 734
    "->"  shift, and go to state 741
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    "<|"  shift, and go to state 746
    "|>"  shift, and go to state 747
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 394 (expr)


State 692

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  393 expr: '+' expr .
  395     | expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 721
    "as"  shift, and go to state 722
    "++"  shift, and go to state 733
    "--"  shift, and go to state 734
    "->"  shift, and go to state 741
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    "<|"  shift, and go to state 746
    "|>"  shift, and go to state 747
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 393 (expr)


State 693

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  434     | '*' expr .
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 434 (expr)


State 694

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  392 expr: '~' expr .
  395     | expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 721
    "as"  shift, and go to state 722
    "++"  shift, and go to state 733
    "--"  shift, and go to state 734
    "->"  shift, and go to state 741
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    "<|"  shift, and go to state 746
    "|>"  shift, and go to state 747
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 392 (expr)


State 695

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  391 expr: '!' expr .
  395     | expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 721
    "as"  shift, and go to state 722
    "++"  shift, and go to state 733
    "--"  shift, and go to state 734
    "->"  shift, and go to state 741
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    "<|"  shift, and go to state 746
    "|>"  shift, and go to state 747
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 391 (expr)


State 696

  816 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 906


State 697

  311 expr_list: expr_list . ',' expr
  792 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 907

    $default  reduce using rule 814 (optional_comma)

    optional_comma  go to state 908


State 698

  310 expr_list: expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 310 (expr_list)


State 699

  311 expr_list: expr_list . ',' expr
  421 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 907

    $default  reduce using rule 814 (optional_comma)

    optional_comma  go to state 909


State 700

  317 block_or_lambda: '@' '@' .
  367 func_addr_expr: '@' '@' . func_addr_name
  370               | '@' '@' . '<' $@21 type_declaration_no_options '>' $@22 func_addr_name
  373               | '@' '@' . '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name
  484 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 910
    "$c"    shift, and go to state 911
    "name"  shift, and go to state 59
    '<'     shift, and go to state 912

    $default  reduce using rule 317 (block_or_lambda)

    name_in_namespace  go to state 913
    func_addr_name     go to state 914


State 701

  819 array_comprehension: '{' "for" . variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 915


State 702

  805 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 805 (expr_map_tuple_list)


State 703

  806 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  807 make_table_decl: '{' expr_map_tuple_list . optional_comma '}'

    ','  shift, and go to state 916

    $default  reduce using rule 814 (optional_comma)

    optional_comma  go to state 917


State 704

  217 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 918


State 705

  236 expression_any: expression_label ';' .

    $default  reduce using rule 236 (expression_any)


State 706

  237 expression_any: expression_goto ';' .

    $default  reduce using rule 237 (expression_any)


State 707

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    '{'    shift, and go to state 284

    expression_block  go to state 919


State 708

   74 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner ';'

    $default  reduce using rule 73 ($@3)

    $@3  go to state 920


State 709

  466 expr: name_in_namespace "name" .

    $default  reduce using rule 466 (expr)


State 710

  361 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  362                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  429 expr: name_in_namespace '(' . ')'
  430     | name_in_namespace '(' . make_struct_dim ')'
  431     | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 879
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 880
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 921
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 922
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 923
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_fields      go to state 885
    make_struct_dim         go to state 924
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 711

  223 expression_any: expression_delete ';' .

    $default  reduce using rule 223 (expression_any)


State 712

  230 expression_any: expression_break ';' .

    $default  reduce using rule 230 (expression_any)


State 713

  231 expression_any: expression_continue ';' .

    $default  reduce using rule 231 (expression_any)


State 714

  276 expression_return: expression_return_no_pipe ';' .

    $default  reduce using rule 276 (expression_return)


State 715

  281 expression_yield: expression_yield_no_pipe ';' .

    $default  reduce using rule 281 (expression_yield)


State 716

  287 optional_in_scope: "inscope" .

    $default  reduce using rule 287 (optional_in_scope)


State 717

  293 expression_let: kwd_let optional_in_scope . let_variable_declaration
  294               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 299
    "[["    shift, and go to state 925
    "name"  shift, and go to state 300

    tuple_expansion_variable_declaration  go to state 926
    let_variable_name_with_pos_list       go to state 301
    let_variable_declaration              go to state 927


State 718

  328 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 928

    $default  reduce using rule 324 (optional_capture_list)

    optional_capture_list  go to state 929


State 719

  253 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 667
    '{'  shift, and go to state 284

    expression_block  go to state 668
    block_or_lambda   go to state 669
    expr_block        go to state 930


State 720

  222 expression_any: expr_assign ';' .

    $default  reduce using rule 222 (expression_any)


State 721

  443 expr: expr "is" . "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr "is" . basic_type_declaration
  445     | expr "is" . "name"
  483 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 931
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 458
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 932
    "name"      shift, and go to state 933

    basic_type_declaration  go to state 934


State 722

  446 expr: expr "as" . "name"
  449     | expr "as" . "type" '<' $@29 type_declaration '>' $@30
  450     | expr "as" . basic_type_declaration
  481 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 935
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 458
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 936
    "name"      shift, and go to state 937

    basic_type_declaration  go to state 938


State 723

  346 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 939
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 724

  347 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 940
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 725

  349 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 941
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 726

  348 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 942
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 727

  350 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 943
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 728

  340 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 944
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 729

  341 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 945
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 730

  342 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 946
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 731

  395 expr: expr "<<" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 947
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 732

  396 expr: expr ">>" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 948
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 733

  419 expr: expr "++" .

    $default  reduce using rule 419 (expr)


State 734

  420 expr: expr "--" .

    $default  reduce using rule 420 (expr)


State 735

  408 expr: expr "<=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 949
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 736

  351 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 950
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 737

  352 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 951
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 738

  409 expr: expr ">=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 952
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 739

  406 expr: expr "==" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 953
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 740

  407 expr: expr "!=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 954
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 741

  363 expr_method_call: expr "->" . "name" '(' ')'
  364                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 955


State 742

  338 expr_assign: expr "<-" . expr
  358 expr_assign_pipe: expr "<-" . "@ <|" expr_block
  359                 | expr "<-" . "@@ <|" expr_block
  360                 | expr "<-" . "$ <|" expr_block

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 956
    "@ <|"                            shift, and go to state 957
    "@@ <|"                           shift, and go to state 958
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 959
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 743

  439 expr: expr "??" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 960
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 744

  426 expr: expr "?." . "name"
  478 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 961
    "name"  shift, and go to state 962


State 745

  424 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 963
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 746

  463 expr: expr "<|" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 964
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 747

  464 expr: expr "|>" . expr
  465     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 965
    expr_mtag               go to state 541
    basic_type_declaration  go to state 966
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 748

  339 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 967
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 749

  397 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 968
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 750

  398 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 969
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 751

  353 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 970
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 752

  354 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 971
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 753

  413 expr: expr "&&" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 972
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 754

  414 expr: expr "||" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 973
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 755

  415 expr: expr "^^" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 974
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 756

  343 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 975
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 757

  344 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 976
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 758

  345 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 977
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 759

  416 expr: expr ".." . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 978
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 760

  337 expr_assign: expr '=' . expr
  355 expr_assign_pipe: expr '=' . "@ <|" expr_block
  356                 | expr '=' . "@@ <|" expr_block
  357                 | expr '=' . "$ <|" expr_block

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 982
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 761

  440 expr: expr '?' . expr ':' expr
  451     | expr '?' . "as" "name"
  454     | expr '?' . "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr '?' . "as" basic_type_declaration
  482 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "as"                              shift, and go to state 983
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 984
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 762

  411 expr: expr '|' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 985
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 763

  412 expr: expr '^' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 986
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 764

  410 expr: expr '&' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 987
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 765

  404 expr: expr '<' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 988
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 766

  405 expr: expr '>' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 989
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 767

  400 expr: expr '-' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 990
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 768

  399 expr: expr '+' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 991
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 769

  401 expr: expr '*' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 992
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 770

  402 expr: expr '/' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 993
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 771

  403 expr: expr '%' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 994
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 772

  374 expr_field: expr '.' . "name"
  375           | expr '.' . '.' "name"
  376           | expr '.' . "name" '(' ')'
  377           | expr '.' . "name" '(' expr_list ')'
  380           | expr '.' . $@25 error $@26
  423 expr: expr '.' . '[' expr ']'
  425     | expr '.' . "?[" expr ']'
  427     | expr '.' . "?." "name"
  477 expr_mtag: expr '.' . "$f" '(' expr ')'
  479          | expr '.' . '.' "$f" '(' expr ')'
  480          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 995
    "?["    shift, and go to state 996
    "$f"    shift, and go to state 997
    "name"  shift, and go to state 998
    '.'     shift, and go to state 999
    '['     shift, and go to state 1000

    $default  reduce using rule 378 ($@25)

    $@25  go to state 1001


State 773

  422 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1002
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 774

  432 expr: basic_type_declaration '(' . ')'
  433     | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1003
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 1004
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 775

  559 enum_list: enum_list . ';'
  560          | enum_list . "name" ';'
  561          | enum_list . "name" '=' expr ';'
  581 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list . $@43 '}'

    "name"  shift, and go to state 550
    ';'     shift, and go to state 551

    $default  reduce using rule 580 ($@43)

    $@43  go to state 1005


State 776

  561 enum_list: enum_list "name" '=' . expr ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1006
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 777

  560 enum_list: enum_list "name" ';' .

    $default  reduce using rule 560 (enum_list)


State 778

  578 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 '}' .

    $default  reduce using rule 578 (enum_declaration)


State 779

  118 optional_annotation_list: '[' . annotation_list ']'
  505 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 1007
    name_in_namespace             go to state 70


State 780

  593 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 593 (optional_struct_variable_declaration_list)


State 781

  502 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  504                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "def"  shift, and go to state 1008


State 782

  500 struct_variable_declaration_list: struct_variable_declaration_list $@33 . structure_variable_declaration ';'

    "[["  shift, and go to state 218

    $default  reduce using rule 485 (optional_field_annotation)

    optional_field_annotation       go to state 1009
    structure_variable_declaration  go to state 1010


State 783

  538 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 538 (let_variable_name_with_pos_list)


State 784

  541 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1011


State 785

  542 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 542 (let_variable_declaration)


State 786

  543 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'
  544                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    expr_pipe               go to state 1012
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_assign             go to state 635
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1013
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 787

  546 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 546 (let_variable_declaration)


State 788

  336 expr_assign: expr .
  337            | expr . '=' expr
  338            | expr . "<-" expr
  339            | expr . ":=" expr
  340            | expr . "&=" expr
  341            | expr . "|=" expr
  342            | expr . "^=" expr
  343            | expr . "&&=" expr
  344            | expr . "||=" expr
  345            | expr . "^^=" expr
  346            | expr . "+=" expr
  347            | expr . "-=" expr
  348            | expr . "*=" expr
  349            | expr . "/=" expr
  350            | expr . "%=" expr
  351            | expr . "<<=" expr
  352            | expr . ">>=" expr
  353            | expr . "<<<=" expr
  354            | expr . ">>>=" expr
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  545 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 721
    "as"    shift, and go to state 722
    "+="    shift, and go to state 723
    "-="    shift, and go to state 724
    "/="    shift, and go to state 725
    "*="    shift, and go to state 726
    "%="    shift, and go to state 727
    "&="    shift, and go to state 728
    "|="    shift, and go to state 729
    "^="    shift, and go to state 730
    "<<"    shift, and go to state 731
    ">>"    shift, and go to state 732
    "++"    shift, and go to state 733
    "--"    shift, and go to state 734
    "<="    shift, and go to state 735
    "<<="   shift, and go to state 736
    ">>="   shift, and go to state 737
    ">="    shift, and go to state 738
    "=="    shift, and go to state 739
    "!="    shift, and go to state 740
    "->"    shift, and go to state 741
    "<-"    shift, and go to state 844
    "??"    shift, and go to state 743
    "?."    shift, and go to state 744
    "?["    shift, and go to state 745
    "<|"    shift, and go to state 746
    "|>"    shift, and go to state 747
    ":="    shift, and go to state 748
    "<<<"   shift, and go to state 749
    ">>>"   shift, and go to state 750
    "<<<="  shift, and go to state 751
    ">>>="  shift, and go to state 752
    "&&"    shift, and go to state 753
    "||"    shift, and go to state 754
    "^^"    shift, and go to state 755
    "&&="   shift, and go to state 756
    "||="   shift, and go to state 757
    "^^="   shift, and go to state 758
    ".."    shift, and go to state 759
    '='     shift, and go to state 845
    '?'     shift, and go to state 761
    '|'     shift, and go to state 762
    '^'     shift, and go to state 763
    '&'     shift, and go to state 764
    '<'     shift, and go to state 765
    '>'     shift, and go to state 766
    '-'     shift, and go to state 767
    '+'     shift, and go to state 768
    '*'     shift, and go to state 769
    '/'     shift, and go to state 770
    '%'     shift, and go to state 771
    '.'     shift, and go to state 772
    '['     shift, and go to state 773
    ';'     shift, and go to state 1014

    $default  reduce using rule 336 (expr_assign)


State 789

  659 type_declaration_no_options: "type" '<' $@48 type_declaration . '>' $@49
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1015


State 790

  682 type_declaration_no_options: "array" '<' $@53 type_declaration . '>' $@54
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1016


State 791

  685 type_declaration_no_options: "table" '<' $@55 table_type_pair . '>' $@56

    '>'  shift, and go to state 1017


State 792

  647 table_type_pair: type_declaration .
  648                | type_declaration . ';' type_declaration
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    ';'  shift, and go to state 1018

    $default  reduce using rule 647 (table_type_pair)


State 793

  660 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 660 (type_declaration_no_options)


State 794

  688 type_declaration_no_options: "iterator" '<' $@57 type_declaration . '>' $@58
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1019


State 795

  678 type_declaration_no_options: "smart_ptr" '<' $@51 type_declaration . '>' $@52
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1020


State 796

  637 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 637 (auto_type_declaration)


State 797

  639 bitfield_bits: "name" .

    $default  reduce using rule 639 (bitfield_bits)


State 798

  640 bitfield_bits: bitfield_bits . ';' "name"
  646 bitfield_type_declaration: "bitfield" '<' $@46 bitfield_bits . '>' $@47

    '>'  shift, and go to state 1021
    ';'  shift, and go to state 1022


State 799

  692 type_declaration_no_options: "block" '<' $@59 type_declaration . '>' $@60
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1023


State 800

  695 type_declaration_no_options: "block" '<' $@61 optional_function_argument_list . optional_function_type '>' $@62

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1024


State 801

  699 type_declaration_no_options: "function" '<' $@63 type_declaration . '>' $@64
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1025


State 802

  702 type_declaration_no_options: "function" '<' $@65 optional_function_argument_list . optional_function_type '>' $@66

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1026


State 803

  706 type_declaration_no_options: "lambda" '<' $@67 type_declaration . '>' $@68
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1027


State 804

  709 type_declaration_no_options: "lambda" '<' $@69 optional_function_argument_list . optional_function_type '>' $@70

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1028


State 805

  513 tuple_type_list: tuple_type .

    $default  reduce using rule 513 (tuple_type_list)


State 806

  514 tuple_type_list: tuple_type_list . ';' tuple_type
  712 type_declaration_no_options: "tuple" '<' $@71 tuple_type_list . '>' $@72

    '>'  shift, and go to state 1029
    ';'  shift, and go to state 1030


State 807

  519 variant_type_list: variant_type .

    $default  reduce using rule 519 (variant_type_list)


State 808

  520 variant_type_list: variant_type_list . ';' variant_type
  715 type_declaration_no_options: "variant" '<' $@73 variant_type_list . '>' $@74

    '>'  shift, and go to state 1031
    ';'  shift, and go to state 1032


State 809

  638 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 638 (auto_type_declaration)


State 810

  663 type_declaration_no_options: '$' name_in_namespace '<' $@50 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1033
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1034


State 811

  661 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1035


State 812

  244 optional_expr_list: expr_list .
  311 expr_list: expr_list . ',' expr

    ','  shift, and go to state 843

    $default  reduce using rule 244 (optional_expr_list)


State 813

  664 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 664 (type_declaration_no_options)


State 814

  649 dim_list: '[' expr ']' .

    $default  reduce using rule 649 (dim_list)


State 815

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  650 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ']'    shift, and go to state 1036


State 816

  643 bitfield_alias_bits: bitfield_alias_bits "name" ';' .

    $default  reduce using rule 643 (bitfield_alias_bits)


State 817

  733 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@83 "name" $@84 '{' $@85 bitfield_alias_bits $@86 '}' .

    $default  reduce using rule 733 (bitfield_alias_declaration)


State 818

  512 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1037


State 819

  517 tuple_alias_type_list: tuple_alias_type_list tuple_type ';' .

    $default  reduce using rule 517 (tuple_alias_type_list)


State 820

  723 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@75 "name" $@76 '{' $@77 tuple_alias_type_list $@78 '}' .

    $default  reduce using rule 723 (tuple_alias_declaration)


State 821

  518 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1038


State 822

  523 variant_alias_type_list: variant_alias_type_list variant_type ';' .

    $default  reduce using rule 523 (variant_alias_type_list)


State 823

  728 variant_alias_declaration: "variant" optional_public_or_private_alias $@79 "name" $@80 '{' $@81 variant_alias_type_list $@82 '}' .

    $default  reduce using rule 728 (variant_alias_declaration)


State 824

  508 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 508 (function_argument_declaration)


State 825

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  598 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1039


State 826

  599 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 599 (variable_name_with_pos_list)


State 827

  600 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  601                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1040

    $default  reduce using rule 600 (variable_name_with_pos_list)


State 828

  528 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  529                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 613
    '='   shift, and go to state 615
    '|'   shift, and go to state 410

    $default  reduce using rule 528 (variable_declaration)

    copy_or_move  go to state 1041


State 829

  531 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 531 (variable_declaration)


State 830

  336 expr_assign: expr .
  337            | expr . '=' expr
  338            | expr . "<-" expr
  339            | expr . ":=" expr
  340            | expr . "&=" expr
  341            | expr . "|=" expr
  342            | expr . "^=" expr
  343            | expr . "&&=" expr
  344            | expr . "||=" expr
  345            | expr . "^^=" expr
  346            | expr . "+=" expr
  347            | expr . "-=" expr
  348            | expr . "*=" expr
  349            | expr . "/=" expr
  350            | expr . "%=" expr
  351            | expr . "<<=" expr
  352            | expr . ">>=" expr
  353            | expr . "<<<=" expr
  354            | expr . ">>>=" expr
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  530 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 721
    "as"    shift, and go to state 722
    "+="    shift, and go to state 723
    "-="    shift, and go to state 724
    "/="    shift, and go to state 725
    "*="    shift, and go to state 726
    "%="    shift, and go to state 727
    "&="    shift, and go to state 728
    "|="    shift, and go to state 729
    "^="    shift, and go to state 730
    "<<"    shift, and go to state 731
    ">>"    shift, and go to state 732
    "++"    shift, and go to state 733
    "--"    shift, and go to state 734
    "<="    shift, and go to state 735
    "<<="   shift, and go to state 736
    ">>="   shift, and go to state 737
    ">="    shift, and go to state 738
    "=="    shift, and go to state 739
    "!="    shift, and go to state 740
    "->"    shift, and go to state 741
    "<-"    shift, and go to state 844
    "??"    shift, and go to state 743
    "?."    shift, and go to state 744
    "?["    shift, and go to state 745
    "<|"    shift, and go to state 746
    "|>"    shift, and go to state 747
    ":="    shift, and go to state 748
    "<<<"   shift, and go to state 749
    ">>>"   shift, and go to state 750
    "<<<="  shift, and go to state 751
    ">>>="  shift, and go to state 752
    "&&"    shift, and go to state 753
    "||"    shift, and go to state 754
    "^^"    shift, and go to state 755
    "&&="   shift, and go to state 756
    "||="   shift, and go to state 757
    "^^="   shift, and go to state 758
    ".."    shift, and go to state 759
    '='     shift, and go to state 845
    '?'     shift, and go to state 761
    '|'     shift, and go to state 762
    '^'     shift, and go to state 763
    '&'     shift, and go to state 764
    '<'     shift, and go to state 765
    '>'     shift, and go to state 766
    '-'     shift, and go to state 767
    '+'     shift, and go to state 768
    '*'     shift, and go to state 769
    '/'     shift, and go to state 770
    '%'     shift, and go to state 771
    '.'     shift, and go to state 772
    '['     shift, and go to state 773

    " <|"     reduce using rule 336 (expr_assign)
    $default  reduce using rule 530 (variable_declaration)


State 831

  771 make_struct_decl: "struct" '<' $@87 . type_declaration_no_options '>' $@88 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1042


State 832

  774 make_struct_decl: "class" '<' $@89 . type_declaration_no_options '>' $@90 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1043


State 833

   78 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 78 (expression_while_loop)


State 834

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  600 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  601                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1044
    ','   shift, and go to state 614


State 835

  264 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1045


State 836

  267 expr_new: "new" new_type_declaration '(' . ')'
  268         | "new" new_type_declaration '(' . expr_list ')'
  269         | "new" new_type_declaration '(' . make_struct_dim ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 879
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 880
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1046
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 1047
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_fields      go to state 885
    make_struct_dim         go to state 1048
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 837

  307 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  308               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  309               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '<'                               shift, and go to state 1049
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1050
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 838

  306 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1051


State 839

  798 make_dim_decl: "array" '<' $@97 . type_declaration_no_options '>' $@98 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1052


State 840

  311 expr_list: expr_list . ',' expr
  795 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 907

    $default  reduce using rule 814 (optional_comma)

    optional_comma  go to state 1053


State 841

  278 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 278 (expression_return)


State 842

  275 expression_return_no_pipe: "return" "<-" expr_list .
  311 expr_list: expr_list . ',' expr

    ','  shift, and go to state 843

    $default  reduce using rule 275 (expression_return_no_pipe)


State 843

  311 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1054
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 844

  338 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 959
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 845

  337 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 982
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 846

  284 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1055


State 847

  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"
  810 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  811                | "table" '<' type_declaration_no_options . ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1056
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    ';'         shift, and go to state 1057
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 848

  806 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  809 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 916

    $default  reduce using rule 814 (optional_comma)

    optional_comma  go to state 1058


State 849

  261 expression_delete: "delete" "explicit" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 261 (expression_delete)


State 850

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  435     | "deref" '(' expr . ')'
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1059


State 851

   79 expression_with: "with" expr expression_block .

    $default  reduce using rule 79 (expression_with)


State 852

   81 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 80 ($@5)

    $@5  go to state 1060


State 853

  297 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1061


State 854

  300 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1062


State 855

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  436     | "addr" '(' expr . ')'
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1063


State 856

  303 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1064


State 857

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 858

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 859

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  467     | "unsafe" '(' expr . ')'
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1065


State 860

  802 make_dim_decl: "fixed_array" '<' $@99 . type_declaration_no_options '>' $@100 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1066


State 861

  311 expr_list: expr_list . ',' expr
  799 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 907

    $default  reduce using rule 814 (optional_comma)

    optional_comma  go to state 1067


State 862

  780 make_struct_decl: "default" '<' $@93 . type_declaration_no_options '>' $@94

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1068


State 863

  789 make_tuple_call: "tuple" '<' $@95 . type_declaration_no_options '>' $@96 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1069


State 864

  311 expr_list: expr_list . ',' expr
  786 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 907

    $default  reduce using rule 814 (optional_comma)

    optional_comma  go to state 1070


State 865

  777 make_struct_decl: "variant" '<' $@91 . type_declaration_no_options '>' $@92 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1071


State 866

  437 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  438     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1072
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 867

  283 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 283 (expression_yield)


State 868

  280 expression_yield_no_pipe: "yield" "<-" expr .
  336 expr_assign: expr .
  337            | expr . '=' expr
  338            | expr . "<-" expr
  339            | expr . ":=" expr
  340            | expr . "&=" expr
  341            | expr . "|=" expr
  342            | expr . "^=" expr
  343            | expr . "&&=" expr
  344            | expr . "||=" expr
  345            | expr . "^^=" expr
  346            | expr . "+=" expr
  347            | expr . "-=" expr
  348            | expr . "*=" expr
  349            | expr . "/=" expr
  350            | expr . "%=" expr
  351            | expr . "<<=" expr
  352            | expr . ">>=" expr
  353            | expr . "<<<=" expr
  354            | expr . ">>>=" expr
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 721
    "as"    shift, and go to state 722
    "+="    shift, and go to state 723
    "-="    shift, and go to state 724
    "/="    shift, and go to state 725
    "*="    shift, and go to state 726
    "%="    shift, and go to state 727
    "&="    shift, and go to state 728
    "|="    shift, and go to state 729
    "^="    shift, and go to state 730
    "<<"    shift, and go to state 731
    ">>"    shift, and go to state 732
    "++"    shift, and go to state 733
    "--"    shift, and go to state 734
    "<="    shift, and go to state 735
    "<<="   shift, and go to state 736
    ">>="   shift, and go to state 737
    ">="    shift, and go to state 738
    "=="    shift, and go to state 739
    "!="    shift, and go to state 740
    "->"    shift, and go to state 741
    "<-"    shift, and go to state 844
    "??"    shift, and go to state 743
    "?."    shift, and go to state 744
    "?["    shift, and go to state 745
    "<|"    shift, and go to state 746
    "|>"    shift, and go to state 747
    ":="    shift, and go to state 748
    "<<<"   shift, and go to state 749
    ">>>"   shift, and go to state 750
    "<<<="  shift, and go to state 751
    ">>>="  shift, and go to state 752
    "&&"    shift, and go to state 753
    "||"    shift, and go to state 754
    "^^"    shift, and go to state 755
    "&&="   shift, and go to state 756
    "||="   shift, and go to state 757
    "^^="   shift, and go to state 758
    ".."    shift, and go to state 759
    '='     shift, and go to state 845
    '?'     shift, and go to state 761
    '|'     shift, and go to state 762
    '^'     shift, and go to state 763
    '&'     shift, and go to state 764
    '<'     shift, and go to state 765
    '>'     shift, and go to state 766
    '-'     shift, and go to state 767
    '+'     shift, and go to state 768
    '*'     shift, and go to state 769
    '/'     shift, and go to state 770
    '%'     shift, and go to state 771
    '.'     shift, and go to state 772
    '['     shift, and go to state 773

    " <|"     reduce using rule 336 (expr_assign)
    $default  reduce using rule 280 (expression_yield_no_pipe)


State 869

  317 block_or_lambda: '@' '@' .

    $default  reduce using rule 317 (block_or_lambda)


State 870

  327 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 928

    $default  reduce using rule 324 (optional_capture_list)

    optional_capture_list  go to state 1073


State 871

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  469 expr_mtag: "$$" '(' expr . ')'
  477          | expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1074


State 872

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  470 expr_mtag: "$i" '(' expr . ')'
  477          | expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1075


State 873

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  471 expr_mtag: "$v" '(' expr . ')'
  477          | expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1076


State 874

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  472 expr_mtag: "$b" '(' expr . ')'
  477          | expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1077


State 875

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  473 expr_mtag: "$a" '(' expr . ')'
  477          | expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1078


State 876

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  475 expr_mtag: "$c" '(' expr . ')' '(' ')'
  476          | "$c" '(' expr . ')' '(' expr_list ')'
  477          | expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1079


State 877

  600 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  601                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  817 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1080
    ','   shift, and go to state 614


State 878

  750 optional_block: "where" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 667
    '{'  shift, and go to state 284

    expression_block  go to state 668
    block_or_lambda   go to state 669
    expr_block        go to state 1081


State 879

  743 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  744                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1082


State 880

  257 name_in_namespace: "name" .
  258                  | "name" . "::" "name"
  739 make_struct_fields: "name" . copy_or_move expr
  740                   | "name" . ":=" expr

    "<-"  shift, and go to state 613
    ":="  shift, and go to state 1083
    "::"  shift, and go to state 98
    '='   shift, and go to state 615

    $default  reduce using rule 257 (name_in_namespace)

    copy_or_move  go to state 1084


State 881

  394 expr: '-' . expr
  664 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  667                            | type_declaration_no_options '-' . "const"
  669                            | type_declaration_no_options '-' . '&'
  672                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "const"                           shift, and go to state 588
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '&'                               shift, and go to state 589
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 1085
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498
    '#'                               shift, and go to state 591

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 691
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 882

  649 dim_list: '[' . expr ']'
  656 type_declaration_no_options: type_declaration_no_options '[' . ']'
  792 make_dim_decl: '[' . expr_list optional_comma ']'
  816 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 696
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    ']'                               shift, and go to state 592
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 697
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1086
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 883

  421 expr: '(' . expr_list optional_comma ')'
  765 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  766                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1087
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 699
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 884

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  781 make_tuple: expr .
  782           | expr . "=>" expr

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "=>"   shift, and go to state 1088
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 781 (make_tuple)


State 885

  741 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  742                   | make_struct_fields . ',' "name" ":=" expr
  745                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  746                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  747 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1089

    $default  reduce using rule 747 (make_struct_dim)


State 886

  748 make_struct_dim: make_struct_dim . ';' make_struct_fields
  763 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 878
    ';'      shift, and go to state 1090

    $default  reduce using rule 749 (optional_block)

    optional_block  go to state 1091


State 887

  764 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1092
    ",]]"  shift, and go to state 1093
    ']'    shift, and go to state 1094

    optional_trailing_delim_sqr_sqr  go to state 1095


State 888

  783 make_tuple: make_tuple . ',' expr
  790 make_dim: make_tuple .

    ','  shift, and go to state 1096

    $default  reduce using rule 790 (make_dim)


State 889

  791 make_dim: make_dim . ';' make_tuple
  793 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    ";]]"  shift, and go to state 1097
    ']'    shift, and go to state 1098
    ';'    shift, and go to state 1099

    optional_trailing_semicolon_sqr_sqr  go to state 1100


State 890

  600 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  601                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  818 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 1101
    ','   shift, and go to state 614


State 891

  421 expr: '(' . expr_list optional_comma ')'
  768 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1102
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 699
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 892

  748 make_struct_dim: make_struct_dim . ';' make_struct_fields
  767 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 878
    ';'      shift, and go to state 1090

    $default  reduce using rule 749 (optional_block)

    optional_block  go to state 1103


State 893

  791 make_dim: make_dim . ';' make_tuple
  794 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    ";}]"  shift, and go to state 1104
    ';'    shift, and go to state 1099
    '}'    shift, and go to state 1105

    optional_trailing_semicolon_cur_sqr  go to state 1106


State 894

  600 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  601                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  820 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "in"  shift, and go to state 1107
    ','   shift, and go to state 614


State 895

  784 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1108
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 896

  752 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 752 (optional_trailing_semicolon_cur_cur)


State 897

  804 make_table: make_table ';' . make_map_tuple

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 684
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 1109
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 898

  751 optional_trailing_semicolon_cur_cur: '}' . '}'

    '}'  shift, and go to state 1110


State 899

  808 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 808 (make_table_decl)


State 900

  249 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options_list '>' $@8 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1111
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1034


State 901

  242 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 242 (expr_keyword)


State 902

  252 expression_keyword: "type function" '<' $@9 . type_declaration_no_options_list '>' $@10 '(' expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1112
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1034


State 903

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 904

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1113
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 905

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 906

  600 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  601                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  816 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1114
    ','   shift, and go to state 614


State 907

  311 expr_list: expr_list ',' . expr
  815 optional_comma: ',' .

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 815 (optional_comma)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1054
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 908

  792 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1115


State 909

  421 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1116


State 910

  366 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1117


State 911

  484 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1118


State 912

  370 func_addr_expr: '@' '@' '<' . $@21 type_declaration_no_options '>' $@22 func_addr_name
  373               | '@' '@' '<' . $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name

    ':'       reduce using rule 371 ($@23)
    '>'       reduce using rule 371 ($@23)
    '('       reduce using rule 371 ($@23)
    $default  reduce using rule 368 ($@21)

    $@21  go to state 1119
    $@23  go to state 1120


State 913

  365 func_addr_name: name_in_namespace .

    $default  reduce using rule 365 (func_addr_name)


State 914

  367 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 367 (func_addr_expr)


State 915

  600 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  601                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  819 array_comprehension: '{' "for" variable_name_with_pos_list . "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1121
    ','   shift, and go to state 614


State 916

  806 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  815 optional_comma: ',' .

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 815 (optional_comma)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 684
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 1122
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 917

  807 make_table_decl: '{' expr_map_tuple_list optional_comma . '}'

    '}'  shift, and go to state 1123


State 918

  217 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 239 (expressions)

    expressions  go to state 1124


State 919

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1125
    "elif"         shift, and go to state 1126
    "static_elif"  shift, and go to state 1127

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1128
    expression_else      go to state 1129


State 920

   74 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1130
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 921

  361 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  792 make_dim_decl: '[' . expr_list optional_comma ']'
  816 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 696
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 879
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 880
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 697
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_fields      go to state 1131
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 922

  429 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 429 (expr)


State 923

  311 expr_list: expr_list . ',' expr
  362 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  431 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1132
    ')'  shift, and go to state 1133


State 924

  430 expr: name_in_namespace '(' make_struct_dim . ')'
  748 make_struct_dim: make_struct_dim . ';' make_struct_fields

    ')'  shift, and go to state 1134
    ';'  shift, and go to state 1090


State 925

  291 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  292                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

    "name"  shift, and go to state 1135

    tuple_expansion  go to state 1136


State 926

  294 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 294 (expression_let)


State 927

  293 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 293 (expression_let)


State 928

  325 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1137
    ":="  shift, and go to state 1138
    '='   shift, and go to state 1139
    '&'   shift, and go to state 1140

    capture_entry  go to state 1141
    capture_list   go to state 1142


State 929

  328 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1143


State 930

  253 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 253 (expr_pipe)


State 931

  443 expr: expr "is" "type" . '<' $@27 type_declaration_no_options '>' $@28

    '<'  shift, and go to state 1144


State 932

  483 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1145


State 933

  445 expr: expr "is" "name" .

    $default  reduce using rule 445 (expr)


State 934

  444 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 444 (expr)


State 935

  449 expr: expr "as" "type" . '<' $@29 type_declaration '>' $@30

    '<'  shift, and go to state 1146


State 936

  481 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1147


State 937

  446 expr: expr "as" "name" .

    $default  reduce using rule 446 (expr)


State 938

  450 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 450 (expr)


State 939

  346 expr_assign: expr "+=" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 346 (expr_assign)


State 940

  347 expr_assign: expr "-=" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 347 (expr_assign)


State 941

  349 expr_assign: expr "/=" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 349 (expr_assign)


State 942

  348 expr_assign: expr "*=" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 348 (expr_assign)


State 943

  350 expr_assign: expr "%=" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 350 (expr_assign)


State 944

  340 expr_assign: expr "&=" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 340 (expr_assign)


State 945

  341 expr_assign: expr "|=" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 341 (expr_assign)


State 946

  342 expr_assign: expr "^=" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 342 (expr_assign)


State 947

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  395     | expr "<<" expr .
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 721
    "as"  shift, and go to state 722
    "++"  shift, and go to state 733
    "--"  shift, and go to state 734
    "->"  shift, and go to state 741
    "??"  shift, and go to state 743
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    "<|"  shift, and go to state 746
    "|>"  shift, and go to state 747
    '-'   shift, and go to state 767
    '+'   shift, and go to state 768
    '*'   shift, and go to state 769
    '/'   shift, and go to state 770
    '%'   shift, and go to state 771
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 395 (expr)


State 948

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  396     | expr ">>" expr .
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 721
    "as"  shift, and go to state 722
    "++"  shift, and go to state 733
    "--"  shift, and go to state 734
    "->"  shift, and go to state 741
    "??"  shift, and go to state 743
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    "<|"  shift, and go to state 746
    "|>"  shift, and go to state 747
    '-'   shift, and go to state 767
    '+'   shift, and go to state 768
    '*'   shift, and go to state 769
    '/'   shift, and go to state 770
    '%'   shift, and go to state 771
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 396 (expr)


State 949

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  408     | expr "<=" expr .
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 408 (expr)


State 950

  351 expr_assign: expr "<<=" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 351 (expr_assign)


State 951

  352 expr_assign: expr ">>=" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 352 (expr_assign)


State 952

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  409     | expr ">=" expr .
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 409 (expr)


State 953

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  406     | expr "==" expr .
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 406 (expr)


State 954

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  407     | expr "!=" expr .
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 407 (expr)


State 955

  363 expr_method_call: expr "->" "name" . '(' ')'
  364                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1148


State 956

  360 expr_assign_pipe: expr "<-" "$ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 667
    '{'  shift, and go to state 284

    expression_block  go to state 668
    block_or_lambda   go to state 669
    expr_block        go to state 1149


State 957

  358 expr_assign_pipe: expr "<-" "@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 667
    '{'  shift, and go to state 284

    expression_block  go to state 668
    block_or_lambda   go to state 669
    expr_block        go to state 1150


State 958

  359 expr_assign_pipe: expr "<-" "@@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 667
    '{'  shift, and go to state 284

    expression_block  go to state 668
    block_or_lambda   go to state 669
    expr_block        go to state 1151


State 959

  338 expr_assign: expr "<-" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 338 (expr_assign)


State 960

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  439     | expr "??" expr .
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 721
    "as"  shift, and go to state 722
    "++"  shift, and go to state 733
    "--"  shift, and go to state 734
    "->"  shift, and go to state 741
    "??"  shift, and go to state 743
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    "<|"  shift, and go to state 746
    "|>"  shift, and go to state 747
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 439 (expr)


State 961

  478 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1152


State 962

  426 expr: expr "?." "name" .

    $default  reduce using rule 426 (expr)


State 963

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  424     | expr "?[" expr . ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ']'    shift, and go to state 1153


State 964

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  463     | expr "<|" expr .
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 741
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 463 (expr)


State 965

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  464     | expr "|>" expr .
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 741
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 464 (expr)


State 966

  432 expr: basic_type_declaration . '(' ')'
  433     | basic_type_declaration . '(' expr_list ')'
  465     | expr "|>" basic_type_declaration .

    '('  shift, and go to state 774

    $default  reduce using rule 465 (expr)


State 967

  339 expr_assign: expr ":=" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 339 (expr_assign)


State 968

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  397     | expr "<<<" expr .
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 721
    "as"  shift, and go to state 722
    "++"  shift, and go to state 733
    "--"  shift, and go to state 734
    "->"  shift, and go to state 741
    "??"  shift, and go to state 743
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    "<|"  shift, and go to state 746
    "|>"  shift, and go to state 747
    '-'   shift, and go to state 767
    '+'   shift, and go to state 768
    '*'   shift, and go to state 769
    '/'   shift, and go to state 770
    '%'   shift, and go to state 771
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 397 (expr)


State 969

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  398     | expr ">>>" expr .
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 721
    "as"  shift, and go to state 722
    "++"  shift, and go to state 733
    "--"  shift, and go to state 734
    "->"  shift, and go to state 741
    "??"  shift, and go to state 743
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    "<|"  shift, and go to state 746
    "|>"  shift, and go to state 747
    '-'   shift, and go to state 767
    '+'   shift, and go to state 768
    '*'   shift, and go to state 769
    '/'   shift, and go to state 770
    '%'   shift, and go to state 771
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 398 (expr)


State 970

  353 expr_assign: expr "<<<=" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 353 (expr_assign)


State 971

  354 expr_assign: expr ">>>=" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 354 (expr_assign)


State 972

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  413     | expr "&&" expr .
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 413 (expr)


State 973

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  414     | expr "||" expr .
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "^^"   shift, and go to state 755
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 414 (expr)


State 974

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  415     | expr "^^" expr .
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 415 (expr)


State 975

  343 expr_assign: expr "&&=" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 343 (expr_assign)


State 976

  344 expr_assign: expr "||=" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 344 (expr_assign)


State 977

  345 expr_assign: expr "^^=" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 345 (expr_assign)


State 978

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  416     | expr ".." expr .
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    ".."  error (nonassociative)

    $default  reduce using rule 416 (expr)


State 979

  357 expr_assign_pipe: expr '=' "$ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 667
    '{'  shift, and go to state 284

    expression_block  go to state 668
    block_or_lambda   go to state 669
    expr_block        go to state 1154


State 980

  355 expr_assign_pipe: expr '=' "@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 667
    '{'  shift, and go to state 284

    expression_block  go to state 668
    block_or_lambda   go to state 669
    expr_block        go to state 1155


State 981

  356 expr_assign_pipe: expr '=' "@@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 667
    '{'  shift, and go to state 284

    expression_block  go to state 668
    block_or_lambda   go to state 669
    expr_block        go to state 1156


State 982

  337 expr_assign: expr '=' expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 337 (expr_assign)


State 983

  451 expr: expr '?' "as" . "name"
  454     | expr '?' "as" . "type" '<' $@31 type_declaration '>' $@32
  455     | expr '?' "as" . basic_type_declaration
  482 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1157
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 458
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 1158
    "name"      shift, and go to state 1159

    basic_type_declaration  go to state 1160


State 984

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  440     | expr '?' expr . ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    ':'    shift, and go to state 1161
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773


State 985

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  411     | expr '|' expr .
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 411 (expr)


State 986

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  412     | expr '^' expr .
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 412 (expr)


State 987

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  410     | expr '&' expr .
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 410 (expr)


State 988

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  404     | expr '<' expr .
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 404 (expr)


State 989

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  405     | expr '>' expr .
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 405 (expr)


State 990

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  400     | expr '-' expr .
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 721
    "as"  shift, and go to state 722
    "++"  shift, and go to state 733
    "--"  shift, and go to state 734
    "->"  shift, and go to state 741
    "??"  shift, and go to state 743
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    "<|"  shift, and go to state 746
    "|>"  shift, and go to state 747
    '*'   shift, and go to state 769
    '/'   shift, and go to state 770
    '%'   shift, and go to state 771
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 400 (expr)


State 991

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  399     | expr '+' expr .
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 721
    "as"  shift, and go to state 722
    "++"  shift, and go to state 733
    "--"  shift, and go to state 734
    "->"  shift, and go to state 741
    "??"  shift, and go to state 743
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    "<|"  shift, and go to state 746
    "|>"  shift, and go to state 747
    '*'   shift, and go to state 769
    '/'   shift, and go to state 770
    '%'   shift, and go to state 771
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 399 (expr)


State 992

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  401     | expr '*' expr .
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 721
    "as"  shift, and go to state 722
    "++"  shift, and go to state 733
    "--"  shift, and go to state 734
    "->"  shift, and go to state 741
    "??"  shift, and go to state 743
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    "<|"  shift, and go to state 746
    "|>"  shift, and go to state 747
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 401 (expr)


State 993

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  402     | expr '/' expr .
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 721
    "as"  shift, and go to state 722
    "++"  shift, and go to state 733
    "--"  shift, and go to state 734
    "->"  shift, and go to state 741
    "??"  shift, and go to state 743
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    "<|"  shift, and go to state 746
    "|>"  shift, and go to state 747
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 402 (expr)


State 994

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  403     | expr '%' expr .
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 721
    "as"  shift, and go to state 722
    "++"  shift, and go to state 733
    "--"  shift, and go to state 734
    "->"  shift, and go to state 741
    "??"  shift, and go to state 743
    "?."  shift, and go to state 744
    "?["  shift, and go to state 745
    "<|"  shift, and go to state 746
    "|>"  shift, and go to state 747
    '.'   shift, and go to state 772
    '['   shift, and go to state 773

    $default  reduce using rule 403 (expr)


State 995

  427 expr: expr '.' "?." . "name"
  480 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1162
    "name"  shift, and go to state 1163


State 996

  425 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1164
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 997

  477 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1165


State 998

  374 expr_field: expr '.' "name" .
  376           | expr '.' "name" . '(' ')'
  377           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1166

    '('       [reduce using rule 374 (expr_field)]
    $default  reduce using rule 374 (expr_field)


State 999

  375 expr_field: expr '.' '.' . "name"
  479 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1167
    "name"  shift, and go to state 1168


State 1000

  423 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1169
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1001

  380 expr_field: expr '.' $@25 . error $@26

    error  shift, and go to state 1170


State 1002

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  422     | expr '[' expr . ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ']'    shift, and go to state 1171


State 1003

  432 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 432 (expr)


State 1004

  311 expr_list: expr_list . ',' expr
  433 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 843
    ')'  shift, and go to state 1172


State 1005

  581 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 . '}'

    '}'  shift, and go to state 1173


State 1006

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  561 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ';'    shift, and go to state 1174


State 1007

  116 annotation_list: annotation_list . ',' annotation_declaration
  118 optional_annotation_list: '[' annotation_list . ']'
  505 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 107
    ']'  shift, and go to state 1175


State 1008

  502 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  504                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "public"   shift, and go to state 1176
    "private"  shift, and go to state 1177

    $default  reduce using rule 492 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1178


State 1009

  497 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1179

    $default  reduce using rule 495 (optional_static_member_variable)

    optional_static_member_variable  go to state 1180


State 1010

  500 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration . ';'

    ';'  shift, and go to state 1181


State 1011

  541 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 541 (let_variable_name_with_pos_list)


State 1012

  544 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 544 (let_variable_declaration)


State 1013

  336 expr_assign: expr .
  337            | expr . '=' expr
  338            | expr . "<-" expr
  339            | expr . ":=" expr
  340            | expr . "&=" expr
  341            | expr . "|=" expr
  342            | expr . "^=" expr
  343            | expr . "&&=" expr
  344            | expr . "||=" expr
  345            | expr . "^^=" expr
  346            | expr . "+=" expr
  347            | expr . "-=" expr
  348            | expr . "*=" expr
  349            | expr . "/=" expr
  350            | expr . "%=" expr
  351            | expr . "<<=" expr
  352            | expr . ">>=" expr
  353            | expr . "<<<=" expr
  354            | expr . ">>>=" expr
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  543 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 721
    "as"    shift, and go to state 722
    "+="    shift, and go to state 723
    "-="    shift, and go to state 724
    "/="    shift, and go to state 725
    "*="    shift, and go to state 726
    "%="    shift, and go to state 727
    "&="    shift, and go to state 728
    "|="    shift, and go to state 729
    "^="    shift, and go to state 730
    "<<"    shift, and go to state 731
    ">>"    shift, and go to state 732
    "++"    shift, and go to state 733
    "--"    shift, and go to state 734
    "<="    shift, and go to state 735
    "<<="   shift, and go to state 736
    ">>="   shift, and go to state 737
    ">="    shift, and go to state 738
    "=="    shift, and go to state 739
    "!="    shift, and go to state 740
    "->"    shift, and go to state 741
    "<-"    shift, and go to state 844
    "??"    shift, and go to state 743
    "?."    shift, and go to state 744
    "?["    shift, and go to state 745
    "<|"    shift, and go to state 746
    "|>"    shift, and go to state 747
    ":="    shift, and go to state 748
    "<<<"   shift, and go to state 749
    ">>>"   shift, and go to state 750
    "<<<="  shift, and go to state 751
    ">>>="  shift, and go to state 752
    "&&"    shift, and go to state 753
    "||"    shift, and go to state 754
    "^^"    shift, and go to state 755
    "&&="   shift, and go to state 756
    "||="   shift, and go to state 757
    "^^="   shift, and go to state 758
    ".."    shift, and go to state 759
    '='     shift, and go to state 845
    '?'     shift, and go to state 761
    '|'     shift, and go to state 762
    '^'     shift, and go to state 763
    '&'     shift, and go to state 764
    '<'     shift, and go to state 765
    '>'     shift, and go to state 766
    '-'     shift, and go to state 767
    '+'     shift, and go to state 768
    '*'     shift, and go to state 769
    '/'     shift, and go to state 770
    '%'     shift, and go to state 771
    '.'     shift, and go to state 772
    '['     shift, and go to state 773
    ';'     shift, and go to state 1182

    $default  reduce using rule 336 (expr_assign)


State 1014

  545 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 545 (let_variable_declaration)


State 1015

  659 type_declaration_no_options: "type" '<' $@48 type_declaration '>' . $@49

    $default  reduce using rule 658 ($@49)

    $@49  go to state 1183


State 1016

  682 type_declaration_no_options: "array" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 681 ($@54)

    $@54  go to state 1184


State 1017

  685 type_declaration_no_options: "table" '<' $@55 table_type_pair '>' . $@56

    $default  reduce using rule 684 ($@56)

    $@56  go to state 1185


State 1018

  648 table_type_pair: type_declaration ';' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1186


State 1019

  688 type_declaration_no_options: "iterator" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 687 ($@58)

    $@58  go to state 1187


State 1020

  678 type_declaration_no_options: "smart_ptr" '<' $@51 type_declaration '>' . $@52

    $default  reduce using rule 677 ($@52)

    $@52  go to state 1188


State 1021

  646 bitfield_type_declaration: "bitfield" '<' $@46 bitfield_bits '>' . $@47

    $default  reduce using rule 645 ($@47)

    $@47  go to state 1189


State 1022

  640 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1190


State 1023

  692 type_declaration_no_options: "block" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 691 ($@60)

    $@60  go to state 1191


State 1024

  695 type_declaration_no_options: "block" '<' $@61 optional_function_argument_list optional_function_type . '>' $@62

    '>'  shift, and go to state 1192


State 1025

  699 type_declaration_no_options: "function" '<' $@63 type_declaration '>' . $@64

    $default  reduce using rule 698 ($@64)

    $@64  go to state 1193


State 1026

  702 type_declaration_no_options: "function" '<' $@65 optional_function_argument_list optional_function_type . '>' $@66

    '>'  shift, and go to state 1194


State 1027

  706 type_declaration_no_options: "lambda" '<' $@67 type_declaration '>' . $@68

    $default  reduce using rule 705 ($@68)

    $@68  go to state 1195


State 1028

  709 type_declaration_no_options: "lambda" '<' $@69 optional_function_argument_list optional_function_type . '>' $@70

    '>'  shift, and go to state 1196


State 1029

  712 type_declaration_no_options: "tuple" '<' $@71 tuple_type_list '>' . $@72

    $default  reduce using rule 711 ($@72)

    $@72  go to state 1197


State 1030

  514 tuple_type_list: tuple_type_list ';' . tuple_type

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 600
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 1198
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 603


State 1031

  715 type_declaration_no_options: "variant" '<' $@73 variant_type_list '>' . $@74

    $default  reduce using rule 714 ($@74)

    $@74  go to state 1199


State 1032

  520 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 605

    variant_type  go to state 1200


State 1033

  246 type_declaration_no_options_list: type_declaration_no_options_list . ';' type_declaration
  663 type_declaration_no_options: '$' name_in_namespace '<' $@50 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    '>'  shift, and go to state 1201
    ';'  shift, and go to state 1202


State 1034

  245 type_declaration_no_options_list: type_declaration .
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 245 (type_declaration_no_options_list)


State 1035

  661 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 661 (type_declaration_no_options)


State 1036

  650 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 650 (dim_list)


State 1037

  512 tuple_type: "name" ':' type_declaration .
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 512 (tuple_type)


State 1038

  518 variant_type: "name" ':' type_declaration .
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 518 (variant_type)


State 1039

  598 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 598 (variable_name_with_pos_list)


State 1040

  601 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1203


State 1041

  529 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1204
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1042

  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"
  771 make_struct_decl: "struct" '<' $@87 type_declaration_no_options . '>' $@88 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1205
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1043

  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"
  774 make_struct_decl: "class" '<' $@89 type_declaration_no_options . '>' $@90 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1206
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1044

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 1207
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1045

  264 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1208


State 1046

  267 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 267 (expr_new)


State 1047

  268 expr_new: "new" new_type_declaration '(' expr_list . ')'
  311 expr_list: expr_list . ',' expr

    ','  shift, and go to state 843
    ')'  shift, and go to state 1209


State 1048

  269 expr_new: "new" new_type_declaration '(' make_struct_dim . ')'
  748 make_struct_dim: make_struct_dim . ';' make_struct_fields

    ')'  shift, and go to state 1210
    ';'  shift, and go to state 1090


State 1049

  308 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  309               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 1211


State 1050

  307 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1212


State 1051

  306 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1213


State 1052

  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"
  798 make_dim_decl: "array" '<' $@97 type_declaration_no_options . '>' $@98 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1214
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1053

  795 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1215


State 1054

  311 expr_list: expr_list ',' expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 311 (expr_list)


State 1055

  284 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 284 (expression_try_catch)


State 1056

  810 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1216


State 1057

  811 make_table_decl: "table" '<' type_declaration_no_options ';' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1217


State 1058

  809 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1218


State 1059

  435 expr: "deref" '(' expr ')' .

    $default  reduce using rule 435 (expr)


State 1060

   81 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1219
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1061

  297 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1220
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1062

  300 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1221
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1063

  436 expr: "addr" '(' expr ')' .

    $default  reduce using rule 436 (expr)


State 1064

  303 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1222
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1065

  467 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 467 (expr)


State 1066

  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"
  802 make_dim_decl: "fixed_array" '<' $@99 type_declaration_no_options . '>' $@100 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1223
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1067

  799 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1224


State 1068

  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"
  780 make_struct_decl: "default" '<' $@93 type_declaration_no_options . '>' $@94

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1225
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1069

  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"
  789 make_tuple_call: "tuple" '<' $@95 type_declaration_no_options . '>' $@96 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1226
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1070

  786 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1227


State 1071

  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"
  777 make_struct_decl: "variant" '<' $@91 type_declaration_no_options . '>' $@92 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1228
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1072

  437 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  438     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 928

    $default  reduce using rule 324 (optional_capture_list)

    optional_capture_list  go to state 1229


State 1073

  327 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1230


State 1074

  469 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 469 (expr_mtag)


State 1075

  470 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 470 (expr_mtag)


State 1076

  471 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 471 (expr_mtag)


State 1077

  472 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 472 (expr_mtag)


State 1078

  473 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 473 (expr_mtag)


State 1079

  475 expr_mtag: "$c" '(' expr ')' . '(' ')'
  476          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1231


State 1080

  817 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 1232
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1081

  750 optional_block: "where" expr_block .

    $default  reduce using rule 750 (optional_block)


State 1082

  743 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  744                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1233
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1083

  740 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1234
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1084

  739 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1235
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1085

  664 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  792 make_dim_decl: '[' . expr_list optional_comma ']'
  816 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 696
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    ']'                               shift, and go to state 813
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 697
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1086

  310 expr_list: expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  649 dim_list: '[' expr . ']'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ']'    shift, and go to state 814

    ']'       [reduce using rule 310 (expr_list)]
    $default  reduce using rule 310 (expr_list)


State 1087

  765 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  766                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 878
    "$f"     shift, and go to state 879
    "name"   shift, and go to state 1236

    $default  reduce using rule 749 (optional_block)

    make_struct_fields  go to state 885
    make_struct_dim     go to state 1237
    optional_block      go to state 1238


State 1088

  782 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1239
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1089

  741 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  742                   | make_struct_fields ',' . "name" ":=" expr
  745                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  746                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1240
    "name"  shift, and go to state 1241


State 1090

  748 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "$f"    shift, and go to state 879
    "name"  shift, and go to state 1236

    make_struct_fields  go to state 1242


State 1091

  763 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1092
    ",]]"  shift, and go to state 1093
    ']'    shift, and go to state 1094

    optional_trailing_delim_sqr_sqr  go to state 1243


State 1092

  758 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 758 (optional_trailing_delim_sqr_sqr)


State 1093

  759 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 759 (optional_trailing_delim_sqr_sqr)


State 1094

  757 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1244


State 1095

  764 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 764 (make_struct_decl)


State 1096

  783 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1245
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1097

  756 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 756 (optional_trailing_semicolon_sqr_sqr)


State 1098

  755 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1246


State 1099

  791 make_dim: make_dim ';' . make_tuple

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 884
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple              go to state 1247
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1100

  793 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 793 (make_dim_decl)


State 1101

  818 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 1248
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1102

  768 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 879
    "name"  shift, and go to state 1236

    make_struct_fields  go to state 885
    make_struct_dim     go to state 1249


State 1103

  767 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1250
    ",}]"  shift, and go to state 1251
    '}'    shift, and go to state 1252

    optional_trailing_delim_cur_sqr  go to state 1253


State 1104

  754 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 754 (optional_trailing_semicolon_cur_sqr)


State 1105

  753 optional_trailing_semicolon_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1254


State 1106

  794 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 794 (make_dim_decl)


State 1107

  820 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 1255
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1108

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  784 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 784 (make_map_tuple)


State 1109

  804 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 804 (make_table)


State 1110

  751 optional_trailing_semicolon_cur_cur: '}' '}' .

    $default  reduce using rule 751 (optional_trailing_semicolon_cur_cur)


State 1111

  246 type_declaration_no_options_list: type_declaration_no_options_list . ';' type_declaration
  249 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list . '>' $@8 expr

    '>'  shift, and go to state 1256
    ';'  shift, and go to state 1202


State 1112

  246 type_declaration_no_options_list: type_declaration_no_options_list . ';' type_declaration
  252 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list . '>' $@10 '(' expr_list ')'

    '>'  shift, and go to state 1257
    ';'  shift, and go to state 1202


State 1113

   30 string_builder_body: string_builder_body "{" expr . "}"
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    "}"    shift, and go to state 1258
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773


State 1114

  816 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 1259
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1115

  792 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 792 (make_dim_decl)


State 1116

  421 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 421 (expr)


State 1117

  366 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1260
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1118

  484 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1261
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1119

  370 func_addr_expr: '@' '@' '<' $@21 . type_declaration_no_options '>' $@22 func_addr_name

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1262


State 1120

  373 func_addr_expr: '@' '@' '<' $@23 . optional_function_argument_list optional_function_type '>' $@24 func_addr_name

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1263


State 1121

  819 array_comprehension: '{' "for" variable_name_with_pos_list "in" . expr_list ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 1264
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1122

  806 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 806 (expr_map_tuple_list)


State 1123

  807 make_table_decl: '{' expr_map_tuple_list optional_comma '}' .

    $default  reduce using rule 807 (make_table_decl)


State 1124

  217 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  240 expressions: expressions . expression_any
  241            | expressions . error

    error                             shift, and go to state 425
    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 428
    "if"                              shift, and go to state 429
    "static_if"                       shift, and go to state 430
    "for"                             shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 438
    "null"                            shift, and go to state 439
    "break"                           shift, and go to state 440
    "try"                             shift, and go to state 441
    "table"                           shift, and go to state 442
    "delete"                          shift, and go to state 443
    "deref"                           shift, and go to state 444
    "with"                            shift, and go to state 445
    "assume"                          shift, and go to state 446
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 449
    "continue"                        shift, and go to state 450
    "pass"                            shift, and go to state 451
    "reinterpret"                     shift, and go to state 452
    "label"                           shift, and go to state 453
    "goto"                            shift, and go to state 454
    "unsafe"                          shift, and go to state 455
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "yield"                           shift, and go to state 462
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 485
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    ';'                               shift, and go to state 497
    '{'                               shift, and go to state 498
    '}'                               shift, and go to state 1265

    string_builder             go to state 500
    expr_reader                go to state 501
    expression_label           go to state 502
    expression_goto            go to state 503
    if_or_static_if            go to state 504
    expression_if_one_liner    go to state 505
    expression_if_then_else    go to state 506
    expression_for_loop        go to state 507
    expression_unsafe          go to state 508
    expression_while_loop      go to state 509
    expression_with            go to state 510
    expression_with_alias      go to state 511
    expression_any             go to state 512
    expr_keyword               go to state 513
    expression_keyword         go to state 514
    expr_pipe                  go to state 515
    name_in_namespace          go to state 516
    expression_delete          go to state 517
    expr_new                   go to state 518
    expression_break           go to state 519
    expression_continue        go to state 520
    expression_return_no_pipe  go to state 521
    expression_return          go to state 522
    expression_yield_no_pipe   go to state 523
    expression_yield           go to state 524
    expression_try_catch       go to state 525
    kwd_let                    go to state 526
    expression_let             go to state 527
    expr_cast                  go to state 528
    expr_type_decl             go to state 529
    expr_type_info             go to state 530
    block_or_lambda            go to state 531
    expr_full_block            go to state 532
    expr_numeric_const         go to state 533
    expr_assign                go to state 534
    expr_assign_pipe           go to state 535
    expr_named_call            go to state 536
    expr_method_call           go to state 537
    func_addr_expr             go to state 538
    expr_field                 go to state 539
    expr                       go to state 540
    expr_mtag                  go to state 541
    basic_type_declaration     go to state 542
    make_decl                  go to state 543
    make_struct_decl           go to state 544
    make_tuple_call            go to state 545
    make_dim_decl              go to state 546
    make_table_decl            go to state 547
    array_comprehension        go to state 548


State 1125

   60 expression_else: "else" . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1266


State 1126

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1127

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1128

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1267
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1129

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1130

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner ';'
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1268
    "is"    shift, and go to state 721
    "as"    shift, and go to state 722
    "<<"    shift, and go to state 731
    ">>"    shift, and go to state 732
    "++"    shift, and go to state 733
    "--"    shift, and go to state 734
    "<="    shift, and go to state 735
    ">="    shift, and go to state 738
    "=="    shift, and go to state 739
    "!="    shift, and go to state 740
    "->"    shift, and go to state 741
    "??"    shift, and go to state 743
    "?."    shift, and go to state 744
    "?["    shift, and go to state 745
    "<|"    shift, and go to state 746
    "|>"    shift, and go to state 747
    "<<<"   shift, and go to state 749
    ">>>"   shift, and go to state 750
    "&&"    shift, and go to state 753
    "||"    shift, and go to state 754
    "^^"    shift, and go to state 755
    ".."    shift, and go to state 759
    '?'     shift, and go to state 761
    '|'     shift, and go to state 762
    '^'     shift, and go to state 763
    '&'     shift, and go to state 764
    '<'     shift, and go to state 765
    '>'     shift, and go to state 766
    '-'     shift, and go to state 767
    '+'     shift, and go to state 768
    '*'     shift, and go to state 769
    '/'     shift, and go to state 770
    '%'     shift, and go to state 771
    '.'     shift, and go to state 772
    '['     shift, and go to state 773

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1269


State 1131

  361 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  741 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  742                   | make_struct_fields . ',' "name" ":=" expr
  745                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  746                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1089
    ']'  shift, and go to state 1270


State 1132

  311 expr_list: expr_list ',' . expr
  362 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 1271
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1054
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1133

  431 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 431 (expr)


State 1134

  430 expr: name_in_namespace '(' make_struct_dim ')' .

    $default  reduce using rule 430 (expr)


State 1135

  289 tuple_expansion: "name" .

    $default  reduce using rule 289 (tuple_expansion)


State 1136

  290 tuple_expansion: tuple_expansion . ',' "name"
  291 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  292                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 1272
    ']'  shift, and go to state 1273


State 1137

  320 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1274


State 1138

  321 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1275


State 1139

  319 capture_entry: '=' . "name"

    "name"  shift, and go to state 1276


State 1140

  318 capture_entry: '&' . "name"

    "name"  shift, and go to state 1277


State 1141

  322 capture_list: capture_entry .

    $default  reduce using rule 322 (capture_list)


State 1142

  323 capture_list: capture_list . ',' capture_entry
  325 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1278
    ']'  shift, and go to state 1279


State 1143

  328 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1280


State 1144

  443 expr: expr "is" "type" '<' . $@27 type_declaration_no_options '>' $@28

    $default  reduce using rule 441 ($@27)

    $@27  go to state 1281


State 1145

  483 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1282
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1146

  449 expr: expr "as" "type" '<' . $@29 type_declaration '>' $@30

    $default  reduce using rule 447 ($@29)

    $@29  go to state 1283


State 1147

  481 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1284
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1148

  363 expr_method_call: expr "->" "name" '(' . ')'
  364                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1285
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 1286
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1149

  360 expr_assign_pipe: expr "<-" "$ <|" expr_block .

    $default  reduce using rule 360 (expr_assign_pipe)


State 1150

  358 expr_assign_pipe: expr "<-" "@ <|" expr_block .

    $default  reduce using rule 358 (expr_assign_pipe)


State 1151

  359 expr_assign_pipe: expr "<-" "@@ <|" expr_block .

    $default  reduce using rule 359 (expr_assign_pipe)


State 1152

  478 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1287
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1153

  424 expr: expr "?[" expr ']' .

    $default  reduce using rule 424 (expr)


State 1154

  357 expr_assign_pipe: expr '=' "$ <|" expr_block .

    $default  reduce using rule 357 (expr_assign_pipe)


State 1155

  355 expr_assign_pipe: expr '=' "@ <|" expr_block .

    $default  reduce using rule 355 (expr_assign_pipe)


State 1156

  356 expr_assign_pipe: expr '=' "@@ <|" expr_block .

    $default  reduce using rule 356 (expr_assign_pipe)


State 1157

  454 expr: expr '?' "as" "type" . '<' $@31 type_declaration '>' $@32

    '<'  shift, and go to state 1288


State 1158

  482 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1289


State 1159

  451 expr: expr '?' "as" "name" .

    $default  reduce using rule 451 (expr)


State 1160

  455 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 455 (expr)


State 1161

  440 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1290
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1162

  480 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1291


State 1163

  427 expr: expr '.' "?." "name" .

    $default  reduce using rule 427 (expr)


State 1164

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  425     | expr '.' "?[" expr . ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ']'    shift, and go to state 1292


State 1165

  477 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1293
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1166

  376 expr_field: expr '.' "name" '(' . ')'
  377           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1294
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 1295
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1167

  479 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1296


State 1168

  375 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 375 (expr_field)


State 1169

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  423     | expr '.' '[' expr . ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ']'    shift, and go to state 1297


State 1170

  380 expr_field: expr '.' $@25 error . $@26

    $default  reduce using rule 379 ($@26)

    $@26  go to state 1298


State 1171

  422 expr: expr '[' expr ']' .

    $default  reduce using rule 422 (expr)


State 1172

  433 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 433 (expr)


State 1173

  581 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}' .

    $default  reduce using rule 581 (enum_declaration)


State 1174

  561 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 561 (enum_list)


State 1175

  118 optional_annotation_list: '[' annotation_list ']' .
  505 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1299

    $default  reduce using rule 118 (optional_annotation_list)


State 1176

  493 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 493 (optional_public_or_private_member_variable)


State 1177

  494 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 494 (optional_public_or_private_member_variable)


State 1178

  502 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@34 function_declaration_header ';'
  504                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "abstract"  shift, and go to state 1300
    "static"    shift, and go to state 1179

    $default  reduce using rule 495 (optional_static_member_variable)

    optional_static_member_variable  go to state 1301


State 1179

  496 optional_static_member_variable: "static" .

    $default  reduce using rule 496 (optional_static_member_variable)


State 1180

  497 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1302
    "sealed"    shift, and go to state 1303

    $default  reduce using rule 487 (optional_override)

    optional_override  go to state 1304


State 1181

  500 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration ';' .

    $default  reduce using rule 500 (struct_variable_declaration_list)


State 1182

  543 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 543 (let_variable_declaration)


State 1183

  659 type_declaration_no_options: "type" '<' $@48 type_declaration '>' $@49 .

    $default  reduce using rule 659 (type_declaration_no_options)


State 1184

  682 type_declaration_no_options: "array" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 682 (type_declaration_no_options)


State 1185

  685 type_declaration_no_options: "table" '<' $@55 table_type_pair '>' $@56 .

    $default  reduce using rule 685 (type_declaration_no_options)


State 1186

  648 table_type_pair: type_declaration ';' type_declaration .
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 648 (table_type_pair)


State 1187

  688 type_declaration_no_options: "iterator" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 688 (type_declaration_no_options)


State 1188

  678 type_declaration_no_options: "smart_ptr" '<' $@51 type_declaration '>' $@52 .

    $default  reduce using rule 678 (type_declaration_no_options)


State 1189

  646 bitfield_type_declaration: "bitfield" '<' $@46 bitfield_bits '>' $@47 .

    $default  reduce using rule 646 (bitfield_type_declaration)


State 1190

  640 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 640 (bitfield_bits)


State 1191

  692 type_declaration_no_options: "block" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 692 (type_declaration_no_options)


State 1192

  695 type_declaration_no_options: "block" '<' $@61 optional_function_argument_list optional_function_type '>' . $@62

    $default  reduce using rule 694 ($@62)

    $@62  go to state 1305


State 1193

  699 type_declaration_no_options: "function" '<' $@63 type_declaration '>' $@64 .

    $default  reduce using rule 699 (type_declaration_no_options)


State 1194

  702 type_declaration_no_options: "function" '<' $@65 optional_function_argument_list optional_function_type '>' . $@66

    $default  reduce using rule 701 ($@66)

    $@66  go to state 1306


State 1195

  706 type_declaration_no_options: "lambda" '<' $@67 type_declaration '>' $@68 .

    $default  reduce using rule 706 (type_declaration_no_options)


State 1196

  709 type_declaration_no_options: "lambda" '<' $@69 optional_function_argument_list optional_function_type '>' . $@70

    $default  reduce using rule 708 ($@70)

    $@70  go to state 1307


State 1197

  712 type_declaration_no_options: "tuple" '<' $@71 tuple_type_list '>' $@72 .

    $default  reduce using rule 712 (type_declaration_no_options)


State 1198

  514 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 514 (tuple_type_list)


State 1199

  715 type_declaration_no_options: "variant" '<' $@73 variant_type_list '>' $@74 .

    $default  reduce using rule 715 (type_declaration_no_options)


State 1200

  520 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 520 (variant_type_list)


State 1201

  663 type_declaration_no_options: '$' name_in_namespace '<' $@50 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1308


State 1202

  246 type_declaration_no_options_list: type_declaration_no_options_list ';' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1309


State 1203

  601 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 601 (variable_name_with_pos_list)


State 1204

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  529 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 529 (variable_declaration)


State 1205

  771 make_struct_decl: "struct" '<' $@87 type_declaration_no_options '>' . $@88 '(' make_struct_dim ')'

    $default  reduce using rule 770 ($@88)

    $@88  go to state 1310


State 1206

  774 make_struct_decl: "class" '<' $@89 type_declaration_no_options '>' . $@90 '(' make_struct_dim ')'

    $default  reduce using rule 773 ($@90)

    $@90  go to state 1311


State 1207

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  311 expr_list: expr_list . ',' expr

    ','  shift, and go to state 843
    '{'  shift, and go to state 284

    expression_block  go to state 1312


State 1208

  264 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 263 ($@12)

    $@12  go to state 1313


State 1209

  268 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 268 (expr_new)


State 1210

  269 expr_new: "new" new_type_declaration '(' make_struct_dim ')' .

    $default  reduce using rule 269 (expr_new)


State 1211

  308 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  309               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1314
    ';'  shift, and go to state 1315


State 1212

  307 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 307 (expr_type_info)


State 1213

  306 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 305 ($@20)

    $@20  go to state 1316


State 1214

  798 make_dim_decl: "array" '<' $@97 type_declaration_no_options '>' . $@98 '(' expr_list optional_comma ')'

    $default  reduce using rule 797 ($@98)

    $@98  go to state 1317


State 1215

  795 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 795 (make_dim_decl)


State 1216

  810 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 684
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 702
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    expr_map_tuple_list     go to state 1318
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1217

  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"
  811 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1319
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1218

  809 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 809 (make_table_decl)


State 1219

   81 expression_with_alias: "assume" "name" '=' $@5 expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 81 (expression_with_alias)


State 1220

  297 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 296 ($@14)

    $@14  go to state 1320


State 1221

  300 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 299 ($@16)

    $@16  go to state 1321


State 1222

  303 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 302 ($@18)

    $@18  go to state 1322


State 1223

  802 make_dim_decl: "fixed_array" '<' $@99 type_declaration_no_options '>' . $@100 '(' expr_list optional_comma ')'

    $default  reduce using rule 801 ($@100)

    $@100  go to state 1323


State 1224

  799 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 799 (make_dim_decl)


State 1225

  780 make_struct_decl: "default" '<' $@93 type_declaration_no_options '>' . $@94

    $default  reduce using rule 779 ($@94)

    $@94  go to state 1324


State 1226

  789 make_tuple_call: "tuple" '<' $@95 type_declaration_no_options '>' . $@96 '(' make_struct_dim ')'

    $default  reduce using rule 788 ($@96)

    $@96  go to state 1325


State 1227

  786 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 786 (make_tuple_call)


State 1228

  777 make_struct_decl: "variant" '<' $@91 type_declaration_no_options '>' . $@92 '(' make_struct_dim ')'

    $default  reduce using rule 776 ($@92)

    $@92  go to state 1326


State 1229

  437 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  438     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1327


State 1230

  327 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1328


State 1231

  475 expr_mtag: "$c" '(' expr ')' '(' . ')'
  476          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1329
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 1330
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1232

  311 expr_list: expr_list . ',' expr
  817 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 843
    ';'  shift, and go to state 1331


State 1233

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  743 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  744                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1332


State 1234

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  740 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 740 (make_struct_fields)


State 1235

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  739 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 739 (make_struct_fields)


State 1236

  739 make_struct_fields: "name" . copy_or_move expr
  740                   | "name" . ":=" expr

    "<-"  shift, and go to state 613
    ":="  shift, and go to state 1083
    '='   shift, and go to state 615

    copy_or_move  go to state 1084


State 1237

  748 make_struct_dim: make_struct_dim . ';' make_struct_fields
  766 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 878
    ';'      shift, and go to state 1090

    $default  reduce using rule 749 (optional_block)

    optional_block  go to state 1333


State 1238

  765 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1092
    ",]]"  shift, and go to state 1093
    ']'    shift, and go to state 1094

    optional_trailing_delim_sqr_sqr  go to state 1334


State 1239

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  782 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 782 (make_tuple)


State 1240

  745 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  746                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1335


State 1241

  741 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  742                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 613
    ":="  shift, and go to state 1336
    '='   shift, and go to state 615

    copy_or_move  go to state 1337


State 1242

  741 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  742                   | make_struct_fields . ',' "name" ":=" expr
  745                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  746                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  748 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 1089

    $default  reduce using rule 748 (make_struct_dim)


State 1243

  763 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 763 (make_struct_decl)


State 1244

  757 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 757 (optional_trailing_delim_sqr_sqr)


State 1245

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  783 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 783 (make_tuple)


State 1246

  755 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 755 (optional_trailing_semicolon_sqr_sqr)


State 1247

  783 make_tuple: make_tuple . ',' expr
  791 make_dim: make_dim ';' make_tuple .

    ','  shift, and go to state 1096

    $default  reduce using rule 791 (make_dim)


State 1248

  311 expr_list: expr_list . ',' expr
  818 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 843
    ';'  shift, and go to state 1338


State 1249

  748 make_struct_dim: make_struct_dim . ';' make_struct_fields
  768 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 878
    ';'      shift, and go to state 1090

    $default  reduce using rule 749 (optional_block)

    optional_block  go to state 1339


State 1250

  761 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 761 (optional_trailing_delim_cur_sqr)


State 1251

  762 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 762 (optional_trailing_delim_cur_sqr)


State 1252

  760 optional_trailing_delim_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1340


State 1253

  767 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 767 (make_struct_decl)


State 1254

  753 optional_trailing_semicolon_cur_sqr: '}' ']' .

    $default  reduce using rule 753 (optional_trailing_semicolon_cur_sqr)


State 1255

  311 expr_list: expr_list . ',' expr
  820 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . ';' make_map_tuple array_comprehension_where '}' '}'

    ','  shift, and go to state 843
    ';'  shift, and go to state 1341


State 1256

  249 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' . $@8 expr

    $default  reduce using rule 248 ($@8)

    $@8  go to state 1342


State 1257

  252 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' . $@10 '(' expr_list ')'

    $default  reduce using rule 251 ($@10)

    $@10  go to state 1343


State 1258

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1259

  311 expr_list: expr_list . ',' expr
  816 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']'

    ','  shift, and go to state 843
    ';'  shift, and go to state 1344


State 1260

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  366 func_addr_name: "$i" '(' expr . ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1345


State 1261

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  484          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1346


State 1262

  370 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options . '>' $@22 func_addr_name
  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1347
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1263

  373 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list . optional_function_type '>' $@24 func_addr_name

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1348


State 1264

  311 expr_list: expr_list . ',' expr
  819 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list . ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 843
    ';'  shift, and go to state 1349


State 1265

  217 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 217 (expression_block)


State 1266

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1267

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    '{'    shift, and go to state 284

    expression_block  go to state 1350


State 1268

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1351


State 1269

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . ';'

    ';'  shift, and go to state 1352


State 1270

  361 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1353


State 1271

  362 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  792 make_dim_decl: '[' . expr_list optional_comma ']'
  816 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 696
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 879
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 880
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 697
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_fields      go to state 1354
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1272

  290 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1355


State 1273

  291 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  292                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr ';'

    ']'  shift, and go to state 1356


State 1274

  320 capture_entry: "<-" "name" .

    $default  reduce using rule 320 (capture_entry)


State 1275

  321 capture_entry: ":=" "name" .

    $default  reduce using rule 321 (capture_entry)


State 1276

  319 capture_entry: '=' "name" .

    $default  reduce using rule 319 (capture_entry)


State 1277

  318 capture_entry: '&' "name" .

    $default  reduce using rule 318 (capture_entry)


State 1278

  323 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1137
    ":="  shift, and go to state 1138
    '='   shift, and go to state 1139
    '&'   shift, and go to state 1140

    capture_entry  go to state 1357


State 1279

  325 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1358


State 1280

  328 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1359
    '{'   shift, and go to state 284

    expression_block       go to state 1360
    block_or_simple_block  go to state 1361


State 1281

  443 expr: expr "is" "type" '<' $@27 . type_declaration_no_options '>' $@28

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1362


State 1282

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  483          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1363


State 1283

  449 expr: expr "as" "type" '<' $@29 . type_declaration '>' $@30

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1364


State 1284

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  481          | expr "as" "$f" '(' expr . ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1365


State 1285

  363 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 363 (expr_method_call)


State 1286

  311 expr_list: expr_list . ',' expr
  364 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 843
    ')'  shift, and go to state 1366


State 1287

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  478          | expr "?." "$f" '(' expr . ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1367


State 1288

  454 expr: expr '?' "as" "type" '<' . $@31 type_declaration '>' $@32

    $default  reduce using rule 452 ($@31)

    $@31  go to state 1368


State 1289

  482 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1369
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1290

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  440     | expr '?' expr ':' expr .
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 440 (expr)


State 1291

  480 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1370
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1292

  425 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 425 (expr)


State 1293

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr '.' "$f" '(' expr . ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1371


State 1294

  376 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 376 (expr_field)


State 1295

  311 expr_list: expr_list . ',' expr
  377 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 843
    ')'  shift, and go to state 1372


State 1296

  479 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1373
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1297

  423 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 423 (expr)


State 1298

  380 expr_field: expr '.' $@25 error $@26 .

    $default  reduce using rule 380 (expr_field)


State 1299

  505 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 505 (struct_variable_declaration_list)


State 1300

  502 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@34 function_declaration_header ';'

    "const"  shift, and go to state 1374

    $default  reduce using rule 490 (optional_constant)

    optional_constant  go to state 1375


State 1301

  504 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@35 function_declaration_header expression_block

    "override"  shift, and go to state 1302
    "sealed"    shift, and go to state 1303

    $default  reduce using rule 487 (optional_override)

    optional_override  go to state 1376


State 1302

  488 optional_override: "override" .

    $default  reduce using rule 488 (optional_override)


State 1303

  489 optional_override: "sealed" .

    $default  reduce using rule 489 (optional_override)


State 1304

  497 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1176
    "private"  shift, and go to state 1177

    $default  reduce using rule 492 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1377


State 1305

  695 type_declaration_no_options: "block" '<' $@61 optional_function_argument_list optional_function_type '>' $@62 .

    $default  reduce using rule 695 (type_declaration_no_options)


State 1306

  702 type_declaration_no_options: "function" '<' $@65 optional_function_argument_list optional_function_type '>' $@66 .

    $default  reduce using rule 702 (type_declaration_no_options)


State 1307

  709 type_declaration_no_options: "lambda" '<' $@69 optional_function_argument_list optional_function_type '>' $@70 .

    $default  reduce using rule 709 (type_declaration_no_options)


State 1308

  663 type_declaration_no_options: '$' name_in_namespace '<' $@50 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 500
    expr_reader             go to state 501
    optional_expr_list      go to state 1378
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 812
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1309

  246 type_declaration_no_options_list: type_declaration_no_options_list ';' type_declaration .
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 246 (type_declaration_no_options_list)


State 1310

  771 make_struct_decl: "struct" '<' $@87 type_declaration_no_options '>' $@88 . '(' make_struct_dim ')'

    '('  shift, and go to state 1379


State 1311

  774 make_struct_decl: "class" '<' $@89 type_declaration_no_options '>' $@90 . '(' make_struct_dim ')'

    '('  shift, and go to state 1380


State 1312

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 76 (expression_for_loop)


State 1313

  264 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 264 (new_type_declaration)


State 1314

  308 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1381
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1315

  309 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1382


State 1316

  306 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 306 (expr_type_decl)


State 1317

  798 make_dim_decl: "array" '<' $@97 type_declaration_no_options '>' $@98 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1383


State 1318

  806 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  810 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 916

    $default  reduce using rule 814 (optional_comma)

    optional_comma  go to state 1384


State 1319

  811 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1385


State 1320

  297 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1386
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1321

  300 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1387
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1322

  303 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1388
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1323

  802 make_dim_decl: "fixed_array" '<' $@99 type_declaration_no_options '>' $@100 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1389


State 1324

  780 make_struct_decl: "default" '<' $@93 type_declaration_no_options '>' $@94 .

    $default  reduce using rule 780 (make_struct_decl)


State 1325

  789 make_tuple_call: "tuple" '<' $@95 type_declaration_no_options '>' $@96 . '(' make_struct_dim ')'

    '('  shift, and go to state 1390


State 1326

  777 make_struct_decl: "variant" '<' $@91 type_declaration_no_options '>' $@92 . '(' make_struct_dim ')'

    '('  shift, and go to state 1391


State 1327

  437 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  438     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1392
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1393
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1328

  327 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1359
    '{'   shift, and go to state 284

    expression_block       go to state 1360
    block_or_simple_block  go to state 1394


State 1329

  475 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 475 (expr_mtag)


State 1330

  311 expr_list: expr_list . ',' expr
  476 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 843
    ')'  shift, and go to state 1395


State 1331

  817 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1396
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1332

  743 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  744                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 613
    ":="  shift, and go to state 1397
    '='   shift, and go to state 615

    copy_or_move  go to state 1398


State 1333

  766 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1092
    ",]]"  shift, and go to state 1093
    ']'    shift, and go to state 1094

    optional_trailing_delim_sqr_sqr  go to state 1399


State 1334

  765 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 765 (make_struct_decl)


State 1335

  745 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  746                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1400
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1336

  742 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1401
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1337

  741 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1402
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1338

  818 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1403
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1339

  768 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1250
    ",}]"  shift, and go to state 1251
    '}'    shift, and go to state 1252

    optional_trailing_delim_cur_sqr  go to state 1404


State 1340

  760 optional_trailing_delim_cur_sqr: '}' ']' .

    $default  reduce using rule 760 (optional_trailing_delim_cur_sqr)


State 1341

  820 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' . make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 684
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 1405
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1342

  249 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1406
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1343

  252 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 . '(' expr_list ')'

    '('  shift, and go to state 1407


State 1344

  816 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1408
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1345

  366 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 366 (func_addr_name)


State 1346

  484 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 484 (expr_mtag)


State 1347

  370 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' . $@22 func_addr_name

    $default  reduce using rule 369 ($@22)

    $@22  go to state 1409


State 1348

  373 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type . '>' $@24 func_addr_name

    '>'  shift, and go to state 1410


State 1349

  819 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 684
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 1411
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1350

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1125
    "elif"         shift, and go to state 1126
    "static_elif"  shift, and go to state 1127

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1128
    expression_else      go to state 1412


State 1351

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 1413
    "null"                            shift, and go to state 439
    "break"                           shift, and go to state 440
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "continue"                        shift, and go to state 450
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "yield"                           shift, and go to state 1414
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder             go to state 500
    expr_reader                go to state 501
    expression_if_one_liner    go to state 1415
    expression_keyword         go to state 514
    name_in_namespace          go to state 516
    expr_new                   go to state 518
    expression_break           go to state 1416
    expression_continue        go to state 1417
    expression_return_no_pipe  go to state 1418
    expression_yield_no_pipe   go to state 1419
    expr_cast                  go to state 528
    expr_type_decl             go to state 529
    expr_type_info             go to state 530
    block_or_lambda            go to state 531
    expr_full_block            go to state 532
    expr_numeric_const         go to state 533
    expr_named_call            go to state 536
    expr_method_call           go to state 537
    func_addr_expr             go to state 538
    expr_field                 go to state 539
    expr                       go to state 1420
    expr_mtag                  go to state 541
    basic_type_declaration     go to state 542
    make_decl                  go to state 543
    make_struct_decl           go to state 544
    make_tuple_call            go to state 545
    make_dim_decl              go to state 546
    make_table_decl            go to state 547
    array_comprehension        go to state 548


State 1352

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';' .

    $default  reduce using rule 74 (expression_if_then_else)


State 1353

  361 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 361 (expr_named_call)


State 1354

  362 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  741 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  742                   | make_struct_fields . ',' "name" ":=" expr
  745                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  746                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1089
    ']'  shift, and go to state 1421


State 1355

  290 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 290 (tuple_expansion)


State 1356

  291 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  292                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr ';'

    ':'  shift, and go to state 1422
    '&'  shift, and go to state 382

    $default  reduce using rule 535 (optional_ref)

    optional_ref  go to state 1423


State 1357

  323 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 323 (capture_list)


State 1358

  325 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 325 (optional_capture_list)


State 1359

  313 block_or_simple_block: "=>" . expr
  314                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 1424
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1425
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1360

  312 block_or_simple_block: expression_block .

    $default  reduce using rule 312 (block_or_simple_block)


State 1361

  328 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 328 (expr_full_block)


State 1362

  443 expr: expr "is" "type" '<' $@27 type_declaration_no_options . '>' $@28
  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1426
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1363

  483 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 483 (expr_mtag)


State 1364

  449 expr: expr "as" "type" '<' $@29 type_declaration . '>' $@30
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1427


State 1365

  481 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 481 (expr_mtag)


State 1366

  364 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 364 (expr_method_call)


State 1367

  478 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 478 (expr_mtag)


State 1368

  454 expr: expr '?' "as" "type" '<' $@31 . type_declaration '>' $@32

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1428


State 1369

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr '?' "as" "$f" '(' expr . ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1429


State 1370

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr '.' "?." "$f" '(' expr . ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1430


State 1371

  477 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 477 (expr_mtag)


State 1372

  377 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 377 (expr_field)


State 1373

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr '.' '.' "$f" '(' expr . ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1431


State 1374

  491 optional_constant: "const" .

    $default  reduce using rule 491 (optional_constant)


State 1375

  502 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@34 function_declaration_header ';'

    $default  reduce using rule 501 ($@34)

    $@34  go to state 1432


State 1376

  504 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@35 function_declaration_header expression_block

    "const"  shift, and go to state 1374

    $default  reduce using rule 490 (optional_constant)

    optional_constant  go to state 1433


State 1377

  497 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_declaration         go to state 1434
    variable_name_with_pos_list  go to state 421


State 1378

  663 type_declaration_no_options: '$' name_in_namespace '<' $@50 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1435


State 1379

  771 make_struct_decl: "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 879
    "name"  shift, and go to state 1236

    make_struct_fields  go to state 885
    make_struct_dim     go to state 1436


State 1380

  774 make_struct_decl: "class" '<' $@89 type_declaration_no_options '>' $@90 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 879
    "name"  shift, and go to state 1236

    make_struct_fields  go to state 885
    make_struct_dim     go to state 1437


State 1381

  308 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1438


State 1382

  309 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1439


State 1383

  798 make_dim_decl: "array" '<' $@97 type_declaration_no_options '>' $@98 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 1440
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1384

  810 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1441


State 1385

  811 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 684
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_map_tuple          go to state 702
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    expr_map_tuple_list     go to state 1442
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1386

  297 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 297 (expr_cast)


State 1387

  300 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 300 (expr_cast)


State 1388

  303 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 303 (expr_cast)


State 1389

  802 make_dim_decl: "fixed_array" '<' $@99 type_declaration_no_options '>' $@100 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 1443
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1390

  789 make_tuple_call: "tuple" '<' $@95 type_declaration_no_options '>' $@96 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 879
    "name"  shift, and go to state 1236

    make_struct_fields  go to state 885
    make_struct_dim     go to state 1444


State 1391

  777 make_struct_decl: "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 879
    "name"  shift, and go to state 1236

    make_struct_fields  go to state 885
    make_struct_dim     go to state 1445


State 1392

  437 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 437 (expr)


State 1393

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  438     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1446


State 1394

  327 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 327 (expr_block)


State 1395

  476 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 476 (expr_mtag)


State 1396

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  817 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ';'    shift, and go to state 1447

    $default  reduce using rule 812 (array_comprehension_where)

    array_comprehension_where  go to state 1448


State 1397

  744 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1449
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1398

  743 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1450
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1399

  766 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 766 (make_struct_decl)


State 1400

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  745 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  746                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1451


State 1401

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  742 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 742 (make_struct_fields)


State 1402

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  741 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 741 (make_struct_fields)


State 1403

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  818 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ';'    shift, and go to state 1447

    $default  reduce using rule 812 (array_comprehension_where)

    array_comprehension_where  go to state 1452


State 1404

  768 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 768 (make_struct_decl)


State 1405

  820 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple . array_comprehension_where '}' '}'

    ';'  shift, and go to state 1447

    $default  reduce using rule 812 (array_comprehension_where)

    array_comprehension_where  go to state 1453


State 1406

  249 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 249 (expression_keyword)


State 1407

  252 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 1454
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1408

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  816 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ';'    shift, and go to state 1447

    $default  reduce using rule 812 (array_comprehension_where)

    array_comprehension_where  go to state 1455


State 1409

  370 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 910
    "name"  shift, and go to state 59

    name_in_namespace  go to state 913
    func_addr_name     go to state 1456


State 1410

  373 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' . $@24 func_addr_name

    $default  reduce using rule 372 ($@24)

    $@24  go to state 1457


State 1411

  819 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1447

    $default  reduce using rule 812 (array_comprehension_where)

    array_comprehension_where  go to state 1458


State 1412

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1413

  273 expression_return_no_pipe: "return" .
  274                          | "return" . expr_list
  275                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 1459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 273 (expression_return_no_pipe)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 634
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1414

  279 expression_yield_no_pipe: "yield" . expr
  280                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 1460
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1461
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1415

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1416

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1417

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1418

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1419

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1420

   67 expression_if_one_liner: expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 67 (expression_if_one_liner)


State 1421

  362 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1462


State 1422

  291 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1463


State 1423

  292 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 563
    ":="  shift, and go to state 564
    '='   shift, and go to state 565

    copy_or_move_or_clone  go to state 1464


State 1424

  314 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1465
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1425

  313 block_or_simple_block: "=>" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    ".."  error (nonassociative)

    $default  reduce using rule 313 (block_or_simple_block)


State 1426

  443 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' . $@28

    $default  reduce using rule 442 ($@28)

    $@28  go to state 1466


State 1427

  449 expr: expr "as" "type" '<' $@29 type_declaration '>' . $@30

    $default  reduce using rule 448 ($@30)

    $@30  go to state 1467


State 1428

  454 expr: expr '?' "as" "type" '<' $@31 type_declaration . '>' $@32
  717 type_declaration: type_declaration . '|' type_declaration_no_options
  718                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1468


State 1429

  482 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 482 (expr_mtag)


State 1430

  480 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 480 (expr_mtag)


State 1431

  479 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 479 (expr_mtag)


State 1432

  502 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 . function_declaration_header ';'

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1469


State 1433

  504 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@35 function_declaration_header expression_block

    $default  reduce using rule 503 ($@35)

    $@35  go to state 1470


State 1434

  497 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 497 (structure_variable_declaration)


State 1435

  663 type_declaration_no_options: '$' name_in_namespace '<' $@50 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 663 (type_declaration_no_options)


State 1436

  748 make_struct_dim: make_struct_dim . ';' make_struct_fields
  771 make_struct_decl: "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1471
    ';'  shift, and go to state 1090


State 1437

  748 make_struct_dim: make_struct_dim . ';' make_struct_fields
  774 make_struct_decl: "class" '<' $@89 type_declaration_no_options '>' $@90 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1472
    ';'  shift, and go to state 1090


State 1438

  308 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 308 (expr_type_info)


State 1439

  309 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1473
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1440

  311 expr_list: expr_list . ',' expr
  798 make_dim_decl: "array" '<' $@97 type_declaration_no_options '>' $@98 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 907

    $default  reduce using rule 814 (optional_comma)

    optional_comma  go to state 1474


State 1441

  810 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 810 (make_table_decl)


State 1442

  806 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  811 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 916

    $default  reduce using rule 814 (optional_comma)

    optional_comma  go to state 1475


State 1443

  311 expr_list: expr_list . ',' expr
  802 make_dim_decl: "fixed_array" '<' $@99 type_declaration_no_options '>' $@100 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 907

    $default  reduce using rule 814 (optional_comma)

    optional_comma  go to state 1476


State 1444

  748 make_struct_dim: make_struct_dim . ';' make_struct_fields
  789 make_tuple_call: "tuple" '<' $@95 type_declaration_no_options '>' $@96 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1477
    ';'  shift, and go to state 1090


State 1445

  748 make_struct_dim: make_struct_dim . ';' make_struct_fields
  777 make_struct_decl: "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1478
    ';'  shift, and go to state 1090


State 1446

  438 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 438 (expr)


State 1447

  813 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1479


State 1448

  817 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1480


State 1449

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  744 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 744 (make_struct_fields)


State 1450

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  743 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 743 (make_struct_fields)


State 1451

  745 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  746                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 613
    ":="  shift, and go to state 1481
    '='   shift, and go to state 615

    copy_or_move  go to state 1482


State 1452

  818 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1483


State 1453

  820 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where . '}' '}'

    '}'  shift, and go to state 1484


State 1454

  252 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 '(' expr_list . ')'
  311 expr_list: expr_list . ',' expr

    ','  shift, and go to state 843
    ')'  shift, and go to state 1485


State 1455

  816 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1486


State 1456

  370 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name .

    $default  reduce using rule 370 (func_addr_expr)


State 1457

  373 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 910
    "name"  shift, and go to state 59

    name_in_namespace  go to state 913
    func_addr_name     go to state 1487


State 1458

  819 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1488


State 1459

  275 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    expr_list               go to state 842
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 698
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1460

  280 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1489
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1461

  279 expression_yield_no_pipe: "yield" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 279 (expression_yield_no_pipe)


State 1462

  362 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 362 (expr_named_call)


State 1463

  291 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  655 type_declaration_no_options: type_declaration_no_options . dim_list
  656                            | type_declaration_no_options . '[' ']'
  664                            | type_declaration_no_options . '-' '[' ']'
  665                            | type_declaration_no_options . "explicit"
  666                            | type_declaration_no_options . "const"
  667                            | type_declaration_no_options . '-' "const"
  668                            | type_declaration_no_options . '&'
  669                            | type_declaration_no_options . '-' '&'
  670                            | type_declaration_no_options . '#'
  671                            | type_declaration_no_options . "implicit"
  672                            | type_declaration_no_options . '-' '#'
  673                            | type_declaration_no_options . "==" "const"
  674                            | type_declaration_no_options . "==" '&'
  675                            | type_declaration_no_options . '?'
  679                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 563
    "??"        shift, and go to state 403
    ":="        shift, and go to state 564
    '='         shift, and go to state 565
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 1490
    dim_list               go to state 409


State 1464

  292 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1491
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1465

  314 block_or_simple_block: "=>" "<-" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 314 (block_or_simple_block)


State 1466

  443 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' $@28 .

    $default  reduce using rule 443 (expr)


State 1467

  449 expr: expr "as" "type" '<' $@29 type_declaration '>' $@30 .

    $default  reduce using rule 449 (expr)


State 1468

  454 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' . $@32

    $default  reduce using rule 453 ($@32)

    $@32  go to state 1492


State 1469

  502 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header . ';'

    ';'  shift, and go to state 1493


State 1470

  504 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1494


State 1471

  771 make_struct_decl: "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim ')' .

    $default  reduce using rule 771 (make_struct_decl)


State 1472

  774 make_struct_decl: "class" '<' $@89 type_declaration_no_options '>' $@90 '(' make_struct_dim ')' .

    $default  reduce using rule 774 (make_struct_decl)


State 1473

  309 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ')'    shift, and go to state 1495


State 1474

  798 make_dim_decl: "array" '<' $@97 type_declaration_no_options '>' $@98 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1496


State 1475

  811 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1497


State 1476

  802 make_dim_decl: "fixed_array" '<' $@99 type_declaration_no_options '>' $@100 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1498


State 1477

  789 make_tuple_call: "tuple" '<' $@95 type_declaration_no_options '>' $@96 '(' make_struct_dim ')' .

    $default  reduce using rule 789 (make_tuple_call)


State 1478

  777 make_struct_decl: "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' make_struct_dim ')' .

    $default  reduce using rule 777 (make_struct_decl)


State 1479

  813 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1499
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1480

  817 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1500


State 1481

  746 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1501
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1482

  745 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1502
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1483

  818 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1503


State 1484

  820 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' . '}'

    '}'  shift, and go to state 1504


State 1485

  252 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 '(' expr_list ')' .

    $default  reduce using rule 252 (expression_keyword)


State 1486

  816 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' .

    $default  reduce using rule 816 (array_comprehension)


State 1487

  373 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name .

    $default  reduce using rule 373 (func_addr_expr)


State 1488

  819 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 819 (array_comprehension)


State 1489

  280 expression_yield_no_pipe: "yield" "<-" expr .
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 280 (expression_yield_no_pipe)


State 1490

  291 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 557
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 514
    name_in_namespace       go to state 516
    expr_new                go to state 518
    expr_cast               go to state 528
    expr_type_decl          go to state 529
    expr_type_info          go to state 530
    block_or_lambda         go to state 531
    expr_full_block         go to state 532
    expr_numeric_const      go to state 533
    expr_named_call         go to state 536
    expr_method_call        go to state 537
    func_addr_expr          go to state 538
    expr_field              go to state 539
    expr                    go to state 1505
    expr_mtag               go to state 541
    basic_type_declaration  go to state 542
    make_decl               go to state 543
    make_struct_decl        go to state 544
    make_tuple_call         go to state 545
    make_dim_decl           go to state 546
    make_table_decl         go to state 547
    array_comprehension     go to state 548


State 1491

  292 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . ';'
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ';'    shift, and go to state 1506


State 1492

  454 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' $@32 .

    $default  reduce using rule 454 (expr)


State 1493

  502 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';' .

    $default  reduce using rule 502 (struct_variable_declaration_list)


State 1494

  504 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1507


State 1495

  309 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 309 (expr_type_info)


State 1496

  798 make_dim_decl: "array" '<' $@97 type_declaration_no_options '>' $@98 '(' expr_list optional_comma ')' .

    $default  reduce using rule 798 (make_dim_decl)


State 1497

  811 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 811 (make_table_decl)


State 1498

  802 make_dim_decl: "fixed_array" '<' $@99 type_declaration_no_options '>' $@100 '(' expr_list optional_comma ')' .

    $default  reduce using rule 802 (make_dim_decl)


State 1499

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  813 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 813 (array_comprehension_where)


State 1500

  817 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 817 (array_comprehension)


State 1501

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  746 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 746 (make_struct_fields)


State 1502

  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'
  745 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773

    $default  reduce using rule 745 (make_struct_fields)


State 1503

  818 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 818 (array_comprehension)


State 1504

  820 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}' .

    $default  reduce using rule 820 (array_comprehension)


State 1505

  291 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . ';'
  363 expr_method_call: expr . "->" "name" '(' ')'
  364                 | expr . "->" "name" '(' expr_list ')'
  374 expr_field: expr . '.' "name"
  375           | expr . '.' '.' "name"
  376           | expr . '.' "name" '(' ')'
  377           | expr . '.' "name" '(' expr_list ')'
  380           | expr . '.' $@25 error $@26
  395 expr: expr . "<<" expr
  396     | expr . ">>" expr
  397     | expr . "<<<" expr
  398     | expr . ">>>" expr
  399     | expr . '+' expr
  400     | expr . '-' expr
  401     | expr . '*' expr
  402     | expr . '/' expr
  403     | expr . '%' expr
  404     | expr . '<' expr
  405     | expr . '>' expr
  406     | expr . "==" expr
  407     | expr . "!=" expr
  408     | expr . "<=" expr
  409     | expr . ">=" expr
  410     | expr . '&' expr
  411     | expr . '|' expr
  412     | expr . '^' expr
  413     | expr . "&&" expr
  414     | expr . "||" expr
  415     | expr . "^^" expr
  416     | expr . ".." expr
  419     | expr . "++"
  420     | expr . "--"
  422     | expr . '[' expr ']'
  423     | expr . '.' '[' expr ']'
  424     | expr . "?[" expr ']'
  425     | expr . '.' "?[" expr ']'
  426     | expr . "?." "name"
  427     | expr . '.' "?." "name"
  439     | expr . "??" expr
  440     | expr . '?' expr ':' expr
  443     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  444     | expr . "is" basic_type_declaration
  445     | expr . "is" "name"
  446     | expr . "as" "name"
  449     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  450     | expr . "as" basic_type_declaration
  451     | expr . '?' "as" "name"
  454     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  455     | expr . '?' "as" basic_type_declaration
  463     | expr . "<|" expr
  464     | expr . "|>" expr
  465     | expr . "|>" basic_type_declaration
  477 expr_mtag: expr . '.' "$f" '(' expr ')'
  478          | expr . "?." "$f" '(' expr ')'
  479          | expr . '.' '.' "$f" '(' expr ')'
  480          | expr . '.' "?." "$f" '(' expr ')'
  481          | expr . "as" "$f" '(' expr ')'
  482          | expr . '?' "as" "$f" '(' expr ')'
  483          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 721
    "as"   shift, and go to state 722
    "<<"   shift, and go to state 731
    ">>"   shift, and go to state 732
    "++"   shift, and go to state 733
    "--"   shift, and go to state 734
    "<="   shift, and go to state 735
    ">="   shift, and go to state 738
    "=="   shift, and go to state 739
    "!="   shift, and go to state 740
    "->"   shift, and go to state 741
    "??"   shift, and go to state 743
    "?."   shift, and go to state 744
    "?["   shift, and go to state 745
    "<|"   shift, and go to state 746
    "|>"   shift, and go to state 747
    "<<<"  shift, and go to state 749
    ">>>"  shift, and go to state 750
    "&&"   shift, and go to state 753
    "||"   shift, and go to state 754
    "^^"   shift, and go to state 755
    ".."   shift, and go to state 759
    '?'    shift, and go to state 761
    '|'    shift, and go to state 762
    '^'    shift, and go to state 763
    '&'    shift, and go to state 764
    '<'    shift, and go to state 765
    '>'    shift, and go to state 766
    '-'    shift, and go to state 767
    '+'    shift, and go to state 768
    '*'    shift, and go to state 769
    '/'    shift, and go to state 770
    '%'    shift, and go to state 771
    '.'    shift, and go to state 772
    '['    shift, and go to state 773
    ';'    shift, and go to state 1508


State 1506

  292 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 292 (tuple_expansion_variable_declaration)


State 1507

  504 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block .

    $default  reduce using rule 504 (struct_variable_declaration_list)


State 1508

  291 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 291 (tuple_expansion_variable_declaration)
