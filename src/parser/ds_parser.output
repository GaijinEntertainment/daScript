Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 313 conflicts: 1 shift/reduce
State 409 conflicts: 1 shift/reduce
State 515 conflicts: 2 shift/reduce
State 517 conflicts: 2 shift/reduce
State 628 conflicts: 1 shift/reduce
State 927 conflicts: 2 shift/reduce
State 1038 conflicts: 1 shift/reduce
State 1144 conflicts: 1 shift/reduce
State 1406 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program ';'

   16 top_level_reader_macro: expr_reader ';'

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 $@4: %empty

   75 expression_if_then_else: if_or_static_if expr $@3 error $@4 ';'

   76 $@5: %empty

   77 expression_if_then_else: expression_if_one_liner "if" $@5 expr expression_else_one_liner ';'

   78 $@6: %empty

   79 expression_for_loop: "for" $@6 variable_name_with_pos_list "in" expr_list expression_block

   80 expression_unsafe: "unsafe" expression_block

   81 expression_while_loop: "while" expr expression_block

   82 $@7: %empty

   83 $@8: %empty

   84 expression_while_loop: "while" expr $@7 error $@8 ';'

   85 expression_with: "with" expr expression_block

   86 $@9: %empty

   87 expression_with_alias: "assume" "name" '=' $@9 expr

   88 annotation_argument_value: string_constant
   89                          | "name"
   90                          | "integer constant"
   91                          | "floating point constant"
   92                          | "true"
   93                          | "false"

   94 annotation_argument_value_list: annotation_argument_value
   95                               | annotation_argument_value_list ',' annotation_argument_value

   96 annotation_argument_name: "name"
   97                         | "type"
   98                         | "in"

   99 annotation_argument: annotation_argument_name '=' string_constant
  100                    | annotation_argument_name '=' "name"
  101                    | annotation_argument_name '=' "integer constant"
  102                    | annotation_argument_name '=' "floating point constant"
  103                    | annotation_argument_name '=' "true"
  104                    | annotation_argument_name '=' "false"
  105                    | annotation_argument_name
  106                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  107 annotation_argument_list: annotation_argument
  108                         | annotation_argument_list ',' annotation_argument

  109 annotation_declaration_name: name_in_namespace
  110                            | "require"
  111                            | "private"

  112 annotation_declaration_basic: annotation_declaration_name
  113                             | annotation_declaration_name '(' annotation_argument_list ')'

  114 annotation_declaration: annotation_declaration_basic
  115                       | '!' annotation_declaration
  116                       | annotation_declaration "&&" annotation_declaration
  117                       | annotation_declaration "||" annotation_declaration
  118                       | annotation_declaration "^^" annotation_declaration
  119                       | '(' annotation_declaration ')'
  120                       | "|>" annotation_declaration

  121 annotation_list: annotation_declaration
  122                | annotation_list ',' annotation_declaration

  123 optional_annotation_list: %empty
  124                         | '[' annotation_list ']'

  125 optional_function_argument_list: %empty
  126                                | '(' ')'
  127                                | '(' function_argument_list ')'

  128 optional_function_type: %empty
  129                       | ':' type_declaration

  130 function_name: "name"
  131              | "operator" '!'
  132              | "operator" '~'
  133              | "operator" "+="
  134              | "operator" "-="
  135              | "operator" "*="
  136              | "operator" "/="
  137              | "operator" "%="
  138              | "operator" "&="
  139              | "operator" "|="
  140              | "operator" "^="
  141              | "operator" "&&="
  142              | "operator" "||="
  143              | "operator" "^^="
  144              | "operator" "&&"
  145              | "operator" "||"
  146              | "operator" "^^"
  147              | "operator" '+'
  148              | "operator" '-'
  149              | "operator" '*'
  150              | "operator" '/'
  151              | "operator" '%'
  152              | "operator" '<'
  153              | "operator" '>'
  154              | "operator" ".."
  155              | "operator" "=="
  156              | "operator" "!="
  157              | "operator" "<="
  158              | "operator" ">="
  159              | "operator" '&'
  160              | "operator" '|'
  161              | "operator" '^'
  162              | "++" "operator"
  163              | "--" "operator"
  164              | "operator" "++"
  165              | "operator" "--"
  166              | "operator" "<<"
  167              | "operator" ">>"
  168              | "operator" "<<="
  169              | "operator" ">>="
  170              | "operator" "<<<"
  171              | "operator" ">>>"
  172              | "operator" "<<<="
  173              | "operator" ">>>="
  174              | "operator" '[' ']'
  175              | "operator" "?[" ']'
  176              | "operator" '.'
  177              | "operator" "?."
  178              | "operator" '.' "name"
  179              | "operator" '.' "name" ":="
  180              | "operator" "?." "name"
  181              | "operator" ":="
  182              | "operator" "delete"
  183              | "operator" "??"
  184              | "operator" "is"
  185              | "operator" "as"
  186              | "operator" "is" "name"
  187              | "operator" "as" "name"
  188              | "operator" '?' "as"
  189              | "operator" '?' "as" "name"
  190              | "bool"
  191              | "string"
  192              | "int"
  193              | "int2"
  194              | "int3"
  195              | "int4"
  196              | "uint"
  197              | "uint2"
  198              | "uint3"
  199              | "uint4"
  200              | "float"
  201              | "float2"
  202              | "float3"
  203              | "float4"
  204              | "range"
  205              | "urange"
  206              | "range64"
  207              | "urange64"
  208              | "int64"
  209              | "uint64"
  210              | "double"
  211              | "int8"
  212              | "uint8"
  213              | "int16"
  214              | "uint16"

  215 global_function_declaration: optional_annotation_list "def" function_declaration

  216 optional_public_or_private_function: %empty
  217                                    | "private"
  218                                    | "public"

  219 function_declaration_header: function_name optional_function_argument_list optional_function_type

  220 $@10: %empty

  221 function_declaration: optional_public_or_private_function $@10 function_declaration_header expression_block

  222 expression_block: '{' expressions '}'
  223                 | '{' expressions '}' "finally" '{' expressions '}'

  224 expr_call_pipe: expr expr_full_block_assumed_piped
  225               | expression_keyword expr_full_block_assumed_piped

  226 expression_any: ';'
  227               | expr_pipe
  228               | expr_keyword
  229               | expr_assign_pipe
  230               | expr_assign ';'
  231               | expression_delete ';'
  232               | expression_let
  233               | expression_while_loop
  234               | expression_unsafe
  235               | expression_with
  236               | expression_with_alias
  237               | expression_for_loop
  238               | expression_break ';'
  239               | expression_continue ';'
  240               | expression_return
  241               | expression_yield
  242               | expression_if_then_else
  243               | expression_try_catch
  244               | expression_label ';'
  245               | expression_goto ';'
  246               | "pass" ';'

  247 expressions: %empty
  248            | expressions expression_any
  249            | expressions error

  250 expr_keyword: "keyword" expr expression_block

  251 optional_expr_list: %empty
  252                   | expr_list

  253 optional_expr_list_in_braces: %empty
  254                             | '(' optional_expr_list ')'

  255 type_declaration_no_options_list: type_declaration
  256                                 | type_declaration_no_options_list ';' type_declaration

  257 $@11: %empty

  258 $@12: %empty

  259 expression_keyword: "keyword" '<' $@11 type_declaration_no_options_list '>' $@12 expr

  260 $@13: %empty

  261 $@14: %empty

  262 expression_keyword: "type function" '<' $@13 type_declaration_no_options_list '>' $@14 optional_expr_list_in_braces

  263 expr_pipe: expr_assign " <|" expr_block
  264          | "@ <|" expr_block
  265          | "@@ <|" expr_block
  266          | "$ <|" expr_block
  267          | expr_call_pipe

  268 name_in_namespace: "name"
  269                  | "name" "::" "name"
  270                  | "::" "name"

  271 expression_delete: "delete" expr
  272                  | "delete" "explicit" expr

  273 $@15: %empty

  274 $@16: %empty

  275 new_type_declaration: '<' $@15 type_declaration '>' $@16
  276                     | structure_type_declaration

  277 expr_new: "new" new_type_declaration
  278         | "new" new_type_declaration '(' ')'
  279         | "new" new_type_declaration '(' expr_list ')'
  280         | "new" new_type_declaration '(' make_struct_dim ')'
  281         | "new" make_decl

  282 expression_break: "break"

  283 expression_continue: "continue"

  284 expression_return_no_pipe: "return"
  285                          | "return" expr_list
  286                          | "return" "<-" expr_list

  287 expression_return: expression_return_no_pipe ';'
  288                  | "return" expr_pipe
  289                  | "return" "<-" expr_pipe

  290 expression_yield_no_pipe: "yield" expr
  291                         | "yield" "<-" expr

  292 expression_yield: expression_yield_no_pipe ';'
  293                 | "yield" expr_pipe
  294                 | "yield" "<-" expr_pipe

  295 expression_try_catch: "try" expression_block "recover" expression_block

  296 kwd_let: "let"
  297        | "var"

  298 optional_in_scope: "inscope"
  299                  | %empty

  300 tuple_expansion: "name"
  301                | tuple_expansion ',' "name"

  302 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  303                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  304                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'
  305                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr ';'

  306 expression_let: kwd_let optional_in_scope let_variable_declaration
  307               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  308 $@17: %empty

  309 $@18: %empty

  310 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' $@18 expr

  311 $@19: %empty

  312 $@20: %empty

  313 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' $@20 expr

  314 $@21: %empty

  315 $@22: %empty

  316 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' $@22 expr

  317 $@23: %empty

  318 $@24: %empty

  319 expr_type_decl: "type" '<' $@23 type_declaration '>' $@24

  320 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  321               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  322               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  323 expr_list: expr
  324          | expr_list ',' expr

  325 block_or_simple_block: expression_block
  326                      | "=>" expr
  327                      | "=>" "<-" expr

  328 block_or_lambda: '$'
  329                | '@'
  330                | '@' '@'

  331 capture_entry: '&' "name"
  332              | '=' "name"
  333              | "<-" "name"
  334              | ":=" "name"

  335 capture_list: capture_entry
  336             | capture_list ',' capture_entry

  337 optional_capture_list: %empty
  338                      | "[[" capture_list ']' ']'

  339 expr_block: expression_block
  340           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  341 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  342 $@25: %empty

  343 expr_full_block_assumed_piped: block_or_lambda $@25 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  344 expr_numeric_const: "integer constant"
  345                   | "unsigned integer constant"
  346                   | "long integer constant"
  347                   | "unsigned long integer constant"
  348                   | "unsigned int8 constant"
  349                   | "floating point constant"
  350                   | "double constant"

  351 expr_assign: expr
  352            | expr '=' expr
  353            | expr "<-" expr
  354            | expr ":=" expr
  355            | expr "&=" expr
  356            | expr "|=" expr
  357            | expr "^=" expr
  358            | expr "&&=" expr
  359            | expr "||=" expr
  360            | expr "^^=" expr
  361            | expr "+=" expr
  362            | expr "-=" expr
  363            | expr "*=" expr
  364            | expr "/=" expr
  365            | expr "%=" expr
  366            | expr "<<=" expr
  367            | expr ">>=" expr
  368            | expr "<<<=" expr
  369            | expr ">>>=" expr

  370 expr_assign_pipe_right: "@ <|" expr_block
  371                       | "@@ <|" expr_block
  372                       | "$ <|" expr_block
  373                       | expr_call_pipe

  374 expr_assign_pipe: expr '=' expr_assign_pipe_right
  375                 | expr "<-" expr_assign_pipe_right
  376                 | expr "&=" expr_assign_pipe_right
  377                 | expr "|=" expr_assign_pipe_right
  378                 | expr "^=" expr_assign_pipe_right
  379                 | expr "&&=" expr_assign_pipe_right
  380                 | expr "||=" expr_assign_pipe_right
  381                 | expr "^^=" expr_assign_pipe_right
  382                 | expr "+=" expr_assign_pipe_right
  383                 | expr "-=" expr_assign_pipe_right
  384                 | expr "*=" expr_assign_pipe_right
  385                 | expr "/=" expr_assign_pipe_right
  386                 | expr "%=" expr_assign_pipe_right
  387                 | expr "<<=" expr_assign_pipe_right
  388                 | expr ">>=" expr_assign_pipe_right
  389                 | expr "<<<=" expr_assign_pipe_right
  390                 | expr ">>>=" expr_assign_pipe_right

  391 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  392                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  393 expr_method_call: expr "->" "name" '(' ')'
  394                 | expr "->" "name" '(' expr_list ')'

  395 func_addr_name: name_in_namespace
  396               | "$i" '(' expr ')'

  397 func_addr_expr: '@' '@' func_addr_name

  398 $@26: %empty

  399 $@27: %empty

  400 func_addr_expr: '@' '@' '<' $@26 type_declaration_no_options '>' $@27 func_addr_name

  401 $@28: %empty

  402 $@29: %empty

  403 func_addr_expr: '@' '@' '<' $@28 optional_function_argument_list optional_function_type '>' $@29 func_addr_name

  404 expr_field: expr '.' "name"
  405           | expr '.' '.' "name"
  406           | expr '.' "name" '(' ')'
  407           | expr '.' "name" '(' expr_list ')'

  408 $@30: %empty

  409 $@31: %empty

  410 expr_field: expr '.' $@30 error $@31

  411 expr_call: name_in_namespace '(' ')'
  412          | name_in_namespace '(' make_struct_dim ')'
  413          | name_in_namespace '(' expr_list ')'
  414          | basic_type_declaration '(' ')'
  415          | basic_type_declaration '(' expr_list ')'

  416 expr: "null"
  417     | name_in_namespace
  418     | expr_numeric_const
  419     | expr_reader
  420     | string_builder
  421     | make_decl
  422     | "true"
  423     | "false"
  424     | expr_field
  425     | expr_mtag
  426     | '!' expr
  427     | '~' expr
  428     | '+' expr
  429     | '-' expr
  430     | expr "<<" expr
  431     | expr ">>" expr
  432     | expr "<<<" expr
  433     | expr ">>>" expr
  434     | expr '+' expr
  435     | expr '-' expr
  436     | expr '*' expr
  437     | expr '/' expr
  438     | expr '%' expr
  439     | expr '<' expr
  440     | expr '>' expr
  441     | expr "==" expr
  442     | expr "!=" expr
  443     | expr "<=" expr
  444     | expr ">=" expr
  445     | expr '&' expr
  446     | expr '|' expr
  447     | expr '^' expr
  448     | expr "&&" expr
  449     | expr "||" expr
  450     | expr "^^" expr
  451     | expr ".." expr
  452     | "++" expr
  453     | "--" expr
  454     | expr "++"
  455     | expr "--"
  456     | '(' expr_list optional_comma ')'
  457     | expr '[' expr ']'
  458     | expr '.' '[' expr ']'
  459     | expr "?[" expr ']'
  460     | expr '.' "?[" expr ']'
  461     | expr "?." "name"
  462     | expr '.' "?." "name"
  463     | func_addr_expr
  464     | expr_call
  465     | '*' expr
  466     | "deref" '(' expr ')'
  467     | "addr" '(' expr ')'
  468     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  469     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  470     | expr "??" expr
  471     | expr '?' expr ':' expr

  472 $@32: %empty

  473 $@33: %empty

  474 expr: expr "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr "is" basic_type_declaration
  476     | expr "is" "name"
  477     | expr "as" "name"

  478 $@34: %empty

  479 $@35: %empty

  480 expr: expr "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr "as" basic_type_declaration
  482     | expr '?' "as" "name"

  483 $@36: %empty

  484 $@37: %empty

  485 expr: expr '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr '?' "as" basic_type_declaration
  487     | expr_type_info
  488     | expr_type_decl
  489     | expr_cast
  490     | expr_new
  491     | expr_method_call
  492     | expr_named_call
  493     | expr_full_block
  494     | expr "<|" expr
  495     | expr "|>" expr
  496     | expr "|>" basic_type_declaration
  497     | name_in_namespace "name"
  498     | "unsafe" '(' expr ')'
  499     | expression_keyword

  500 expr_mtag: "$$" '(' expr ')'
  501          | "$i" '(' expr ')'
  502          | "$v" '(' expr ')'
  503          | "$b" '(' expr ')'
  504          | "$a" '(' expr ')'
  505          | "..."
  506          | "$c" '(' expr ')' '(' ')'
  507          | "$c" '(' expr ')' '(' expr_list ')'
  508          | expr '.' "$f" '(' expr ')'
  509          | expr "?." "$f" '(' expr ')'
  510          | expr '.' '.' "$f" '(' expr ')'
  511          | expr '.' "?." "$f" '(' expr ')'
  512          | expr "as" "$f" '(' expr ')'
  513          | expr '?' "as" "$f" '(' expr ')'
  514          | expr "is" "$f" '(' expr ')'
  515          | '@' '@' "$c" '(' expr ')'

  516 optional_field_annotation: %empty
  517                          | "[[" annotation_argument_list ']' ']'

  518 optional_override: %empty
  519                  | "override"
  520                  | "sealed"

  521 optional_constant: %empty
  522                  | "const"

  523 optional_public_or_private_member_variable: %empty
  524                                           | "public"
  525                                           | "private"

  526 optional_static_member_variable: %empty
  527                                | "static"

  528 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  529 struct_variable_declaration_list: %empty

  530 $@38: %empty

  531 struct_variable_declaration_list: struct_variable_declaration_list $@38 structure_variable_declaration ';'

  532 $@39: %empty

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@39 function_declaration_header ';'

  534 $@40: %empty

  535 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@40 function_declaration_header expression_block
  536                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  537 function_argument_declaration: optional_field_annotation variable_declaration
  538                              | optional_field_annotation "var" variable_declaration
  539                              | "$a" '(' expr ')'

  540 function_argument_list: function_argument_declaration
  541                       | function_argument_list ';' function_argument_declaration

  542 tuple_type: type_declaration
  543           | "name" ':' type_declaration

  544 tuple_type_list: tuple_type
  545                | tuple_type_list ';' tuple_type

  546 tuple_alias_type_list: %empty
  547                      | tuple_alias_type_list ';'
  548                      | tuple_alias_type_list tuple_type ';'

  549 variant_type: "name" ':' type_declaration

  550 variant_type_list: variant_type
  551                  | variant_type_list ';' variant_type

  552 variant_alias_type_list: %empty
  553                        | variant_alias_type_list ';'
  554                        | variant_alias_type_list variant_type ';'

  555 copy_or_move: '='
  556             | "<-"

  557 variable_declaration: variable_name_with_pos_list
  558                     | variable_name_with_pos_list '&'
  559                     | variable_name_with_pos_list ':' type_declaration
  560                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  561                     | variable_name_with_pos_list copy_or_move expr
  562                     | variable_name_with_pos_list copy_or_move expr_pipe

  563 copy_or_move_or_clone: '='
  564                      | "<-"
  565                      | ":="

  566 optional_ref: %empty
  567             | '&'

  568 let_variable_name_with_pos_list: "name"
  569                                | "$i" '(' expr ')'
  570                                | "name" "aka" "name"
  571                                | let_variable_name_with_pos_list ',' "name"
  572                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  573 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  574                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  575                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  576                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  577                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  578 global_variable_declaration_list: %empty

  579 $@41: %empty

  580 global_variable_declaration_list: global_variable_declaration_list $@41 optional_field_annotation let_variable_declaration

  581 optional_shared: %empty
  582                | "shared"

  583 optional_public_or_private_variable: %empty
  584                                    | "private"
  585                                    | "public"

  586 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  587 $@42: %empty

  588 global_let: kwd_let optional_shared optional_public_or_private_variable $@42 optional_field_annotation let_variable_declaration

  589 enum_list: %empty
  590          | enum_list ';'
  591          | enum_list "name" ';'
  592          | enum_list "name" '=' expr ';'

  593 optional_public_or_private_alias: %empty
  594                                 | "private"
  595                                 | "public"

  596 $@43: %empty

  597 single_alias: optional_public_or_private_alias "name" $@43 '=' type_declaration

  598 alias_list: single_alias ';'
  599           | alias_list single_alias ';'

  600 alias_declaration: "typedef" '{' alias_list '}'

  601 $@44: %empty

  602 alias_declaration: "typedef" $@44 single_alias ';'

  603 optional_public_or_private_enum: %empty
  604                                | "private"
  605                                | "public"

  606 enum_name: "name"

  607 $@45: %empty

  608 $@46: %empty

  609 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@45 enum_list $@46 '}'

  610 $@47: %empty

  611 $@48: %empty

  612 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@47 enum_list $@48 '}'

  613 optional_structure_parent: %empty
  614                          | ':' name_in_namespace

  615 optional_sealed: %empty
  616                | "sealed"

  617 structure_name: optional_sealed "name" optional_structure_parent

  618 class_or_struct: "class"
  619                | "struct"

  620 optional_public_or_private_structure: %empty
  621                                     | "private"
  622                                     | "public"

  623 optional_struct_variable_declaration_list: %empty
  624                                          | '{' struct_variable_declaration_list '}'

  625 $@49: %empty

  626 $@50: %empty

  627 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@49 structure_name $@50 optional_struct_variable_declaration_list

  628 variable_name_with_pos_list: "name"
  629                            | "$i" '(' expr ')'
  630                            | "name" "aka" "name"
  631                            | variable_name_with_pos_list ',' "name"
  632                            | variable_name_with_pos_list ',' "name" "aka" "name"

  633 basic_type_declaration: "bool"
  634                       | "string"
  635                       | "int"
  636                       | "int8"
  637                       | "int16"
  638                       | "int64"
  639                       | "int2"
  640                       | "int3"
  641                       | "int4"
  642                       | "uint"
  643                       | "uint8"
  644                       | "uint16"
  645                       | "uint64"
  646                       | "uint2"
  647                       | "uint3"
  648                       | "uint4"
  649                       | "float"
  650                       | "float2"
  651                       | "float3"
  652                       | "float4"
  653                       | "void"
  654                       | "range"
  655                       | "urange"
  656                       | "range64"
  657                       | "urange64"
  658                       | "double"
  659                       | "bitfield"

  660 enum_basic_type_declaration: "int"
  661                            | "int8"
  662                            | "int16"
  663                            | "uint"
  664                            | "uint8"
  665                            | "uint16"

  666 structure_type_declaration: name_in_namespace

  667 auto_type_declaration: "auto"
  668                      | "auto" '(' "name" ')'
  669                      | "$t" '(' expr ')'

  670 bitfield_bits: "name"
  671              | bitfield_bits ';' "name"

  672 bitfield_alias_bits: %empty
  673                    | bitfield_alias_bits ';'
  674                    | bitfield_alias_bits "name" ';'

  675 $@51: %empty

  676 $@52: %empty

  677 bitfield_type_declaration: "bitfield" '<' $@51 bitfield_bits '>' $@52

  678 table_type_pair: type_declaration
  679                | type_declaration ';' type_declaration

  680 dim_list: '[' expr ']'
  681         | dim_list '[' expr ']'

  682 type_declaration_no_options: basic_type_declaration
  683                            | auto_type_declaration
  684                            | bitfield_type_declaration
  685                            | structure_type_declaration
  686                            | type_declaration_no_options dim_list
  687                            | type_declaration_no_options '[' ']'

  688 $@53: %empty

  689 $@54: %empty

  690 type_declaration_no_options: "type" '<' $@53 type_declaration '>' $@54
  691                            | "typedecl" '(' expr ')'
  692                            | '$' name_in_namespace '(' optional_expr_list ')'

  693 $@55: %empty

  694 type_declaration_no_options: '$' name_in_namespace '<' $@55 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  695                            | type_declaration_no_options '-' '[' ']'
  696                            | type_declaration_no_options "explicit"
  697                            | type_declaration_no_options "const"
  698                            | type_declaration_no_options '-' "const"
  699                            | type_declaration_no_options '&'
  700                            | type_declaration_no_options '-' '&'
  701                            | type_declaration_no_options '#'
  702                            | type_declaration_no_options "implicit"
  703                            | type_declaration_no_options '-' '#'
  704                            | type_declaration_no_options "==" "const"
  705                            | type_declaration_no_options "==" '&'
  706                            | type_declaration_no_options '?'

  707 $@56: %empty

  708 $@57: %empty

  709 type_declaration_no_options: "smart_ptr" '<' $@56 type_declaration '>' $@57
  710                            | type_declaration_no_options "??"

  711 $@58: %empty

  712 $@59: %empty

  713 type_declaration_no_options: "array" '<' $@58 type_declaration '>' $@59

  714 $@60: %empty

  715 $@61: %empty

  716 type_declaration_no_options: "table" '<' $@60 table_type_pair '>' $@61

  717 $@62: %empty

  718 $@63: %empty

  719 type_declaration_no_options: "iterator" '<' $@62 type_declaration '>' $@63
  720                            | "block"

  721 $@64: %empty

  722 $@65: %empty

  723 type_declaration_no_options: "block" '<' $@64 type_declaration '>' $@65

  724 $@66: %empty

  725 $@67: %empty

  726 type_declaration_no_options: "block" '<' $@66 optional_function_argument_list optional_function_type '>' $@67
  727                            | "function"

  728 $@68: %empty

  729 $@69: %empty

  730 type_declaration_no_options: "function" '<' $@68 type_declaration '>' $@69

  731 $@70: %empty

  732 $@71: %empty

  733 type_declaration_no_options: "function" '<' $@70 optional_function_argument_list optional_function_type '>' $@71
  734                            | "lambda"

  735 $@72: %empty

  736 $@73: %empty

  737 type_declaration_no_options: "lambda" '<' $@72 type_declaration '>' $@73

  738 $@74: %empty

  739 $@75: %empty

  740 type_declaration_no_options: "lambda" '<' $@74 optional_function_argument_list optional_function_type '>' $@75

  741 $@76: %empty

  742 $@77: %empty

  743 type_declaration_no_options: "tuple" '<' $@76 tuple_type_list '>' $@77

  744 $@78: %empty

  745 $@79: %empty

  746 type_declaration_no_options: "variant" '<' $@78 variant_type_list '>' $@79

  747 type_declaration: type_declaration_no_options
  748                 | type_declaration '|' type_declaration_no_options
  749                 | type_declaration '|' '#'

  750 $@80: %empty

  751 $@81: %empty

  752 $@82: %empty

  753 $@83: %empty

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@80 "name" $@81 '{' $@82 tuple_alias_type_list $@83 '}'

  755 $@84: %empty

  756 $@85: %empty

  757 $@86: %empty

  758 $@87: %empty

  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@84 "name" $@85 '{' $@86 variant_alias_type_list $@87 '}'

  760 $@88: %empty

  761 $@89: %empty

  762 $@90: %empty

  763 $@91: %empty

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@88 "name" $@89 '{' $@90 bitfield_alias_bits $@91 '}'

  765 make_decl: make_struct_decl
  766          | make_dim_decl
  767          | make_table_decl
  768          | array_comprehension
  769          | make_tuple_call

  770 make_struct_fields: "name" copy_or_move expr
  771                   | "name" ":=" expr
  772                   | make_struct_fields ',' "name" copy_or_move expr
  773                   | make_struct_fields ',' "name" ":=" expr
  774                   | "$f" '(' expr ')' copy_or_move expr
  775                   | "$f" '(' expr ')' ":=" expr
  776                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  778 make_struct_dim: make_struct_fields
  779                | make_struct_dim ';' make_struct_fields

  780 optional_block: %empty
  781               | "where" expr_block

  782 optional_trailing_semicolon_cur_cur: '}' '}'
  783                                    | ";}}"

  784 optional_trailing_semicolon_cur_sqr: '}' ']'
  785                                    | ";}]"

  786 optional_trailing_semicolon_sqr_sqr: ']' ']'
  787                                    | ";]]"

  788 optional_trailing_delim_sqr_sqr: ']' ']'
  789                                | ";]]"
  790                                | ",]]"

  791 optional_trailing_delim_cur_sqr: '}' ']'
  792                                | ";}]"
  793                                | ",}]"

  794 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  795                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  796                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  797                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  798                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  799                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  800 $@92: %empty

  801 $@93: %empty

  802 make_struct_decl: "struct" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

  803 $@94: %empty

  804 $@95: %empty

  805 make_struct_decl: "class" '<' $@94 type_declaration_no_options '>' $@95 '(' make_struct_dim ')'

  806 $@96: %empty

  807 $@97: %empty

  808 make_struct_decl: "variant" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

  809 $@98: %empty

  810 $@99: %empty

  811 make_struct_decl: "default" '<' $@98 type_declaration_no_options '>' $@99

  812 make_tuple: expr
  813           | expr "=>" expr
  814           | make_tuple ',' expr

  815 make_map_tuple: expr "=>" expr
  816               | expr

  817 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  818 $@100: %empty

  819 $@101: %empty

  820 make_tuple_call: "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' make_struct_dim ')'

  821 make_dim: make_tuple
  822         | make_dim ';' make_tuple

  823 make_dim_decl: '[' expr_list optional_comma ']'
  824              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  825              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  826              | "array" '(' expr_list optional_comma ')'

  827 $@102: %empty

  828 $@103: %empty

  829 make_dim_decl: "array" '<' $@102 type_declaration_no_options '>' $@103 '(' expr_list optional_comma ')'
  830              | "fixed_array" '(' expr_list optional_comma ')'

  831 $@104: %empty

  832 $@105: %empty

  833 make_dim_decl: "fixed_array" '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')'

  834 make_table: make_map_tuple
  835           | make_table ';' make_map_tuple

  836 expr_map_tuple_list: make_map_tuple
  837                    | expr_map_tuple_list ',' make_map_tuple

  838 make_table_decl: '{' expr_map_tuple_list optional_comma '}'
  839                | "{{" make_table optional_trailing_semicolon_cur_cur
  840                | "table" '(' expr_map_tuple_list optional_comma ')'
  841                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  842                | "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  843 array_comprehension_where: %empty
  844                          | ';' "where" expr

  845 optional_comma: %empty
  846               | ','

  847 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'
  848                    | "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  849                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'
  850                    | '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'
  851                    | "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 115 131 426
    '#' (35) 701 703 749
    '$' (36) 20 328 692 694
    '%' (37) 35 42 151 438
    '&' (38) 159 331 445 558 567 699 700 705
    '(' (40) 106 113 119 126 127 254 278 279 280 303 305 320 321 322 391 392 393 394 396 406 407 411 412 413 414 415 456 466 467 468 469 498 500 501 502 503 504 506 507 508 509 510 511 512 513 514 515 539 569 629 668 669 691 692 694 774 775 776 777 796 797 799 802 805 808 817 820 826 829 830 833 840 841 842
    ')' (41) 106 113 119 126 127 254 278 279 280 303 305 320 321 322 391 392 393 394 396 406 407 411 412 413 414 415 456 466 467 468 469 498 500 501 502 503 504 506 507 508 509 510 511 512 513 514 515 539 569 629 668 669 691 692 694 774 775 776 777 796 797 799 802 805 808 817 820 826 829 830 833 840 841 842
    '*' (42) 149 436 465
    '+' (43) 147 428 434
    ',' (44) 51 95 108 122 301 324 336 392 571 572 631 632 772 773 776 777 814 837 846
    '-' (45) 148 429 435 695 698 700 703
    '.' (46) 43 176 178 179 404 405 406 407 410 458 460 462 508 510 511
    '/' (47) 44 150 437
    ':' (58) 53 54 129 302 303 471 543 549 559 560 573 574 575 612 614
    ';' (59) 15 16 75 77 84 226 230 231 238 239 244 245 246 256 287 292 302 303 304 305 322 531 533 536 541 545 547 548 551 553 554 573 574 576 590 591 592 598 599 602 671 673 674 679 779 822 835 842 844 847 848 849 850 851
    '<' (60) 152 259 262 275 310 313 316 319 321 322 400 403 439 468 469 474 480 485 677 690 694 709 713 716 719 723 726 730 733 737 740 743 746 802 805 808 811 820 829 833 841 842
    '=' (61) 87 99 100 101 102 103 104 106 332 352 374 555 563 592 597
    '>' (62) 153 259 262 275 310 313 316 319 321 322 400 403 440 468 469 474 480 485 677 690 694 709 713 716 719 723 726 730 733 737 740 743 746 802 805 808 811 820 829 833 841 842
    '?' (63) 188 189 471 482 485 486 513 706
    '@' (64) 329 330 397 400 403 515
    '[' (91) 124 174 391 392 457 458 536 680 681 687 695 823 847
    ']' (93) 124 174 175 302 304 338 391 392 457 458 459 460 517 536 680 681 687 695 784 786 788 791 823 847 848 849
    '^' (94) 161 447
    '{' (123) 222 223 586 600 609 612 624 754 759 764 838 850
    '|' (124) 160 446 748 749
    '}' (125) 222 223 586 600 609 612 624 754 759 764 782 784 791 838 849 850 851
    '~' (126) 132 427
    error (256) 75 84 249 410
    "lexer error" (258)
    "struct" (259) 619 802
    "class" (260) 618 805
    "let" (261) 296
    "def" (262) 215 533 535
    "while" (263) 81 84
    "if" (264) 62 77
    "static_if" (265) 63
    "else" (266) 60 66
    "for" (267) 79 847 848 849 850 851
    "recover" (268) 295
    "true" (269) 92 103 422
    "false" (270) 93 104 423
    "new" (271) 277 278 279 280 281
    "typeinfo" (272) 320 321 322
    "type" (273) 97 319 474 480 485 690
    "in" (274) 79 98 847 848 849 850 851
    "is" (275) 184 186 474 475 476 514
    "as" (276) 46 185 187 188 189 477 480 481 482 485 486 512 513
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 713 826 829
    "return" (280) 284 285 286 288 289
    "null" (281) 416
    "break" (282) 282
    "try" (283) 295
    "options" (284) 36
    "table" (285) 716 840 841 842
    "expect" (286) 49
    "const" (287) 522 697 698 704
    "require" (288) 37 110
    "operator" (289) 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189
    "enum" (290) 609 612
    "finally" (291) 223
    "delete" (292) 182 271 272
    "deref" (293) 466
    "typedef" (294) 600 602
    "typedecl" (295) 691
    "with" (296) 85
    "aka" (297) 570 572 630 632
    "assume" (298) 87
    "cast" (299) 310
    "override" (300) 519
    "abstract" (301) 533
    "upcast" (302) 313
    "iterator" (303) 719
    "var" (304) 297 538
    "addr" (305) 467
    "continue" (306) 283
    "where" (307) 781 844
    "pass" (308) 246
    "reinterpret" (309) 316
    "module" (310) 22
    "public" (311) 18 48 218 524 585 595 605 622
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 702
    "explicit" (315) 272 696
    "shared" (316) 582
    "private" (317) 19 111 217 525 584 594 604 621
    "smart_ptr" (318) 709
    "unsafe" (319) 80 498
    "inscope" (320) 298
    "static" (321) 527
    "fixed_array" (322) 830 833
    "default" (323) 811
    "bool" (324) 190 633
    "void" (325) 653
    "string" (326) 191 634
    "auto" (327) 667 668
    "int" (328) 192 635 660
    "int2" (329) 193 639
    "int3" (330) 194 640
    "int4" (331) 195 641
    "uint" (332) 196 642 663
    "bitfield" (333) 659 677 764
    "uint2" (334) 197 646
    "uint3" (335) 198 647
    "uint4" (336) 199 648
    "float" (337) 200 649
    "float2" (338) 201 650
    "float3" (339) 202 651
    "float4" (340) 203 652
    "range" (341) 204 654
    "urange" (342) 205 655
    "range64" (343) 206 656
    "urange64" (344) 207 657
    "block" (345) 720 723 726
    "int64" (346) 208 638
    "uint64" (347) 209 645
    "double" (348) 210 658
    "function" (349) 727 730 733
    "lambda" (350) 734 737 740
    "int8" (351) 211 636 661
    "uint8" (352) 212 643 664
    "int16" (353) 213 637 662
    "uint16" (354) 214 644 665
    "tuple" (355) 743 754 817 820
    "variant" (356) 746 759 808
    "generator" (357) 468 469
    "yield" (358) 290 291 293 294
    "sealed" (359) 520 616
    "+=" (360) 133 361 382
    "-=" (361) 134 362 383
    "/=" (362) 136 364 385
    "*=" (363) 135 363 384
    "%=" (364) 137 365 386
    "&=" (365) 138 355 376
    "|=" (366) 139 356 377
    "^=" (367) 140 357 378
    "<<" (368) 166 430
    ">>" (369) 167 431
    "++" (370) 162 164 452 454
    "--" (371) 163 165 453 455
    "<=" (372) 157 443
    "<<=" (373) 168 366 387
    ">>=" (374) 169 367 388
    ">=" (375) 158 444
    "==" (376) 155 441 704 705
    "!=" (377) 156 442
    "->" (378) 393 394
    "<-" (379) 286 289 291 294 327 333 353 375 556 564
    "??" (380) 183 470 710
    "?." (381) 177 180 461 462 509 511
    "?[" (382) 175 459 460
    "<|" (383) 494
    " <|" (384) 263
    "$ <|" (385) 266 372
    "@ <|" (386) 264 370
    "@@ <|" (387) 265 371
    "|>" (388) 120 495 496
    ":=" (389) 179 181 334 354 565 771 773 775 777
    "<<<" (390) 170 432
    ">>>" (391) 171 433
    "<<<=" (392) 172 368 389
    ">>>=" (393) 173 369 390
    "=>" (394) 326 327 813 815
    "::" (395) 269 270
    "&&" (396) 116 144 448
    "||" (397) 117 145 449
    "^^" (398) 118 146 450
    "&&=" (399) 141 358 379
    "||=" (400) 142 359 380
    "^^=" (401) 143 360 381
    ".." (402) 154 451
    "$$" (403) 500
    "$i" (404) 396 501 569 629
    "$v" (405) 502
    "$b" (406) 503
    "$a" (407) 504 539
    "$t" (408) 669
    "$c" (409) 506 507 515
    "$f" (410) 508 509 510 511 512 513 514 774 775 776 777
    "..." (411) 505
    "[[" (412) 302 304 338 517 794 795 796 797 824 848
    "[{" (413) 798 799 825 849
    "{{" (414) 839 851
    "integer constant" <i> (415) 52 53 54 55 90 101 344
    "long integer constant" <i64> (416) 346
    "unsigned integer constant" <ui> (417) 345
    "unsigned long integer constant" <ui64> (418) 347
    "unsigned int8 constant" <ui> (419) 348
    "floating point constant" <fd> (420) 91 102 349
    "double constant" <d> (421) 350
    "name" <s> (422) 21 38 46 87 89 96 100 130 178 179 180 186 187 189 268 269 270 300 301 321 322 331 332 333 334 393 394 404 405 406 407 461 462 476 477 482 497 543 549 568 570 571 572 591 592 597 606 617 628 630 631 632 668 670 671 674 754 759 764 770 771 772 773
    "keyword" <s> (423) 39 250 259
    "type function" <s> (424) 40 262
    "start of the string" (425) 27 31
    STRING_CHARACTER <ch> (426) 23 25 32 33
    STRING_CHARACTER_ESC (427) 24 26
    "end of the string" (428) 27 31
    "{" (429) 30
    "}" (430) 30
    "end of failed eader macro" (431)
    ";}}" (432) 783
    ";}]" (433) 785 792
    ";]]" (434) 787 789
    ",]]" (435) 790
    ",}]" (436) 793
    UNARY_MINUS (437)
    UNARY_PLUS (438)
    PRE_INC (439)
    PRE_DEC (440)
    POST_INC (441)
    POST_DEC (442)
    DEREF (443)


Nonterminals, with rules where they appear

    $accept (216)
        on left: 0
    program (217)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (218)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (219)
        on left: 17 18 19
        on right: 22
    module_name <s> (220)
        on left: 20 21
        on right: 22
    module_declaration (221)
        on left: 22
        on right: 2
    character_sequence <s> (222)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (223)
        on left: 27
        on right: 88 99
    string_builder_body <pExpression> (224)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (225)
        on left: 31
        on right: 420
    reader_character_sequence (226)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (227)
        on left: 35
        on right: 16 419
    $@1 (228)
        on left: 34
        on right: 35
    options_declaration (229)
        on left: 36
        on right: 9
    require_declaration (230)
        on left: 37
        on right: 8
    keyword_or_name <s> (231)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (232)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (233)
        on left: 45 46
        on right: 37
    is_public_module <b> (234)
        on left: 47 48
        on right: 45 46
    expect_declaration (235)
        on left: 49
        on right: 7
    expect_list (236)
        on left: 50 51
        on right: 49 51
    expect_error (237)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (238)
        on left: 54
        on right: 244
    expression_goto <pExpression> (239)
        on left: 55 56
        on right: 245
    elif_or_static_elif <b> (240)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (241)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (242)
        on left: 62 63
        on right: 72 75
    expression_else_one_liner <pExpression> (243)
        on left: 64 66
        on right: 77
    $@2 (244)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (245)
        on left: 67 68 69 70 71
        on right: 66 77
    expression_if_then_else <pExpression> (246)
        on left: 72 75 77
        on right: 242
    $@3 (247)
        on left: 73
        on right: 75
    $@4 (248)
        on left: 74
        on right: 75
    $@5 (249)
        on left: 76
        on right: 77
    expression_for_loop <pExpression> (250)
        on left: 79
        on right: 237
    $@6 (251)
        on left: 78
        on right: 79
    expression_unsafe <pExpression> (252)
        on left: 80
        on right: 234
    expression_while_loop <pExpression> (253)
        on left: 81 84
        on right: 233
    $@7 (254)
        on left: 82
        on right: 84
    $@8 (255)
        on left: 83
        on right: 84
    expression_with <pExpression> (256)
        on left: 85
        on right: 235
    expression_with_alias <pExpression> (257)
        on left: 87
        on right: 236
    $@9 (258)
        on left: 86
        on right: 87
    annotation_argument_value <aa> (259)
        on left: 88 89 90 91 92 93
        on right: 94 95
    annotation_argument_value_list <aaList> (260)
        on left: 94 95
        on right: 95 106
    annotation_argument_name <s> (261)
        on left: 96 97 98
        on right: 99 100 101 102 103 104 105 106
    annotation_argument <aa> (262)
        on left: 99 100 101 102 103 104 105 106
        on right: 107 108
    annotation_argument_list <aaList> (263)
        on left: 107 108
        on right: 36 108 113 517
    annotation_declaration_name <s> (264)
        on left: 109 110 111
        on right: 112 113
    annotation_declaration_basic <fa> (265)
        on left: 112 113
        on right: 114
    annotation_declaration <fa> (266)
        on left: 114 115 116 117 118 119 120
        on right: 115 116 117 118 119 120 121 122
    annotation_list <faList> (267)
        on left: 121 122
        on right: 122 124 536
    optional_annotation_list <faList> (268)
        on left: 123 124
        on right: 215 340 341 343 533 535 609 612 627
    optional_function_argument_list <pVarDeclList> (269)
        on left: 125 126 127
        on right: 219 340 341 343 403 726 733 740
    optional_function_type <pTypeDecl> (270)
        on left: 128 129
        on right: 219 340 341 343 403 726 733 740
    function_name <s> (271)
        on left: 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214
        on right: 219
    global_function_declaration (272)
        on left: 215
        on right: 6
    optional_public_or_private_function <b> (273)
        on left: 216 217 218
        on right: 221
    function_declaration_header <pFuncDecl> (274)
        on left: 219
        on right: 221 533 535
    function_declaration <pFuncDecl> (275)
        on left: 221
        on right: 215
    $@10 (276)
        on left: 220
        on right: 221
    expression_block <pExpression> (277)
        on left: 222 223
        on right: 60 61 72 79 80 81 85 221 250 295 325 339 343 535
    expr_call_pipe <pExpression> (278)
        on left: 224 225
        on right: 267 373
    expression_any <pExpression> (279)
        on left: 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246
        on right: 248
    expressions <pExpression> (280)
        on left: 247 248 249
        on right: 222 223 248 249
    expr_keyword <pExpression> (281)
        on left: 250
        on right: 228
    optional_expr_list <pExpression> (282)
        on left: 251 252
        on right: 254 692 694
    optional_expr_list_in_braces <pExpression> (283)
        on left: 253 254
        on right: 262
    type_declaration_no_options_list <pTypeDeclList> (284)
        on left: 255 256
        on right: 256 259 262 694
    expression_keyword <pExpression> (285)
        on left: 259 262
        on right: 225 499
    $@11 (286)
        on left: 257
        on right: 259
    $@12 (287)
        on left: 258
        on right: 259
    $@13 (288)
        on left: 260
        on right: 262
    $@14 (289)
        on left: 261
        on right: 262
    expr_pipe <pExpression> (290)
        on left: 263 264 265 266 267
        on right: 227 288 289 293 294 562 575 577
    name_in_namespace <s> (291)
        on left: 268 269 270
        on right: 35 109 320 321 322 391 392 395 411 412 413 417 497 614 666 692 694
    expression_delete <pExpression> (292)
        on left: 271 272
        on right: 231
    new_type_declaration <pTypeDecl> (293)
        on left: 275 276
        on right: 277 278 279 280
    $@15 (294)
        on left: 273
        on right: 275
    $@16 (295)
        on left: 274
        on right: 275
    expr_new <pExpression> (296)
        on left: 277 278 279 280 281
        on right: 490
    expression_break <pExpression> (297)
        on left: 282
        on right: 70 238
    expression_continue <pExpression> (298)
        on left: 283
        on right: 71 239
    expression_return_no_pipe <pExpression> (299)
        on left: 284 285 286
        on right: 68 287
    expression_return <pExpression> (300)
        on left: 287 288 289
        on right: 240
    expression_yield_no_pipe <pExpression> (301)
        on left: 290 291
        on right: 69 292
    expression_yield <pExpression> (302)
        on left: 292 293 294
        on right: 241
    expression_try_catch <pExpression> (303)
        on left: 295
        on right: 243
    kwd_let <b> (304)
        on left: 296 297
        on right: 306 307 586 588
    optional_in_scope <b> (305)
        on left: 298 299
        on right: 306 307
    tuple_expansion <pNameList> (306)
        on left: 300 301
        on right: 301 302 303 304 305
    tuple_expansion_variable_declaration <pVarDecl> (307)
        on left: 302 303 304 305
        on right: 307
    expression_let <pExpression> (308)
        on left: 306 307
        on right: 232
    expr_cast <pExpression> (309)
        on left: 310 313 316
        on right: 489
    $@17 (310)
        on left: 308
        on right: 310
    $@18 (311)
        on left: 309
        on right: 310
    $@19 (312)
        on left: 311
        on right: 313
    $@20 (313)
        on left: 312
        on right: 313
    $@21 (314)
        on left: 314
        on right: 316
    $@22 (315)
        on left: 315
        on right: 316
    expr_type_decl <pExpression> (316)
        on left: 319
        on right: 488
    $@23 (317)
        on left: 317
        on right: 319
    $@24 (318)
        on left: 318
        on right: 319
    expr_type_info <pExpression> (319)
        on left: 320 321 322
        on right: 487
    expr_list <pExpression> (320)
        on left: 323 324
        on right: 79 252 279 285 286 324 392 394 407 413 415 456 507 817 823 826 829 830 833 847 848 849 850 851
    block_or_simple_block <pExpression> (321)
        on left: 325 326 327
        on right: 340 341
    block_or_lambda <i> (322)
        on left: 328 329 330
        on right: 340 341 343
    capture_entry <pCapt> (323)
        on left: 331 332 333 334
        on right: 335 336
    capture_list <pCaptList> (324)
        on left: 335 336
        on right: 336 338
    optional_capture_list <pCaptList> (325)
        on left: 337 338
        on right: 340 341 343 468 469
    expr_block <pExpression> (326)
        on left: 339 340
        on right: 263 264 265 266 370 371 372 781
    expr_full_block <pExpression> (327)
        on left: 341
        on right: 493
    expr_full_block_assumed_piped <pExpression> (328)
        on left: 343
        on right: 224 225
    $@25 (329)
        on left: 342
        on right: 343
    expr_numeric_const <pExpression> (330)
        on left: 344 345 346 347 348 349 350
        on right: 418
    expr_assign <pExpression> (331)
        on left: 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369
        on right: 230 263
    expr_assign_pipe_right <pExpression> (332)
        on left: 370 371 372 373
        on right: 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390
    expr_assign_pipe <pExpression> (333)
        on left: 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390
        on right: 229
    expr_named_call <pExpression> (334)
        on left: 391 392
        on right: 492
    expr_method_call <pExpression> (335)
        on left: 393 394
        on right: 491
    func_addr_name <pExpression> (336)
        on left: 395 396
        on right: 397 400 403
    func_addr_expr <pExpression> (337)
        on left: 397 400 403
        on right: 463
    $@26 (338)
        on left: 398
        on right: 400
    $@27 (339)
        on left: 399
        on right: 400
    $@28 (340)
        on left: 401
        on right: 403
    $@29 (341)
        on left: 402
        on right: 403
    expr_field <pExpression> (342)
        on left: 404 405 406 407 410
        on right: 424
    $@30 (343)
        on left: 408
        on right: 410
    $@31 (344)
        on left: 409
        on right: 410
    expr_call <pExpression> (345)
        on left: 411 412 413 414 415
        on right: 464
    expr <pExpression> (346)
        on left: 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 474 475 476 477 480 481 482 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499
        on right: 30 56 61 67 72 75 77 81 84 85 87 224 250 259 271 272 290 291 302 303 304 305 310 313 316 320 321 322 323 324 326 327 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 393 394 396 404 405 406 407 410 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 457 458 459 460 461 462 465 466 467 469 470 471 474 475 476 477 480 481 482 485 486 494 495 496 498 500 501 502 503 504 506 507 508 509 510 511 512 513 514 515 539 560 561 569 574 576 592 629 669 680 681 691 770 771 772 773 774 775 776 777 812 813 814 815 816 844 847 848 849
    $@32 (347)
        on left: 472
        on right: 474
    $@33 (348)
        on left: 473
        on right: 474
    $@34 (349)
        on left: 478
        on right: 480
    $@35 (350)
        on left: 479
        on right: 480
    $@36 (351)
        on left: 483
        on right: 485
    $@37 (352)
        on left: 484
        on right: 485
    expr_mtag <pExpression> (353)
        on left: 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515
        on right: 425
    optional_field_annotation <aaList> (354)
        on left: 516 517
        on right: 528 537 538 580 588
    optional_override <i> (355)
        on left: 518 519 520
        on right: 528 535
    optional_constant <b> (356)
        on left: 521 522
        on right: 533 535
    optional_public_or_private_member_variable <b> (357)
        on left: 523 524 525
        on right: 528 533 535
    optional_static_member_variable <b> (358)
        on left: 526 527
        on right: 528 535
    structure_variable_declaration <pVarDecl> (359)
        on left: 528
        on right: 531
    struct_variable_declaration_list <pVarDeclList> (360)
        on left: 529 531 533 535 536
        on right: 531 533 535 536 624
    $@38 (361)
        on left: 530
        on right: 531
    $@39 (362)
        on left: 532
        on right: 533
    $@40 (363)
        on left: 534
        on right: 535
    function_argument_declaration <pVarDecl> (364)
        on left: 537 538 539
        on right: 540 541
    function_argument_list <pVarDeclList> (365)
        on left: 540 541
        on right: 127 541
    tuple_type <pVarDecl> (366)
        on left: 542 543
        on right: 544 545 548
    tuple_type_list <pVarDeclList> (367)
        on left: 544 545
        on right: 545 743
    tuple_alias_type_list <pVarDeclList> (368)
        on left: 546 547 548
        on right: 547 548 754
    variant_type <pVarDecl> (369)
        on left: 549
        on right: 550 551 554
    variant_type_list <pVarDeclList> (370)
        on left: 550 551
        on right: 551 746
    variant_alias_type_list <pVarDeclList> (371)
        on left: 552 553 554
        on right: 553 554 759
    copy_or_move <b> (372)
        on left: 555 556
        on right: 560 561 562 770 772 774 776
    variable_declaration <pVarDecl> (373)
        on left: 557 558 559 560 561 562
        on right: 528 537 538
    copy_or_move_or_clone <i> (374)
        on left: 563 564 565
        on right: 302 303 304 305 574 575 576 577
    optional_ref <b> (375)
        on left: 566 567
        on right: 304 305 576 577
    let_variable_name_with_pos_list <pNameWithPosList> (376)
        on left: 568 569 570 571 572
        on right: 571 572 573 574 575 576 577
    let_variable_declaration <pVarDecl> (377)
        on left: 573 574 575 576 577
        on right: 306 580 588
    global_variable_declaration_list <pVarDeclList> (378)
        on left: 578 580
        on right: 580 586
    $@41 (379)
        on left: 579
        on right: 580
    optional_shared <b> (380)
        on left: 581 582
        on right: 22 586 588
    optional_public_or_private_variable <b> (381)
        on left: 583 584 585
        on right: 586 588
    global_let (382)
        on left: 586 588
        on right: 5
    $@42 (383)
        on left: 587
        on right: 588
    enum_list <pEnum> (384)
        on left: 589 590 591 592
        on right: 590 591 592 609 612
    optional_public_or_private_alias <b> (385)
        on left: 593 594 595
        on right: 597 754 759 764
    single_alias (386)
        on left: 597
        on right: 598 599 602
    $@43 (387)
        on left: 596
        on right: 597
    alias_list (388)
        on left: 598 599
        on right: 599 600
    alias_declaration (389)
        on left: 600 602
        on right: 10
    $@44 (390)
        on left: 601
        on right: 602
    optional_public_or_private_enum <b> (391)
        on left: 603 604 605
        on right: 609 612
    enum_name <pEnum> (392)
        on left: 606
        on right: 609 612
    enum_declaration (393)
        on left: 609 612
        on right: 4
    $@45 (394)
        on left: 607
        on right: 609
    $@46 (395)
        on left: 608
        on right: 609
    $@47 (396)
        on left: 610
        on right: 612
    $@48 (397)
        on left: 611
        on right: 612
    optional_structure_parent <s> (398)
        on left: 613 614
        on right: 617
    optional_sealed <b> (399)
        on left: 615 616
        on right: 617
    structure_name <pStructure> (400)
        on left: 617
        on right: 627
    class_or_struct <b> (401)
        on left: 618 619
        on right: 627
    optional_public_or_private_structure <b> (402)
        on left: 620 621 622
        on right: 627
    optional_struct_variable_declaration_list <pVarDeclList> (403)
        on left: 623 624
        on right: 627
    structure_declaration (404)
        on left: 627
        on right: 3
    $@49 (405)
        on left: 625
        on right: 627
    $@50 (406)
        on left: 626
        on right: 627
    variable_name_with_pos_list <pNameWithPosList> (407)
        on left: 628 629 630 631 632
        on right: 79 557 558 559 560 561 562 631 632 847 848 849 850 851
    basic_type_declaration <type> (408)
        on left: 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659
        on right: 414 415 475 481 486 496 682
    enum_basic_type_declaration <type> (409)
        on left: 660 661 662 663 664 665
        on right: 612
    structure_type_declaration <pTypeDecl> (410)
        on left: 666
        on right: 276 685
    auto_type_declaration <pTypeDecl> (411)
        on left: 667 668 669
        on right: 683
    bitfield_bits <pNameList> (412)
        on left: 670 671
        on right: 671 677
    bitfield_alias_bits <pNameList> (413)
        on left: 672 673 674
        on right: 673 674 764
    bitfield_type_declaration <pTypeDecl> (414)
        on left: 677
        on right: 684
    $@51 (415)
        on left: 675
        on right: 677
    $@52 (416)
        on left: 676
        on right: 677
    table_type_pair <aTypePair> (417)
        on left: 678 679
        on right: 716
    dim_list <pTypeDecl> (418)
        on left: 680 681
        on right: 681 686
    type_declaration_no_options <pTypeDecl> (419)
        on left: 682 683 684 685 686 687 690 691 692 694 695 696 697 698 699 700 701 702 703 704 705 706 709 710 713 716 719 720 723 726 727 730 733 734 737 740 743 746
        on right: 302 303 310 313 316 400 468 469 474 573 574 575 686 687 695 696 697 698 699 700 701 702 703 704 705 706 710 747 748 794 795 796 797 798 799 802 805 808 811 820 824 825 829 833 841 842
    $@53 (420)
        on left: 688
        on right: 690
    $@54 (421)
        on left: 689
        on right: 690
    $@55 (422)
        on left: 693
        on right: 694
    $@56 (423)
        on left: 707
        on right: 709
    $@57 (424)
        on left: 708
        on right: 709
    $@58 (425)
        on left: 711
        on right: 713
    $@59 (426)
        on left: 712
        on right: 713
    $@60 (427)
        on left: 714
        on right: 716
    $@61 (428)
        on left: 715
        on right: 716
    $@62 (429)
        on left: 717
        on right: 719
    $@63 (430)
        on left: 718
        on right: 719
    $@64 (431)
        on left: 721
        on right: 723
    $@65 (432)
        on left: 722
        on right: 723
    $@66 (433)
        on left: 724
        on right: 726
    $@67 (434)
        on left: 725
        on right: 726
    $@68 (435)
        on left: 728
        on right: 730
    $@69 (436)
        on left: 729
        on right: 730
    $@70 (437)
        on left: 731
        on right: 733
    $@71 (438)
        on left: 732
        on right: 733
    $@72 (439)
        on left: 735
        on right: 737
    $@73 (440)
        on left: 736
        on right: 737
    $@74 (441)
        on left: 738
        on right: 740
    $@75 (442)
        on left: 739
        on right: 740
    $@76 (443)
        on left: 741
        on right: 743
    $@77 (444)
        on left: 742
        on right: 743
    $@78 (445)
        on left: 744
        on right: 746
    $@79 (446)
        on left: 745
        on right: 746
    type_declaration <pTypeDecl> (447)
        on left: 747 748 749
        on right: 129 255 256 275 319 480 485 542 543 549 559 560 597 678 679 690 709 713 719 723 730 737 748 749
    tuple_alias_declaration (448)
        on left: 754
        on right: 12
    $@80 (449)
        on left: 750
        on right: 754
    $@81 (450)
        on left: 751
        on right: 754
    $@82 (451)
        on left: 752
        on right: 754
    $@83 (452)
        on left: 753
        on right: 754
    variant_alias_declaration (453)
        on left: 759
        on right: 11
    $@84 (454)
        on left: 755
        on right: 759
    $@85 (455)
        on left: 756
        on right: 759
    $@86 (456)
        on left: 757
        on right: 759
    $@87 (457)
        on left: 758
        on right: 759
    bitfield_alias_declaration (458)
        on left: 764
        on right: 13
    $@88 (459)
        on left: 760
        on right: 764
    $@89 (460)
        on left: 761
        on right: 764
    $@90 (461)
        on left: 762
        on right: 764
    $@91 (462)
        on left: 763
        on right: 764
    make_decl <pExpression> (463)
        on left: 765 766 767 768 769
        on right: 281 421
    make_struct_fields <pMakeStruct> (464)
        on left: 770 771 772 773 774 775 776 777
        on right: 391 392 772 773 776 777 778 779
    make_struct_dim <pExpression> (465)
        on left: 778 779
        on right: 280 412 779 794 797 798 799 802 805 808 820
    optional_block <pExpression> (466)
        on left: 780 781
        on right: 794 795 796 797 798 799
    optional_trailing_semicolon_cur_cur (467)
        on left: 782 783
        on right: 839
    optional_trailing_semicolon_cur_sqr (468)
        on left: 784 785
        on right: 825
    optional_trailing_semicolon_sqr_sqr (469)
        on left: 786 787
        on right: 824
    optional_trailing_delim_sqr_sqr (470)
        on left: 788 789 790
        on right: 794 795 796 797
    optional_trailing_delim_cur_sqr (471)
        on left: 791 792 793
        on right: 798 799
    make_struct_decl <pExpression> (472)
        on left: 794 795 796 797 798 799 802 805 808 811
        on right: 765
    $@92 (473)
        on left: 800
        on right: 802
    $@93 (474)
        on left: 801
        on right: 802
    $@94 (475)
        on left: 803
        on right: 805
    $@95 (476)
        on left: 804
        on right: 805
    $@96 (477)
        on left: 806
        on right: 808
    $@97 (478)
        on left: 807
        on right: 808
    $@98 (479)
        on left: 809
        on right: 811
    $@99 (480)
        on left: 810
        on right: 811
    make_tuple <pExpression> (481)
        on left: 812 813 814
        on right: 814 821 822
    make_map_tuple <pExpression> (482)
        on left: 815 816
        on right: 834 835 836 837 850 851
    make_tuple_call <pExpression> (483)
        on left: 817 820
        on right: 769
    $@100 (484)
        on left: 818
        on right: 820
    $@101 (485)
        on left: 819
        on right: 820
    make_dim <pExpression> (486)
        on left: 821 822
        on right: 822 824 825
    make_dim_decl <pExpression> (487)
        on left: 823 824 825 826 829 830 833
        on right: 766
    $@102 (488)
        on left: 827
        on right: 829
    $@103 (489)
        on left: 828
        on right: 829
    $@104 (490)
        on left: 831
        on right: 833
    $@105 (491)
        on left: 832
        on right: 833
    make_table <pExpression> (492)
        on left: 834 835
        on right: 835 839
    expr_map_tuple_list <pExpression> (493)
        on left: 836 837
        on right: 837 838 840 841 842
    make_table_decl <pExpression> (494)
        on left: 838 839 840 841 842
        on right: 767
    array_comprehension_where <pExpression> (495)
        on left: 843 844
        on right: 847 848 849 850 851
    optional_comma <b> (496)
        on left: 845 846
        on right: 456 817 823 826 829 830 833 838 840 841 842
    array_comprehension <pExpression> (497)
        on left: 847 848 849 850 851
        on right: 768


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "tuple"     shift, and go to state 11
    "variant"   shift, and go to state 12
    '%'         shift, and go to state 13
    '['         shift, and go to state 14
    ';'         shift, and go to state 15

    $default  reduce using rule 123 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  296 kwd_let: "let" .

    $default  reduce using rule 296 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  600 alias_declaration: "typedef" . '{' alias_list '}'
  602                  | "typedef" . $@44 single_alias ';'

    '{'  shift, and go to state 48

    $default  reduce using rule 601 ($@44)

    $@44  go to state 49


State 8

  297 kwd_let: "var" .

    $default  reduce using rule 297 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  764 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@88 "name" $@89 '{' $@90 bitfield_alias_bits $@91 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 593 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  754 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@80 "name" $@81 '{' $@82 tuple_alias_type_list $@83 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 593 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  759 variant_alias_declaration: "variant" . optional_public_or_private_alias $@84 "name" $@85 '{' $@86 variant_alias_type_list $@87 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 593 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 14

  124 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 15

   15 program: program ';' .

    $default  reduce using rule 15 (program)


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . ';'

    ';'  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  215 global_function_declaration: optional_annotation_list . "def" function_declaration
  609 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' $@45 enum_list $@46 '}'
  612                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@47 enum_list $@48 '}'
  627 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@49 structure_name $@50 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  586 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  588           | kwd_let . optional_shared optional_public_or_private_variable $@42 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 581 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   97 annotation_argument_name: "type" .

    $default  reduce using rule 97 (annotation_argument_name)


State 33

   98 annotation_argument_name: "in" .

    $default  reduce using rule 98 (annotation_argument_name)


State 34

   96 annotation_argument_name: "name" .

    $default  reduce using rule 96 (annotation_argument_name)


State 35

   99 annotation_argument: annotation_argument_name . '=' string_constant
  100                    | annotation_argument_name . '=' "name"
  101                    | annotation_argument_name . '=' "integer constant"
  102                    | annotation_argument_name . '=' "floating point constant"
  103                    | annotation_argument_name . '=' "true"
  104                    | annotation_argument_name . '=' "false"
  105                    | annotation_argument_name .
  106                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 105 (annotation_argument)


State 36

  107 annotation_argument_list: annotation_argument .

    $default  reduce using rule 107 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  108 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  600 alias_declaration: "typedef" '{' . alias_list '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 593 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  602 alias_declaration: "typedef" $@44 . single_alias ';'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 593 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 581 (optional_shared)

    optional_shared  go to state 93


State 53

  595 optional_public_or_private_alias: "public" .

    $default  reduce using rule 595 (optional_public_or_private_alias)


State 54

  594 optional_public_or_private_alias: "private" .

    $default  reduce using rule 594 (optional_public_or_private_alias)


State 55

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@88 "name" $@89 '{' $@90 bitfield_alias_bits $@91 '}'

    $default  reduce using rule 760 ($@88)

    $@88  go to state 94


State 56

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@80 "name" $@81 '{' $@82 tuple_alias_type_list $@83 '}'

    $default  reduce using rule 750 ($@80)

    $@80  go to state 95


State 57

  759 variant_alias_declaration: "variant" optional_public_or_private_alias . $@84 "name" $@85 '{' $@86 variant_alias_type_list $@87 '}'

    $default  reduce using rule 755 ($@84)

    $@84  go to state 96


State 58

  270 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  268 name_in_namespace: "name" .
  269                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 268 (name_in_namespace)]
    $default  reduce using rule 268 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 99


State 61

  110 annotation_declaration_name: "require" .

    $default  reduce using rule 110 (annotation_declaration_name)


State 62

  111 annotation_declaration_name: "private" .

    $default  reduce using rule 111 (annotation_declaration_name)


State 63

  120 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  115 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  119 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  112 annotation_declaration_basic: annotation_declaration_name .
  113                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 112 (annotation_declaration_basic)


State 67

  114 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 114 (annotation_declaration)


State 68

  116 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  117                       | annotation_declaration . "||" annotation_declaration
  118                       | annotation_declaration . "^^" annotation_declaration
  121 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 121 (annotation_list)


State 69

  122 annotation_list: annotation_list . ',' annotation_declaration
  124 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  109 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 109 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader ';' .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  619 class_or_struct: "struct" .

    $default  reduce using rule 619 (class_or_struct)


State 73

  618 class_or_struct: "class" .

    $default  reduce using rule 618 (class_or_struct)


State 74

  215 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 216 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  609 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' $@45 enum_list $@46 '}'
  612                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@47 enum_list $@48 '}'

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 603 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  627 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@49 structure_name $@50 optional_struct_variable_declaration_list

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 620 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  582 optional_shared: "shared" .

    $default  reduce using rule 582 (optional_shared)


State 78

  586 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  588           | kwd_let optional_shared . optional_public_or_private_variable $@42 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 583 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   99 annotation_argument: annotation_argument_name '=' . string_constant
  100                    | annotation_argument_name '=' . "name"
  101                    | annotation_argument_name '=' . "integer constant"
  102                    | annotation_argument_name '=' . "floating point constant"
  103                    | annotation_argument_name '=' . "true"
  104                    | annotation_argument_name '=' . "false"
  106                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  108 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  597 single_alias: optional_public_or_private_alias . "name" $@43 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  598 alias_list: single_alias . ';'

    ';'  shift, and go to state 137


State 91

  599 alias_list: alias_list . single_alias ';'
  600 alias_declaration: "typedef" '{' alias_list . '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54
    '}'        shift, and go to state 138

    $default  reduce using rule 593 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  602 alias_declaration: "typedef" $@44 single_alias . ';'

    ';'  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@88 . "name" $@89 '{' $@90 bitfield_alias_bits $@91 '}'

    "name"  shift, and go to state 144


State 95

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@80 . "name" $@81 '{' $@82 tuple_alias_type_list $@83 '}'

    "name"  shift, and go to state 145


State 96

  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@84 . "name" $@85 '{' $@86 variant_alias_type_list $@87 '}'

    "name"  shift, and go to state 146


State 97

  270 name_in_namespace: "::" "name" .

    $default  reduce using rule 270 (name_in_namespace)


State 98

  269 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  116 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  117                       | annotation_declaration . "||" annotation_declaration
  118                       | annotation_declaration . "^^" annotation_declaration
  120                       | "|>" annotation_declaration .

    $default  reduce using rule 120 (annotation_declaration)


State 101

  115 annotation_declaration: '!' annotation_declaration .
  116                       | annotation_declaration . "&&" annotation_declaration
  117                       | annotation_declaration . "||" annotation_declaration
  118                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 115 (annotation_declaration)


State 102

  116 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  117                       | annotation_declaration . "||" annotation_declaration
  118                       | annotation_declaration . "^^" annotation_declaration
  119                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  113 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  116 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  117 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  118 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  122 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  124 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 124 (optional_annotation_list)


State 109

  218 optional_public_or_private_function: "public" .

    $default  reduce using rule 218 (optional_public_or_private_function)


State 110

  217 optional_public_or_private_function: "private" .

    $default  reduce using rule 217 (optional_public_or_private_function)


State 111

  221 function_declaration: optional_public_or_private_function . $@10 function_declaration_header expression_block

    $default  reduce using rule 220 ($@10)

    $@10  go to state 156


State 112

  215 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 215 (global_function_declaration)


State 113

  605 optional_public_or_private_enum: "public" .

    $default  reduce using rule 605 (optional_public_or_private_enum)


State 114

  604 optional_public_or_private_enum: "private" .

    $default  reduce using rule 604 (optional_public_or_private_enum)


State 115

  609 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' $@45 enum_list $@46 '}'
  612                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' $@47 enum_list $@48 '}'

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  622 optional_public_or_private_structure: "public" .

    $default  reduce using rule 622 (optional_public_or_private_structure)


State 117

  621 optional_public_or_private_structure: "private" .

    $default  reduce using rule 621 (optional_public_or_private_structure)


State 118

  627 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@49 structure_name $@50 optional_struct_variable_declaration_list

    $default  reduce using rule 625 ($@49)

    $@49  go to state 159


State 119

  585 optional_public_or_private_variable: "public" .

    $default  reduce using rule 585 (optional_public_or_private_variable)


State 120

  584 optional_public_or_private_variable: "private" .

    $default  reduce using rule 584 (optional_public_or_private_variable)


State 121

  586 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  588           | kwd_let optional_shared optional_public_or_private_variable . $@42 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 160

    $default  reduce using rule 587 ($@42)

    $@42  go to state 161


State 122

  103 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 103 (annotation_argument)


State 123

  104 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 104 (annotation_argument)


State 124

  101 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 101 (annotation_argument)


State 125

  102 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 102 (annotation_argument)


State 126

  100 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 100 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 128

  106 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 129

   99 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 99 (annotation_argument)


State 130

  108 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 108 (annotation_argument_list)


State 131

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 132

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 133

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 134

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 135

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 136

  597 single_alias: optional_public_or_private_alias "name" . $@43 '=' type_declaration

    $default  reduce using rule 596 ($@43)

    $@43  go to state 174


State 137

  598 alias_list: single_alias ';' .

    $default  reduce using rule 598 (alias_list)


State 138

  600 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 600 (alias_declaration)


State 139

  599 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 175


State 140

  602 alias_declaration: "typedef" $@44 single_alias ';' .

    $default  reduce using rule 602 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@88 "name" . $@89 '{' $@90 bitfield_alias_bits $@91 '}'

    $default  reduce using rule 761 ($@89)

    $@89  go to state 176


State 145

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@80 "name" . $@81 '{' $@82 tuple_alias_type_list $@83 '}'

    $default  reduce using rule 751 ($@81)

    $@81  go to state 177


State 146

  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@84 "name" . $@85 '{' $@86 variant_alias_type_list $@87 '}'

    $default  reduce using rule 756 ($@85)

    $@85  go to state 178


State 147

  269 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 269 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  119 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 119 (annotation_declaration)


State 151

  108 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  113 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 152

  116 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  116                       | annotation_declaration "&&" annotation_declaration .
  117                       | annotation_declaration . "||" annotation_declaration
  118                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 116 (annotation_declaration)


State 153

  116 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  117                       | annotation_declaration . "||" annotation_declaration
  117                       | annotation_declaration "||" annotation_declaration .
  118                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 117 (annotation_declaration)


State 154

  116 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  117                       | annotation_declaration . "||" annotation_declaration
  118                       | annotation_declaration . "^^" annotation_declaration
  118                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 118 (annotation_declaration)


State 155

  116 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  117                       | annotation_declaration . "||" annotation_declaration
  118                       | annotation_declaration . "^^" annotation_declaration
  122 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 122 (annotation_list)


State 156

  221 function_declaration: optional_public_or_private_function $@10 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  606 enum_name: "name" .

    $default  reduce using rule 606 (enum_name)


State 158

  609 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' $@45 enum_list $@46 '}'
  612                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' $@47 enum_list $@48 '}'

    ':'  shift, and go to state 212
    '{'  shift, and go to state 213


State 159

  627 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@49 . structure_name $@50 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 615 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  586 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 578 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  588 global_let: kwd_let optional_shared optional_public_or_private_variable $@42 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 516 (optional_field_annotation)

    optional_field_annotation  go to state 219


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221
    "end of the string"   shift, and go to state 222


State 165

   92 annotation_argument_value: "true" .

    $default  reduce using rule 92 (annotation_argument_value)


State 166

   93 annotation_argument_value: "false" .

    $default  reduce using rule 93 (annotation_argument_value)


State 167

   90 annotation_argument_value: "integer constant" .

    $default  reduce using rule 90 (annotation_argument_value)


State 168

   91 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 91 (annotation_argument_value)


State 169

   89 annotation_argument_value: "name" .

    $default  reduce using rule 89 (annotation_argument_value)


State 170

   88 annotation_argument_value: string_constant .

    $default  reduce using rule 88 (annotation_argument_value)


State 171

   94 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 94 (annotation_argument_value_list)


State 172

   95 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  106 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 223
    ')'  shift, and go to state 224


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  597 single_alias: optional_public_or_private_alias "name" $@43 . '=' type_declaration

    '='  shift, and go to state 225


State 175

  599 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 599 (alias_list)


State 176

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@88 "name" $@89 . '{' $@90 bitfield_alias_bits $@91 '}'

    '{'  shift, and go to state 226


State 177

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@80 "name" $@81 . '{' $@82 tuple_alias_type_list $@83 '}'

    '{'  shift, and go to state 227


State 178

  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@84 "name" $@85 . '{' $@86 variant_alias_type_list $@87 '}'

    '{'  shift, and go to state 228


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  113 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 113 (annotation_declaration_basic)


State 181

  131 function_name: "operator" . '!'
  132              | "operator" . '~'
  133              | "operator" . "+="
  134              | "operator" . "-="
  135              | "operator" . "*="
  136              | "operator" . "/="
  137              | "operator" . "%="
  138              | "operator" . "&="
  139              | "operator" . "|="
  140              | "operator" . "^="
  141              | "operator" . "&&="
  142              | "operator" . "||="
  143              | "operator" . "^^="
  144              | "operator" . "&&"
  145              | "operator" . "||"
  146              | "operator" . "^^"
  147              | "operator" . '+'
  148              | "operator" . '-'
  149              | "operator" . '*'
  150              | "operator" . '/'
  151              | "operator" . '%'
  152              | "operator" . '<'
  153              | "operator" . '>'
  154              | "operator" . ".."
  155              | "operator" . "=="
  156              | "operator" . "!="
  157              | "operator" . "<="
  158              | "operator" . ">="
  159              | "operator" . '&'
  160              | "operator" . '|'
  161              | "operator" . '^'
  164              | "operator" . "++"
  165              | "operator" . "--"
  166              | "operator" . "<<"
  167              | "operator" . ">>"
  168              | "operator" . "<<="
  169              | "operator" . ">>="
  170              | "operator" . "<<<"
  171              | "operator" . ">>>"
  172              | "operator" . "<<<="
  173              | "operator" . ">>>="
  174              | "operator" . '[' ']'
  175              | "operator" . "?[" ']'
  176              | "operator" . '.'
  177              | "operator" . "?."
  178              | "operator" . '.' "name"
  179              | "operator" . '.' "name" ":="
  180              | "operator" . "?." "name"
  181              | "operator" . ":="
  182              | "operator" . "delete"
  183              | "operator" . "??"
  184              | "operator" . "is"
  185              | "operator" . "as"
  186              | "operator" . "is" "name"
  187              | "operator" . "as" "name"
  188              | "operator" . '?' "as"
  189              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 229
    "as"      shift, and go to state 230
    "delete"  shift, and go to state 231
    "+="      shift, and go to state 232
    "-="      shift, and go to state 233
    "/="      shift, and go to state 234
    "*="      shift, and go to state 235
    "%="      shift, and go to state 236
    "&="      shift, and go to state 237
    "|="      shift, and go to state 238
    "^="      shift, and go to state 239
    "<<"      shift, and go to state 240
    ">>"      shift, and go to state 241
    "++"      shift, and go to state 242
    "--"      shift, and go to state 243
    "<="      shift, and go to state 244
    "<<="     shift, and go to state 245
    ">>="     shift, and go to state 246
    ">="      shift, and go to state 247
    "=="      shift, and go to state 248
    "!="      shift, and go to state 249
    "??"      shift, and go to state 250
    "?."      shift, and go to state 251
    "?["      shift, and go to state 252
    ":="      shift, and go to state 253
    "<<<"     shift, and go to state 254
    ">>>"     shift, and go to state 255
    "<<<="    shift, and go to state 256
    ">>>="    shift, and go to state 257
    "&&"      shift, and go to state 258
    "||"      shift, and go to state 259
    "^^"      shift, and go to state 260
    "&&="     shift, and go to state 261
    "||="     shift, and go to state 262
    "^^="     shift, and go to state 263
    ".."      shift, and go to state 264
    '?'       shift, and go to state 265
    '|'       shift, and go to state 266
    '^'       shift, and go to state 267
    '&'       shift, and go to state 268
    '<'       shift, and go to state 269
    '>'       shift, and go to state 270
    '-'       shift, and go to state 271
    '+'       shift, and go to state 272
    '*'       shift, and go to state 273
    '/'       shift, and go to state 274
    '%'       shift, and go to state 275
    '~'       shift, and go to state 276
    '!'       shift, and go to state 277
    '.'       shift, and go to state 278
    '['       shift, and go to state 279


State 182

  190 function_name: "bool" .

    $default  reduce using rule 190 (function_name)


State 183

  191 function_name: "string" .

    $default  reduce using rule 191 (function_name)


State 184

  192 function_name: "int" .

    $default  reduce using rule 192 (function_name)


State 185

  193 function_name: "int2" .

    $default  reduce using rule 193 (function_name)


State 186

  194 function_name: "int3" .

    $default  reduce using rule 194 (function_name)


State 187

  195 function_name: "int4" .

    $default  reduce using rule 195 (function_name)


State 188

  196 function_name: "uint" .

    $default  reduce using rule 196 (function_name)


State 189

  197 function_name: "uint2" .

    $default  reduce using rule 197 (function_name)


State 190

  198 function_name: "uint3" .

    $default  reduce using rule 198 (function_name)


State 191

  199 function_name: "uint4" .

    $default  reduce using rule 199 (function_name)


State 192

  200 function_name: "float" .

    $default  reduce using rule 200 (function_name)


State 193

  201 function_name: "float2" .

    $default  reduce using rule 201 (function_name)


State 194

  202 function_name: "float3" .

    $default  reduce using rule 202 (function_name)


State 195

  203 function_name: "float4" .

    $default  reduce using rule 203 (function_name)


State 196

  204 function_name: "range" .

    $default  reduce using rule 204 (function_name)


State 197

  205 function_name: "urange" .

    $default  reduce using rule 205 (function_name)


State 198

  206 function_name: "range64" .

    $default  reduce using rule 206 (function_name)


State 199

  207 function_name: "urange64" .

    $default  reduce using rule 207 (function_name)


State 200

  208 function_name: "int64" .

    $default  reduce using rule 208 (function_name)


State 201

  209 function_name: "uint64" .

    $default  reduce using rule 209 (function_name)


State 202

  210 function_name: "double" .

    $default  reduce using rule 210 (function_name)


State 203

  211 function_name: "int8" .

    $default  reduce using rule 211 (function_name)


State 204

  212 function_name: "uint8" .

    $default  reduce using rule 212 (function_name)


State 205

  213 function_name: "int16" .

    $default  reduce using rule 213 (function_name)


State 206

  214 function_name: "uint16" .

    $default  reduce using rule 214 (function_name)


State 207

  162 function_name: "++" . "operator"

    "operator"  shift, and go to state 280


State 208

  163 function_name: "--" . "operator"

    "operator"  shift, and go to state 281


State 209

  130 function_name: "name" .

    $default  reduce using rule 130 (function_name)


State 210

  219 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 282

    $default  reduce using rule 125 (optional_function_argument_list)

    optional_function_argument_list  go to state 283


State 211

  221 function_declaration: optional_public_or_private_function $@10 function_declaration_header . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 285


State 212

  612 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' $@47 enum_list $@48 '}'

    "int"     shift, and go to state 286
    "uint"    shift, and go to state 287
    "int8"    shift, and go to state 288
    "uint8"   shift, and go to state 289
    "int16"   shift, and go to state 290
    "uint16"  shift, and go to state 291

    enum_basic_type_declaration  go to state 292


State 213

  609 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . $@45 enum_list $@46 '}'

    $default  reduce using rule 607 ($@45)

    $@45  go to state 293


State 214

  616 optional_sealed: "sealed" .

    $default  reduce using rule 616 (optional_sealed)


State 215

  617 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 294


State 216

  627 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@49 structure_name . $@50 optional_struct_variable_declaration_list

    $default  reduce using rule 626 ($@50)

    $@50  go to state 295


State 217

  580 global_variable_declaration_list: global_variable_declaration_list . $@41 optional_field_annotation let_variable_declaration
  586 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 296

    $default  reduce using rule 579 ($@41)

    $@41  go to state 297


State 218

  517 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 298


State 219

  588 global_let: kwd_let optional_shared optional_public_or_private_variable $@42 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 302


State 220

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 221

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 222

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 223

   95 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant            go to state 170
    annotation_argument_value  go to state 303


State 224

  106 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 106 (annotation_argument)


State 225

  597 single_alias: optional_public_or_private_alias "name" $@43 '=' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 351


State 226

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@88 "name" $@89 '{' . $@90 bitfield_alias_bits $@91 '}'

    $default  reduce using rule 762 ($@90)

    $@90  go to state 352


State 227

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@80 "name" $@81 '{' . $@82 tuple_alias_type_list $@83 '}'

    $default  reduce using rule 752 ($@82)

    $@82  go to state 353


State 228

  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@84 "name" $@85 '{' . $@86 variant_alias_type_list $@87 '}'

    $default  reduce using rule 757 ($@86)

    $@86  go to state 354


State 229

  184 function_name: "operator" "is" .
  186              | "operator" "is" . "name"

    "name"  shift, and go to state 355

    $default  reduce using rule 184 (function_name)


State 230

  185 function_name: "operator" "as" .
  187              | "operator" "as" . "name"

    "name"  shift, and go to state 356

    $default  reduce using rule 185 (function_name)


State 231

  182 function_name: "operator" "delete" .

    $default  reduce using rule 182 (function_name)


State 232

  133 function_name: "operator" "+=" .

    $default  reduce using rule 133 (function_name)


State 233

  134 function_name: "operator" "-=" .

    $default  reduce using rule 134 (function_name)


State 234

  136 function_name: "operator" "/=" .

    $default  reduce using rule 136 (function_name)


State 235

  135 function_name: "operator" "*=" .

    $default  reduce using rule 135 (function_name)


State 236

  137 function_name: "operator" "%=" .

    $default  reduce using rule 137 (function_name)


State 237

  138 function_name: "operator" "&=" .

    $default  reduce using rule 138 (function_name)


State 238

  139 function_name: "operator" "|=" .

    $default  reduce using rule 139 (function_name)


State 239

  140 function_name: "operator" "^=" .

    $default  reduce using rule 140 (function_name)


State 240

  166 function_name: "operator" "<<" .

    $default  reduce using rule 166 (function_name)


State 241

  167 function_name: "operator" ">>" .

    $default  reduce using rule 167 (function_name)


State 242

  164 function_name: "operator" "++" .

    $default  reduce using rule 164 (function_name)


State 243

  165 function_name: "operator" "--" .

    $default  reduce using rule 165 (function_name)


State 244

  157 function_name: "operator" "<=" .

    $default  reduce using rule 157 (function_name)


State 245

  168 function_name: "operator" "<<=" .

    $default  reduce using rule 168 (function_name)


State 246

  169 function_name: "operator" ">>=" .

    $default  reduce using rule 169 (function_name)


State 247

  158 function_name: "operator" ">=" .

    $default  reduce using rule 158 (function_name)


State 248

  155 function_name: "operator" "==" .

    $default  reduce using rule 155 (function_name)


State 249

  156 function_name: "operator" "!=" .

    $default  reduce using rule 156 (function_name)


State 250

  183 function_name: "operator" "??" .

    $default  reduce using rule 183 (function_name)


State 251

  177 function_name: "operator" "?." .
  180              | "operator" "?." . "name"

    "name"  shift, and go to state 357

    $default  reduce using rule 177 (function_name)


State 252

  175 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 358


State 253

  181 function_name: "operator" ":=" .

    $default  reduce using rule 181 (function_name)


State 254

  170 function_name: "operator" "<<<" .

    $default  reduce using rule 170 (function_name)


State 255

  171 function_name: "operator" ">>>" .

    $default  reduce using rule 171 (function_name)


State 256

  172 function_name: "operator" "<<<=" .

    $default  reduce using rule 172 (function_name)


State 257

  173 function_name: "operator" ">>>=" .

    $default  reduce using rule 173 (function_name)


State 258

  144 function_name: "operator" "&&" .

    $default  reduce using rule 144 (function_name)


State 259

  145 function_name: "operator" "||" .

    $default  reduce using rule 145 (function_name)


State 260

  146 function_name: "operator" "^^" .

    $default  reduce using rule 146 (function_name)


State 261

  141 function_name: "operator" "&&=" .

    $default  reduce using rule 141 (function_name)


State 262

  142 function_name: "operator" "||=" .

    $default  reduce using rule 142 (function_name)


State 263

  143 function_name: "operator" "^^=" .

    $default  reduce using rule 143 (function_name)


State 264

  154 function_name: "operator" ".." .

    $default  reduce using rule 154 (function_name)


State 265

  188 function_name: "operator" '?' . "as"
  189              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 359


State 266

  160 function_name: "operator" '|' .

    $default  reduce using rule 160 (function_name)


State 267

  161 function_name: "operator" '^' .

    $default  reduce using rule 161 (function_name)


State 268

  159 function_name: "operator" '&' .

    $default  reduce using rule 159 (function_name)


State 269

  152 function_name: "operator" '<' .

    $default  reduce using rule 152 (function_name)


State 270

  153 function_name: "operator" '>' .

    $default  reduce using rule 153 (function_name)


State 271

  148 function_name: "operator" '-' .

    $default  reduce using rule 148 (function_name)


State 272

  147 function_name: "operator" '+' .

    $default  reduce using rule 147 (function_name)


State 273

  149 function_name: "operator" '*' .

    $default  reduce using rule 149 (function_name)


State 274

  150 function_name: "operator" '/' .

    $default  reduce using rule 150 (function_name)


State 275

  151 function_name: "operator" '%' .

    $default  reduce using rule 151 (function_name)


State 276

  132 function_name: "operator" '~' .

    $default  reduce using rule 132 (function_name)


State 277

  131 function_name: "operator" '!' .

    $default  reduce using rule 131 (function_name)


State 278

  176 function_name: "operator" '.' .
  178              | "operator" '.' . "name"
  179              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 360

    $default  reduce using rule 176 (function_name)


State 279

  174 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 361


State 280

  162 function_name: "++" "operator" .

    $default  reduce using rule 162 (function_name)


State 281

  163 function_name: "--" "operator" .

    $default  reduce using rule 163 (function_name)


State 282

  126 optional_function_argument_list: '(' . ')'
  127                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218
    ')'   shift, and go to state 363

    $default  reduce using rule 516 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 365
    function_argument_list         go to state 366


State 283

  219 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 367

    $default  reduce using rule 128 (optional_function_type)

    optional_function_type  go to state 368


State 284

  222 expression_block: '{' . expressions '}'
  223                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 247 (expressions)

    expressions  go to state 369


State 285

  221 function_declaration: optional_public_or_private_function $@10 function_declaration_header expression_block .

    $default  reduce using rule 221 (function_declaration)


State 286

  660 enum_basic_type_declaration: "int" .

    $default  reduce using rule 660 (enum_basic_type_declaration)


State 287

  663 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 663 (enum_basic_type_declaration)


State 288

  661 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 661 (enum_basic_type_declaration)


State 289

  664 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 664 (enum_basic_type_declaration)


State 290

  662 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 662 (enum_basic_type_declaration)


State 291

  665 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 665 (enum_basic_type_declaration)


State 292

  612 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' $@47 enum_list $@48 '}'

    '{'  shift, and go to state 370


State 293

  609 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@45 . enum_list $@46 '}'

    $default  reduce using rule 589 (enum_list)

    enum_list  go to state 371


State 294

  617 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 372

    $default  reduce using rule 613 (optional_structure_parent)

    optional_structure_parent  go to state 373


State 295

  627 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@49 structure_name $@50 . optional_struct_variable_declaration_list

    '{'  shift, and go to state 374

    $default  reduce using rule 623 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 375


State 296

  586 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 586 (global_let)


State 297

  580 global_variable_declaration_list: global_variable_declaration_list $@41 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 516 (optional_field_annotation)

    optional_field_annotation  go to state 376


State 298

  108 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  517 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 377


State 299

  569 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 378


State 300

  568 let_variable_name_with_pos_list: "name" .
  570                                | "name" . "aka" "name"

    "aka"  shift, and go to state 379

    $default  reduce using rule 568 (let_variable_name_with_pos_list)


State 301

  571 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  572                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  573 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  574                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  575                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  576                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  577                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 380
    ':'  shift, and go to state 381
    '&'  shift, and go to state 382

    $default  reduce using rule 566 (optional_ref)

    optional_ref  go to state 383


State 302

  588 global_let: kwd_let optional_shared optional_public_or_private_variable $@42 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 588 (global_let)


State 303

   95 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 95 (annotation_argument_value_list)


State 304

  690 type_declaration_no_options: "type" . '<' $@53 type_declaration '>' $@54

    '<'  shift, and go to state 384


State 305

  713 type_declaration_no_options: "array" . '<' $@58 type_declaration '>' $@59

    '<'  shift, and go to state 385


State 306

  716 type_declaration_no_options: "table" . '<' $@60 table_type_pair '>' $@61

    '<'  shift, and go to state 386


State 307

  691 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 387


State 308

  719 type_declaration_no_options: "iterator" . '<' $@62 type_declaration '>' $@63

    '<'  shift, and go to state 388


State 309

  709 type_declaration_no_options: "smart_ptr" . '<' $@56 type_declaration '>' $@57

    '<'  shift, and go to state 389


State 310

  633 basic_type_declaration: "bool" .

    $default  reduce using rule 633 (basic_type_declaration)


State 311

  653 basic_type_declaration: "void" .

    $default  reduce using rule 653 (basic_type_declaration)


State 312

  634 basic_type_declaration: "string" .

    $default  reduce using rule 634 (basic_type_declaration)


State 313

  667 auto_type_declaration: "auto" .
  668                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 390

    '('       [reduce using rule 667 (auto_type_declaration)]
    $default  reduce using rule 667 (auto_type_declaration)


State 314

  635 basic_type_declaration: "int" .

    $default  reduce using rule 635 (basic_type_declaration)


State 315

  639 basic_type_declaration: "int2" .

    $default  reduce using rule 639 (basic_type_declaration)


State 316

  640 basic_type_declaration: "int3" .

    $default  reduce using rule 640 (basic_type_declaration)


State 317

  641 basic_type_declaration: "int4" .

    $default  reduce using rule 641 (basic_type_declaration)


State 318

  642 basic_type_declaration: "uint" .

    $default  reduce using rule 642 (basic_type_declaration)


State 319

  659 basic_type_declaration: "bitfield" .
  677 bitfield_type_declaration: "bitfield" . '<' $@51 bitfield_bits '>' $@52

    '<'  shift, and go to state 391

    $default  reduce using rule 659 (basic_type_declaration)


State 320

  646 basic_type_declaration: "uint2" .

    $default  reduce using rule 646 (basic_type_declaration)


State 321

  647 basic_type_declaration: "uint3" .

    $default  reduce using rule 647 (basic_type_declaration)


State 322

  648 basic_type_declaration: "uint4" .

    $default  reduce using rule 648 (basic_type_declaration)


State 323

  649 basic_type_declaration: "float" .

    $default  reduce using rule 649 (basic_type_declaration)


State 324

  650 basic_type_declaration: "float2" .

    $default  reduce using rule 650 (basic_type_declaration)


State 325

  651 basic_type_declaration: "float3" .

    $default  reduce using rule 651 (basic_type_declaration)


State 326

  652 basic_type_declaration: "float4" .

    $default  reduce using rule 652 (basic_type_declaration)


State 327

  654 basic_type_declaration: "range" .

    $default  reduce using rule 654 (basic_type_declaration)


State 328

  655 basic_type_declaration: "urange" .

    $default  reduce using rule 655 (basic_type_declaration)


State 329

  656 basic_type_declaration: "range64" .

    $default  reduce using rule 656 (basic_type_declaration)


State 330

  657 basic_type_declaration: "urange64" .

    $default  reduce using rule 657 (basic_type_declaration)


State 331

  720 type_declaration_no_options: "block" .
  723                            | "block" . '<' $@64 type_declaration '>' $@65
  726                            | "block" . '<' $@66 optional_function_argument_list optional_function_type '>' $@67

    '<'  shift, and go to state 392

    $default  reduce using rule 720 (type_declaration_no_options)


State 332

  638 basic_type_declaration: "int64" .

    $default  reduce using rule 638 (basic_type_declaration)


State 333

  645 basic_type_declaration: "uint64" .

    $default  reduce using rule 645 (basic_type_declaration)


State 334

  658 basic_type_declaration: "double" .

    $default  reduce using rule 658 (basic_type_declaration)


State 335

  727 type_declaration_no_options: "function" .
  730                            | "function" . '<' $@68 type_declaration '>' $@69
  733                            | "function" . '<' $@70 optional_function_argument_list optional_function_type '>' $@71

    '<'  shift, and go to state 393

    $default  reduce using rule 727 (type_declaration_no_options)


State 336

  734 type_declaration_no_options: "lambda" .
  737                            | "lambda" . '<' $@72 type_declaration '>' $@73
  740                            | "lambda" . '<' $@74 optional_function_argument_list optional_function_type '>' $@75

    '<'  shift, and go to state 394

    $default  reduce using rule 734 (type_declaration_no_options)


State 337

  636 basic_type_declaration: "int8" .

    $default  reduce using rule 636 (basic_type_declaration)


State 338

  643 basic_type_declaration: "uint8" .

    $default  reduce using rule 643 (basic_type_declaration)


State 339

  637 basic_type_declaration: "int16" .

    $default  reduce using rule 637 (basic_type_declaration)


State 340

  644 basic_type_declaration: "uint16" .

    $default  reduce using rule 644 (basic_type_declaration)


State 341

  743 type_declaration_no_options: "tuple" . '<' $@76 tuple_type_list '>' $@77

    '<'  shift, and go to state 395


State 342

  746 type_declaration_no_options: "variant" . '<' $@78 variant_type_list '>' $@79

    '<'  shift, and go to state 396


State 343

  669 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 397


State 344

  692 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  694                            | '$' . name_in_namespace '<' $@55 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 398


State 345

  666 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 666 (structure_type_declaration)


State 346

  682 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 682 (type_declaration_no_options)


State 347

  685 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 685 (type_declaration_no_options)


State 348

  683 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 683 (type_declaration_no_options)


State 349

  684 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 684 (type_declaration_no_options)


State 350

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  747 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 747 (type_declaration)

    dim_list  go to state 409


State 351

  597 single_alias: optional_public_or_private_alias "name" $@43 '=' type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 597 (single_alias)


State 352

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@88 "name" $@89 '{' $@90 . bitfield_alias_bits $@91 '}'

    $default  reduce using rule 672 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 411


State 353

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@80 "name" $@81 '{' $@82 . tuple_alias_type_list $@83 '}'

    $default  reduce using rule 546 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 412


State 354

  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@84 "name" $@85 '{' $@86 . variant_alias_type_list $@87 '}'

    $default  reduce using rule 552 (variant_alias_type_list)

    variant_alias_type_list  go to state 413


State 355

  186 function_name: "operator" "is" "name" .

    $default  reduce using rule 186 (function_name)


State 356

  187 function_name: "operator" "as" "name" .

    $default  reduce using rule 187 (function_name)


State 357

  180 function_name: "operator" "?." "name" .

    $default  reduce using rule 180 (function_name)


State 358

  175 function_name: "operator" "?[" ']' .

    $default  reduce using rule 175 (function_name)


State 359

  188 function_name: "operator" '?' "as" .
  189              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 414

    $default  reduce using rule 188 (function_name)


State 360

  178 function_name: "operator" '.' "name" .
  179              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 415

    $default  reduce using rule 178 (function_name)


State 361

  174 function_name: "operator" '[' ']' .

    $default  reduce using rule 174 (function_name)


State 362

  539 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 416


State 363

  126 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 126 (optional_function_argument_list)


State 364

  537 function_argument_declaration: optional_field_annotation . variable_declaration
  538                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 417
    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_declaration         go to state 420
    variable_name_with_pos_list  go to state 421


State 365

  540 function_argument_list: function_argument_declaration .

    $default  reduce using rule 540 (function_argument_list)


State 366

  127 optional_function_argument_list: '(' function_argument_list . ')'
  541 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 422
    ';'  shift, and go to state 423


State 367

  129 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 424


State 368

  219 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 219 (function_declaration_header)


State 369

  222 expression_block: '{' expressions . '}'
  223                 | '{' expressions . '}' "finally" '{' expressions '}'
  248 expressions: expressions . expression_any
  249            | expressions . error

    error                             shift, and go to state 425
    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 428
    "if"                              shift, and go to state 429
    "static_if"                       shift, and go to state 430
    "for"                             shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 438
    "null"                            shift, and go to state 439
    "break"                           shift, and go to state 440
    "try"                             shift, and go to state 441
    "table"                           shift, and go to state 442
    "delete"                          shift, and go to state 443
    "deref"                           shift, and go to state 444
    "with"                            shift, and go to state 445
    "assume"                          shift, and go to state 446
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 449
    "continue"                        shift, and go to state 450
    "pass"                            shift, and go to state 451
    "reinterpret"                     shift, and go to state 452
    "label"                           shift, and go to state 453
    "goto"                            shift, and go to state 454
    "unsafe"                          shift, and go to state 455
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "yield"                           shift, and go to state 462
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 485
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    ';'                               shift, and go to state 497
    '{'                               shift, and go to state 498
    '}'                               shift, and go to state 499

    string_builder             go to state 500
    expr_reader                go to state 501
    expression_label           go to state 502
    expression_goto            go to state 503
    if_or_static_if            go to state 504
    expression_if_one_liner    go to state 505
    expression_if_then_else    go to state 506
    expression_for_loop        go to state 507
    expression_unsafe          go to state 508
    expression_while_loop      go to state 509
    expression_with            go to state 510
    expression_with_alias      go to state 511
    expr_call_pipe             go to state 512
    expression_any             go to state 513
    expr_keyword               go to state 514
    expression_keyword         go to state 515
    expr_pipe                  go to state 516
    name_in_namespace          go to state 517
    expression_delete          go to state 518
    expr_new                   go to state 519
    expression_break           go to state 520
    expression_continue        go to state 521
    expression_return_no_pipe  go to state 522
    expression_return          go to state 523
    expression_yield_no_pipe   go to state 524
    expression_yield           go to state 525
    expression_try_catch       go to state 526
    kwd_let                    go to state 527
    expression_let             go to state 528
    expr_cast                  go to state 529
    expr_type_decl             go to state 530
    expr_type_info             go to state 531
    block_or_lambda            go to state 532
    expr_full_block            go to state 533
    expr_numeric_const         go to state 534
    expr_assign                go to state 535
    expr_assign_pipe           go to state 536
    expr_named_call            go to state 537
    expr_method_call           go to state 538
    func_addr_expr             go to state 539
    expr_field                 go to state 540
    expr_call                  go to state 541
    expr                       go to state 542
    expr_mtag                  go to state 543
    basic_type_declaration     go to state 544
    make_decl                  go to state 545
    make_struct_decl           go to state 546
    make_tuple_call            go to state 547
    make_dim_decl              go to state 548
    make_table_decl            go to state 549
    array_comprehension        go to state 550


State 370

  612 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . $@47 enum_list $@48 '}'

    $default  reduce using rule 610 ($@47)

    $@47  go to state 551


State 371

  590 enum_list: enum_list . ';'
  591          | enum_list . "name" ';'
  592          | enum_list . "name" '=' expr ';'
  609 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@45 enum_list . $@46 '}'

    "name"  shift, and go to state 552
    ';'     shift, and go to state 553

    $default  reduce using rule 608 ($@46)

    $@46  go to state 554


State 372

  614 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 555


State 373

  617 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 617 (structure_name)


State 374

  624 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 529 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 556


State 375

  627 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@49 structure_name $@50 optional_struct_variable_declaration_list .

    $default  reduce using rule 627 (structure_declaration)


State 376

  580 global_variable_declaration_list: global_variable_declaration_list $@41 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 557


State 377

  517 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 558


State 378

  569 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 562
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 379

  570 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 563


State 380

  571 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  572                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 564


State 381

  573 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  574                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'
  575                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 565


State 382

  567 optional_ref: '&' .

    $default  reduce using rule 567 (optional_ref)


State 383

  576 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  577                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 566
    ":="  shift, and go to state 567
    '='   shift, and go to state 568

    copy_or_move_or_clone  go to state 569


State 384

  690 type_declaration_no_options: "type" '<' . $@53 type_declaration '>' $@54

    $default  reduce using rule 688 ($@53)

    $@53  go to state 570


State 385

  713 type_declaration_no_options: "array" '<' . $@58 type_declaration '>' $@59

    $default  reduce using rule 711 ($@58)

    $@58  go to state 571


State 386

  716 type_declaration_no_options: "table" '<' . $@60 table_type_pair '>' $@61

    $default  reduce using rule 714 ($@60)

    $@60  go to state 572


State 387

  691 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 573
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 388

  719 type_declaration_no_options: "iterator" '<' . $@62 type_declaration '>' $@63

    $default  reduce using rule 717 ($@62)

    $@62  go to state 574


State 389

  709 type_declaration_no_options: "smart_ptr" '<' . $@56 type_declaration '>' $@57

    $default  reduce using rule 707 ($@56)

    $@56  go to state 575


State 390

  668 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 576


State 391

  677 bitfield_type_declaration: "bitfield" '<' . $@51 bitfield_bits '>' $@52

    $default  reduce using rule 675 ($@51)

    $@51  go to state 577


State 392

  723 type_declaration_no_options: "block" '<' . $@64 type_declaration '>' $@65
  726                            | "block" '<' . $@66 optional_function_argument_list optional_function_type '>' $@67

    ':'       reduce using rule 724 ($@66)
    '>'       reduce using rule 724 ($@66)
    '('       reduce using rule 724 ($@66)
    $default  reduce using rule 721 ($@64)

    $@64  go to state 578
    $@66  go to state 579


State 393

  730 type_declaration_no_options: "function" '<' . $@68 type_declaration '>' $@69
  733                            | "function" '<' . $@70 optional_function_argument_list optional_function_type '>' $@71

    ':'       reduce using rule 731 ($@70)
    '>'       reduce using rule 731 ($@70)
    '('       reduce using rule 731 ($@70)
    $default  reduce using rule 728 ($@68)

    $@68  go to state 580
    $@70  go to state 581


State 394

  737 type_declaration_no_options: "lambda" '<' . $@72 type_declaration '>' $@73
  740                            | "lambda" '<' . $@74 optional_function_argument_list optional_function_type '>' $@75

    ':'       reduce using rule 738 ($@74)
    '>'       reduce using rule 738 ($@74)
    '('       reduce using rule 738 ($@74)
    $default  reduce using rule 735 ($@72)

    $@72  go to state 582
    $@74  go to state 583


State 395

  743 type_declaration_no_options: "tuple" '<' . $@76 tuple_type_list '>' $@77

    $default  reduce using rule 741 ($@76)

    $@76  go to state 584


State 396

  746 type_declaration_no_options: "variant" '<' . $@78 variant_type_list '>' $@79

    $default  reduce using rule 744 ($@78)

    $@78  go to state 585


State 397

  669 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 586
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 398

  692 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  694                            | '$' name_in_namespace . '<' $@55 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 587
    '('  shift, and go to state 588


State 399

  697 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 697 (type_declaration_no_options)


State 400

  702 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 702 (type_declaration_no_options)


State 401

  696 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 696 (type_declaration_no_options)


State 402

  704 type_declaration_no_options: type_declaration_no_options "==" . "const"
  705                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 589
    '&'      shift, and go to state 590


State 403

  710 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 710 (type_declaration_no_options)


State 404

  706 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 706 (type_declaration_no_options)


State 405

  699 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 699 (type_declaration_no_options)


State 406

  695 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  698                            | type_declaration_no_options '-' . "const"
  700                            | type_declaration_no_options '-' . '&'
  703                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 591
    '&'      shift, and go to state 592
    '['      shift, and go to state 593
    '#'      shift, and go to state 594


State 407

  680 dim_list: '[' . expr ']'
  687 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    ']'                               shift, and go to state 595
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 596
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 408

  701 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 701 (type_declaration_no_options)


State 409

  681 dim_list: dim_list . '[' expr ']'
  686 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 597

    '['       [reduce using rule 686 (type_declaration_no_options)]
    $default  reduce using rule 686 (type_declaration_no_options)


State 410

  748 type_declaration: type_declaration '|' . type_declaration_no_options
  749                 | type_declaration '|' . '#'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344
    '#'          shift, and go to state 598

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 599


State 411

  673 bitfield_alias_bits: bitfield_alias_bits . ';'
  674                    | bitfield_alias_bits . "name" ';'
  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@88 "name" $@89 '{' $@90 bitfield_alias_bits . $@91 '}'

    "name"  shift, and go to state 600
    ';'     shift, and go to state 601

    $default  reduce using rule 763 ($@91)

    $@91  go to state 602


State 412

  547 tuple_alias_type_list: tuple_alias_type_list . ';'
  548                      | tuple_alias_type_list . tuple_type ';'
  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@80 "name" $@81 '{' $@82 tuple_alias_type_list . $@83 '}'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 603
    '$'          shift, and go to state 344
    ';'          shift, and go to state 604

    $default  reduce using rule 753 ($@83)

    name_in_namespace            go to state 345
    tuple_type                   go to state 605
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 606
    $@83                         go to state 607


State 413

  553 variant_alias_type_list: variant_alias_type_list . ';'
  554                        | variant_alias_type_list . variant_type ';'
  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@84 "name" $@85 '{' $@86 variant_alias_type_list . $@87 '}'

    "name"  shift, and go to state 608
    ';'     shift, and go to state 609

    $default  reduce using rule 758 ($@87)

    variant_type  go to state 610
    $@87          go to state 611


State 414

  189 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 189 (function_name)


State 415

  179 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 179 (function_name)


State 416

  539 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 612
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 417

  538 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_declaration         go to state 613
    variable_name_with_pos_list  go to state 421


State 418

  629 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 614


State 419

  628 variable_name_with_pos_list: "name" .
  630                            | "name" . "aka" "name"

    "aka"  shift, and go to state 615

    $default  reduce using rule 628 (variable_name_with_pos_list)


State 420

  537 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 537 (function_argument_declaration)


State 421

  557 variable_declaration: variable_name_with_pos_list .
  558                     | variable_name_with_pos_list . '&'
  559                     | variable_name_with_pos_list . ':' type_declaration
  560                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  561                     | variable_name_with_pos_list . copy_or_move expr
  562                     | variable_name_with_pos_list . copy_or_move expr_pipe
  631 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  632                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 616
    ','   shift, and go to state 617
    '='   shift, and go to state 618
    ':'   shift, and go to state 619
    '&'   shift, and go to state 620

    $default  reduce using rule 557 (variable_declaration)

    copy_or_move  go to state 621


State 422

  127 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 127 (optional_function_argument_list)


State 423

  541 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218

    $default  reduce using rule 516 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 622


State 424

  129 optional_function_type: ':' type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 129 (optional_function_type)


State 425

  249 expressions: expressions error .

    $default  reduce using rule 249 (expressions)


State 426

  802 make_struct_decl: "struct" . '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    '<'  shift, and go to state 623


State 427

  805 make_struct_decl: "class" . '<' $@94 type_declaration_no_options '>' $@95 '(' make_struct_dim ')'

    '<'  shift, and go to state 624


State 428

   81 expression_while_loop: "while" . expr expression_block
   84                      | "while" . expr $@7 error $@8 ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 625
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 429

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 430

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 431

   79 expression_for_loop: "for" . $@6 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 78 ($@6)

    $@6  go to state 626


State 432

  422 expr: "true" .

    $default  reduce using rule 422 (expr)


State 433

  423 expr: "false" .

    $default  reduce using rule 423 (expr)


State 434

  277 expr_new: "new" . new_type_declaration
  278         | "new" . new_type_declaration '(' ')'
  279         | "new" . new_type_declaration '(' expr_list ')'
  280         | "new" . new_type_declaration '(' make_struct_dim ')'
  281         | "new" . make_decl

    "struct"       shift, and go to state 426
    "class"        shift, and go to state 427
    "array"        shift, and go to state 437
    "table"        shift, and go to state 442
    "fixed_array"  shift, and go to state 456
    "default"      shift, and go to state 457
    "tuple"        shift, and go to state 459
    "variant"      shift, and go to state 460
    "::"           shift, and go to state 58
    "[["           shift, and go to state 475
    "[{"           shift, and go to state 476
    "{{"           shift, and go to state 477
    "name"         shift, and go to state 59
    '<'            shift, and go to state 627
    '['            shift, and go to state 493
    '{'            shift, and go to state 498

    name_in_namespace           go to state 345
    new_type_declaration        go to state 628
    structure_type_declaration  go to state 629
    make_decl                   go to state 630
    make_struct_decl            go to state 546
    make_tuple_call             go to state 547
    make_dim_decl               go to state 548
    make_table_decl             go to state 549
    array_comprehension         go to state 550


State 435

  320 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  321               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  322               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 631


State 436

  319 expr_type_decl: "type" . '<' $@23 type_declaration '>' $@24

    '<'  shift, and go to state 632


State 437

  826 make_dim_decl: "array" . '(' expr_list optional_comma ')'
  829              | "array" . '<' $@102 type_declaration_no_options '>' $@103 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 633
    '('  shift, and go to state 634


State 438

  284 expression_return_no_pipe: "return" .
  285                          | "return" . expr_list
  286                          | "return" . "<-" expr_list
  288 expression_return: "return" . expr_pipe
  289                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 635
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 284 (expression_return_no_pipe)

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 636
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 637
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 639
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 439

  416 expr: "null" .

    $default  reduce using rule 416 (expr)


State 440

  282 expression_break: "break" .

    $default  reduce using rule 282 (expression_break)


State 441

  295 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 640


State 442

  840 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  841                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  842                | "table" . '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 641
    '('  shift, and go to state 642


State 443

  271 expression_delete: "delete" . expr
  272                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "explicit"                        shift, and go to state 643
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 644
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 444

  466 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 645


State 445

   85 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 646
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 446

   87 expression_with_alias: "assume" . "name" '=' $@9 expr

    "name"  shift, and go to state 647


State 447

  310 expr_cast: "cast" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 648


State 448

  313 expr_cast: "upcast" . '<' $@19 type_declaration_no_options '>' $@20 expr

    '<'  shift, and go to state 649


State 449

  467 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 650


State 450

  283 expression_continue: "continue" .

    $default  reduce using rule 283 (expression_continue)


State 451

  246 expression_any: "pass" . ';'

    ';'  shift, and go to state 651


State 452

  316 expr_cast: "reinterpret" . '<' $@21 type_declaration_no_options '>' $@22 expr

    '<'  shift, and go to state 652


State 453

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 653


State 454

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "label"                           shift, and go to state 654
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 655
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 455

   80 expression_unsafe: "unsafe" . expression_block
  498 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 656
    '{'  shift, and go to state 284

    expression_block  go to state 657


State 456

  830 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  833              | "fixed_array" . '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 658
    '('  shift, and go to state 659


State 457

  811 make_struct_decl: "default" . '<' $@98 type_declaration_no_options '>' $@99

    '<'  shift, and go to state 660


State 458

  659 basic_type_declaration: "bitfield" .

    $default  reduce using rule 659 (basic_type_declaration)


State 459

  817 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  820                | "tuple" . '<' $@100 type_declaration_no_options '>' $@101 '(' make_struct_dim ')'

    '<'  shift, and go to state 661
    '('  shift, and go to state 662


State 460

  808 make_struct_decl: "variant" . '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

    '<'  shift, and go to state 663


State 461

  468 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  469     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 664


State 462

  290 expression_yield_no_pipe: "yield" . expr
  291                         | "yield" . "<-" expr
  293 expression_yield: "yield" . expr_pipe
  294                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 665
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 666
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 667
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 463

  452 expr: "++" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 668
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 464

  453 expr: "--" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 669
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 465

  266 expr_pipe: "$ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 673


State 466

  264 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 674


State 467

  265 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 675


State 468

  500 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 676


State 469

  501 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 677


State 470

  502 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 678


State 471

  503 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 679


State 472

  504 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 680


State 473

  506 expr_mtag: "$c" . '(' expr ')' '(' ')'
  507          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 681


State 474

  505 expr_mtag: "..." .

    $default  reduce using rule 505 (expr_mtag)


State 475

  794 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  795                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  796                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  797                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  824 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  848 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 682
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 683


State 476

  798 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  799                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  825 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  849 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 684
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 685


State 477

  839 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  851 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 686
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 688
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table              go to state 689
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 478

  344 expr_numeric_const: "integer constant" .

    $default  reduce using rule 344 (expr_numeric_const)


State 479

  346 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 346 (expr_numeric_const)


State 480

  345 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 345 (expr_numeric_const)


State 481

  347 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 347 (expr_numeric_const)


State 482

  348 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 348 (expr_numeric_const)


State 483

  349 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 349 (expr_numeric_const)


State 484

  350 expr_numeric_const: "double constant" .

    $default  reduce using rule 350 (expr_numeric_const)


State 485

  250 expr_keyword: "keyword" . expr expression_block
  259 expression_keyword: "keyword" . '<' $@11 type_declaration_no_options_list '>' $@12 expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '<'                               shift, and go to state 690
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 691
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 486

  262 expression_keyword: "type function" . '<' $@13 type_declaration_no_options_list '>' $@14 optional_expr_list_in_braces

    '<'  shift, and go to state 692


State 487

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 693


State 488

  429 expr: '-' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 694
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 489

  428 expr: '+' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 695
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 490

  465 expr: '*' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 696
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 491

  427 expr: '~' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 697
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 492

  426 expr: '!' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 698
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 493

  823 make_dim_decl: '[' . expr_list optional_comma ']'
  847 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 700
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 494

  456 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 702
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 495

  328 block_or_lambda: '$' .

    $default  reduce using rule 328 (block_or_lambda)


State 496

  329 block_or_lambda: '@' .
  330                | '@' . '@'
  397 func_addr_expr: '@' . '@' func_addr_name
  400               | '@' . '@' '<' $@26 type_declaration_no_options '>' $@27 func_addr_name
  403               | '@' . '@' '<' $@28 optional_function_argument_list optional_function_type '>' $@29 func_addr_name
  515 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 703

    $default  reduce using rule 329 (block_or_lambda)


State 497

  226 expression_any: ';' .

    $default  reduce using rule 226 (expression_any)


State 498

  838 make_table_decl: '{' . expr_map_tuple_list optional_comma '}'
  850 array_comprehension: '{' . "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 704
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 705
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    expr_map_tuple_list     go to state 706
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 499

  222 expression_block: '{' expressions '}' .
  223                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 707

    $default  reduce using rule 222 (expression_block)


State 500

  420 expr: string_builder .

    $default  reduce using rule 420 (expr)


State 501

  419 expr: expr_reader .

    $default  reduce using rule 419 (expr)


State 502

  244 expression_any: expression_label . ';'

    ';'  shift, and go to state 708


State 503

  245 expression_any: expression_goto . ';'

    ';'  shift, and go to state 709


State 504

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else
   75                        | if_or_static_if . expr $@3 error $@4 ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 710
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 505

   77 expression_if_then_else: expression_if_one_liner . "if" $@5 expr expression_else_one_liner ';'

    "if"  shift, and go to state 711


State 506

  242 expression_any: expression_if_then_else .

    $default  reduce using rule 242 (expression_any)


State 507

  237 expression_any: expression_for_loop .

    $default  reduce using rule 237 (expression_any)


State 508

  234 expression_any: expression_unsafe .

    $default  reduce using rule 234 (expression_any)


State 509

  233 expression_any: expression_while_loop .

    $default  reduce using rule 233 (expression_any)


State 510

  235 expression_any: expression_with .

    $default  reduce using rule 235 (expression_any)


State 511

  236 expression_any: expression_with_alias .

    $default  reduce using rule 236 (expression_any)


State 512

  267 expr_pipe: expr_call_pipe .

    $default  reduce using rule 267 (expr_pipe)


State 513

  248 expressions: expressions expression_any .

    $default  reduce using rule 248 (expressions)


State 514

  228 expression_any: expr_keyword .

    $default  reduce using rule 228 (expression_any)


State 515

  225 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  499 expr: expression_keyword .

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670

    '$'       [reduce using rule 499 (expr)]
    '@'       [reduce using rule 499 (expr)]
    $default  reduce using rule 499 (expr)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 713


State 516

  227 expression_any: expr_pipe .

    $default  reduce using rule 227 (expression_any)


State 517

  391 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  392                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  411 expr_call: name_in_namespace . '(' ')'
  412          | name_in_namespace . '(' make_struct_dim ')'
  413          | name_in_namespace . '(' expr_list ')'
  417 expr: name_in_namespace .
  497     | name_in_namespace . "name"

    "name"  shift, and go to state 714
    '('     shift, and go to state 715

    "name"    [reduce using rule 417 (expr)]
    '('       [reduce using rule 417 (expr)]
    $default  reduce using rule 417 (expr)


State 518

  231 expression_any: expression_delete . ';'

    ';'  shift, and go to state 716


State 519

  490 expr: expr_new .

    $default  reduce using rule 490 (expr)


State 520

   70 expression_if_one_liner: expression_break .
  238 expression_any: expression_break . ';'

    ';'  shift, and go to state 717

    $default  reduce using rule 70 (expression_if_one_liner)


State 521

   71 expression_if_one_liner: expression_continue .
  239 expression_any: expression_continue . ';'

    ';'  shift, and go to state 718

    $default  reduce using rule 71 (expression_if_one_liner)


State 522

   68 expression_if_one_liner: expression_return_no_pipe .
  287 expression_return: expression_return_no_pipe . ';'

    ';'  shift, and go to state 719

    $default  reduce using rule 68 (expression_if_one_liner)


State 523

  240 expression_any: expression_return .

    $default  reduce using rule 240 (expression_any)


State 524

   69 expression_if_one_liner: expression_yield_no_pipe .
  292 expression_yield: expression_yield_no_pipe . ';'

    ';'  shift, and go to state 720

    $default  reduce using rule 69 (expression_if_one_liner)


State 525

  241 expression_any: expression_yield .

    $default  reduce using rule 241 (expression_any)


State 526

  243 expression_any: expression_try_catch .

    $default  reduce using rule 243 (expression_any)


State 527

  306 expression_let: kwd_let . optional_in_scope let_variable_declaration
  307               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 721

    $default  reduce using rule 299 (optional_in_scope)

    optional_in_scope  go to state 722


State 528

  232 expression_any: expression_let .

    $default  reduce using rule 232 (expression_any)


State 529

  489 expr: expr_cast .

    $default  reduce using rule 489 (expr)


State 530

  488 expr: expr_type_decl .

    $default  reduce using rule 488 (expr)


State 531

  487 expr: expr_type_info .

    $default  reduce using rule 487 (expr)


State 532

  341 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 123 (optional_annotation_list)

    optional_annotation_list  go to state 723


State 533

  493 expr: expr_full_block .

    $default  reduce using rule 493 (expr)


State 534

  418 expr: expr_numeric_const .

    $default  reduce using rule 418 (expr)


State 535

  230 expression_any: expr_assign . ';'
  263 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 724
    ';'    shift, and go to state 725


State 536

  229 expression_any: expr_assign_pipe .

    $default  reduce using rule 229 (expression_any)


State 537

  492 expr: expr_named_call .

    $default  reduce using rule 492 (expr)


State 538

  491 expr: expr_method_call .

    $default  reduce using rule 491 (expr)


State 539

  463 expr: func_addr_expr .

    $default  reduce using rule 463 (expr)


State 540

  424 expr: expr_field .

    $default  reduce using rule 424 (expr)


State 541

  464 expr: expr_call .

    $default  reduce using rule 464 (expr)


State 542

   67 expression_if_one_liner: expr .
  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  351 expr_assign: expr .
  352            | expr . '=' expr
  353            | expr . "<-" expr
  354            | expr . ":=" expr
  355            | expr . "&=" expr
  356            | expr . "|=" expr
  357            | expr . "^=" expr
  358            | expr . "&&=" expr
  359            | expr . "||=" expr
  360            | expr . "^^=" expr
  361            | expr . "+=" expr
  362            | expr . "-=" expr
  363            | expr . "*=" expr
  364            | expr . "/=" expr
  365            | expr . "%=" expr
  366            | expr . "<<=" expr
  367            | expr . ">>=" expr
  368            | expr . "<<<=" expr
  369            | expr . ">>>=" expr
  374 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  375                 | expr . "<-" expr_assign_pipe_right
  376                 | expr . "&=" expr_assign_pipe_right
  377                 | expr . "|=" expr_assign_pipe_right
  378                 | expr . "^=" expr_assign_pipe_right
  379                 | expr . "&&=" expr_assign_pipe_right
  380                 | expr . "||=" expr_assign_pipe_right
  381                 | expr . "^^=" expr_assign_pipe_right
  382                 | expr . "+=" expr_assign_pipe_right
  383                 | expr . "-=" expr_assign_pipe_right
  384                 | expr . "*=" expr_assign_pipe_right
  385                 | expr . "/=" expr_assign_pipe_right
  386                 | expr . "%=" expr_assign_pipe_right
  387                 | expr . "<<=" expr_assign_pipe_right
  388                 | expr . ">>=" expr_assign_pipe_right
  389                 | expr . "<<<=" expr_assign_pipe_right
  390                 | expr . ">>>=" expr_assign_pipe_right
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 741
    ">>="   shift, and go to state 742
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 747
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 756
    ">>>="  shift, and go to state 757
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 761
    "||="   shift, and go to state 762
    "^^="   shift, and go to state 763
    ".."    shift, and go to state 764
    '='     shift, and go to state 765
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 351 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 543

  425 expr: expr_mtag .

    $default  reduce using rule 425 (expr)


State 544

  414 expr_call: basic_type_declaration . '(' ')'
  415          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 780


State 545

  421 expr: make_decl .

    $default  reduce using rule 421 (expr)


State 546

  765 make_decl: make_struct_decl .

    $default  reduce using rule 765 (make_decl)


State 547

  769 make_decl: make_tuple_call .

    $default  reduce using rule 769 (make_decl)


State 548

  766 make_decl: make_dim_decl .

    $default  reduce using rule 766 (make_decl)


State 549

  767 make_decl: make_table_decl .

    $default  reduce using rule 767 (make_decl)


State 550

  768 make_decl: array_comprehension .

    $default  reduce using rule 768 (make_decl)


State 551

  612 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@47 . enum_list $@48 '}'

    $default  reduce using rule 589 (enum_list)

    enum_list  go to state 781


State 552

  591 enum_list: enum_list "name" . ';'
  592          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 782
    ';'  shift, and go to state 783


State 553

  590 enum_list: enum_list ';' .

    $default  reduce using rule 590 (enum_list)


State 554

  609 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@45 enum_list $@46 . '}'

    '}'  shift, and go to state 784


State 555

  614 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 614 (optional_structure_parent)


State 556

  531 struct_variable_declaration_list: struct_variable_declaration_list . $@38 structure_variable_declaration ';'
  533                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@39 function_declaration_header ';'
  535                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@40 function_declaration_header expression_block
  536                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  624 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 785
    '}'  shift, and go to state 786

    "def"     reduce using rule 123 (optional_annotation_list)
    $default  reduce using rule 530 ($@38)

    optional_annotation_list  go to state 787
    $@38                      go to state 788


State 557

  580 global_variable_declaration_list: global_variable_declaration_list $@41 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 580 (global_variable_declaration_list)


State 558

  517 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 517 (optional_field_annotation)


State 559

  498 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 656


State 560

  259 expression_keyword: "keyword" . '<' $@11 type_declaration_no_options_list '>' $@12 expr

    '<'  shift, and go to state 690


State 561

  499 expr: expression_keyword .

    $default  reduce using rule 499 (expr)


State 562

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  569 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 789


State 563

  570 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 570 (let_variable_name_with_pos_list)


State 564

  571 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  572                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 790

    $default  reduce using rule 571 (let_variable_name_with_pos_list)


State 565

  573 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  574                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  575                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 566
    "??"        shift, and go to state 403
    ":="        shift, and go to state 567
    '='         shift, and go to state 568
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    ';'         shift, and go to state 791
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 792
    dim_list               go to state 409


State 566

  564 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 564 (copy_or_move_or_clone)


State 567

  565 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 565 (copy_or_move_or_clone)


State 568

  563 copy_or_move_or_clone: '=' .

    $default  reduce using rule 563 (copy_or_move_or_clone)


State 569

  576 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  577                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 793
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 794
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 570

  690 type_declaration_no_options: "type" '<' $@53 . type_declaration '>' $@54

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 795


State 571

  713 type_declaration_no_options: "array" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 796


State 572

  716 type_declaration_no_options: "table" '<' $@60 . table_type_pair '>' $@61

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    table_type_pair              go to state 797
    type_declaration_no_options  go to state 350
    type_declaration             go to state 798


State 573

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  691 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 799


State 574

  719 type_declaration_no_options: "iterator" '<' $@62 . type_declaration '>' $@63

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 800


State 575

  709 type_declaration_no_options: "smart_ptr" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 801


State 576

  668 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 802


State 577

  677 bitfield_type_declaration: "bitfield" '<' $@51 . bitfield_bits '>' $@52

    "name"  shift, and go to state 803

    bitfield_bits  go to state 804


State 578

  723 type_declaration_no_options: "block" '<' $@64 . type_declaration '>' $@65

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 805


State 579

  726 type_declaration_no_options: "block" '<' $@66 . optional_function_argument_list optional_function_type '>' $@67

    '('  shift, and go to state 282

    $default  reduce using rule 125 (optional_function_argument_list)

    optional_function_argument_list  go to state 806


State 580

  730 type_declaration_no_options: "function" '<' $@68 . type_declaration '>' $@69

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 807


State 581

  733 type_declaration_no_options: "function" '<' $@70 . optional_function_argument_list optional_function_type '>' $@71

    '('  shift, and go to state 282

    $default  reduce using rule 125 (optional_function_argument_list)

    optional_function_argument_list  go to state 808


State 582

  737 type_declaration_no_options: "lambda" '<' $@72 . type_declaration '>' $@73

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 809


State 583

  740 type_declaration_no_options: "lambda" '<' $@74 . optional_function_argument_list optional_function_type '>' $@75

    '('  shift, and go to state 282

    $default  reduce using rule 125 (optional_function_argument_list)

    optional_function_argument_list  go to state 810


State 584

  743 type_declaration_no_options: "tuple" '<' $@76 . tuple_type_list '>' $@77

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 603
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 811
    tuple_type_list              go to state 812
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 606


State 585

  746 type_declaration_no_options: "variant" '<' $@78 . variant_type_list '>' $@79

    "name"  shift, and go to state 608

    variant_type       go to state 813
    variant_type_list  go to state 814


State 586

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  669 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 815


State 587

  694 type_declaration_no_options: '$' name_in_namespace '<' . $@55 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 693 ($@55)

    $@55  go to state 816


State 588

  692 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 251 (optional_expr_list)

    string_builder          go to state 500
    expr_reader             go to state 501
    optional_expr_list      go to state 817
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 818
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 589

  704 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 704 (type_declaration_no_options)


State 590

  705 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 705 (type_declaration_no_options)


State 591

  698 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 698 (type_declaration_no_options)


State 592

  700 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 700 (type_declaration_no_options)


State 593

  695 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 819


State 594

  703 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 703 (type_declaration_no_options)


State 595

  687 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 687 (type_declaration_no_options)


State 596

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  680 dim_list: '[' expr . ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 820


State 597

  681 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 821
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 598

  749 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 749 (type_declaration)


State 599

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  748 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 748 (type_declaration)

    dim_list  go to state 409


State 600

  674 bitfield_alias_bits: bitfield_alias_bits "name" . ';'

    ';'  shift, and go to state 822


State 601

  673 bitfield_alias_bits: bitfield_alias_bits ';' .

    $default  reduce using rule 673 (bitfield_alias_bits)


State 602

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@88 "name" $@89 '{' $@90 bitfield_alias_bits $@91 . '}'

    '}'  shift, and go to state 823


State 603

  268 name_in_namespace: "name" .
  269                  | "name" . "::" "name"
  543 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 824

    $default  reduce using rule 268 (name_in_namespace)


State 604

  547 tuple_alias_type_list: tuple_alias_type_list ';' .

    $default  reduce using rule 547 (tuple_alias_type_list)


State 605

  548 tuple_alias_type_list: tuple_alias_type_list tuple_type . ';'

    ';'  shift, and go to state 825


State 606

  542 tuple_type: type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 542 (tuple_type)


State 607

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@80 "name" $@81 '{' $@82 tuple_alias_type_list $@83 . '}'

    '}'  shift, and go to state 826


State 608

  549 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 827


State 609

  553 variant_alias_type_list: variant_alias_type_list ';' .

    $default  reduce using rule 553 (variant_alias_type_list)


State 610

  554 variant_alias_type_list: variant_alias_type_list variant_type . ';'

    ';'  shift, and go to state 828


State 611

  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@84 "name" $@85 '{' $@86 variant_alias_type_list $@87 . '}'

    '}'  shift, and go to state 829


State 612

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  539 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 830


State 613

  538 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 538 (function_argument_declaration)


State 614

  629 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 831
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 615

  630 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 832


State 616

  556 copy_or_move: "<-" .

    $default  reduce using rule 556 (copy_or_move)


State 617

  631 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  632                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 833


State 618

  555 copy_or_move: '=' .

    $default  reduce using rule 555 (copy_or_move)


State 619

  559 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  560                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 834


State 620

  558 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 558 (variable_declaration)


State 621

  561 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  562                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 835
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 836
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 622

  541 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 541 (function_argument_list)


State 623

  802 make_struct_decl: "struct" '<' . $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    $default  reduce using rule 800 ($@92)

    $@92  go to state 837


State 624

  805 make_struct_decl: "class" '<' . $@94 type_declaration_no_options '>' $@95 '(' make_struct_dim ')'

    $default  reduce using rule 803 ($@94)

    $@94  go to state 838


State 625

   81 expression_while_loop: "while" expr . expression_block
   84                      | "while" expr . $@7 error $@8 ';'
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '{'    shift, and go to state 284

    $default  reduce using rule 82 ($@7)

    $@7               go to state 839
    expression_block  go to state 840


State 626

   79 expression_for_loop: "for" $@6 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 841


State 627

  275 new_type_declaration: '<' . $@15 type_declaration '>' $@16

    $default  reduce using rule 273 ($@15)

    $@15  go to state 842


State 628

  277 expr_new: "new" new_type_declaration .
  278         | "new" new_type_declaration . '(' ')'
  279         | "new" new_type_declaration . '(' expr_list ')'
  280         | "new" new_type_declaration . '(' make_struct_dim ')'

    '('  shift, and go to state 843

    '('       [reduce using rule 277 (expr_new)]
    $default  reduce using rule 277 (expr_new)


State 629

  276 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 276 (new_type_declaration)


State 630

  281 expr_new: "new" make_decl .

    $default  reduce using rule 281 (expr_new)


State 631

  320 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  321               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  322               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 844


State 632

  319 expr_type_decl: "type" '<' . $@23 type_declaration '>' $@24

    $default  reduce using rule 317 ($@23)

    $@23  go to state 845


State 633

  829 make_dim_decl: "array" '<' . $@102 type_declaration_no_options '>' $@103 '(' expr_list optional_comma ')'

    $default  reduce using rule 827 ($@102)

    $@102  go to state 846


State 634

  826 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 847
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 635

  286 expression_return_no_pipe: "return" "<-" . expr_list
  289 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 848
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 849
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 639
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 636

  288 expression_return: "return" expr_pipe .

    $default  reduce using rule 288 (expression_return)


State 637

  285 expression_return_no_pipe: "return" expr_list .
  324 expr_list: expr_list . ',' expr

    ','  shift, and go to state 850

    $default  reduce using rule 285 (expression_return_no_pipe)


State 638

  263 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 724


State 639

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  323 expr_list: expr .
  351 expr_assign: expr .
  352            | expr . '=' expr
  353            | expr . "<-" expr
  354            | expr . ":=" expr
  355            | expr . "&=" expr
  356            | expr . "|=" expr
  357            | expr . "^=" expr
  358            | expr . "&&=" expr
  359            | expr . "||=" expr
  360            | expr . "^^=" expr
  361            | expr . "+=" expr
  362            | expr . "-=" expr
  363            | expr . "*=" expr
  364            | expr . "/=" expr
  365            | expr . "%=" expr
  366            | expr . "<<=" expr
  367            | expr . ">>=" expr
  368            | expr . "<<<=" expr
  369            | expr . ">>>=" expr
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 851
    "-="    shift, and go to state 852
    "/="    shift, and go to state 853
    "*="    shift, and go to state 854
    "%="    shift, and go to state 855
    "&="    shift, and go to state 856
    "|="    shift, and go to state 857
    "^="    shift, and go to state 858
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 859
    ">>="   shift, and go to state 860
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 861
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 862
    ">>>="  shift, and go to state 863
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 864
    "||="   shift, and go to state 865
    "^^="   shift, and go to state 866
    ".."    shift, and go to state 764
    '='     shift, and go to state 867
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670

    " <|"     reduce using rule 351 (expr_assign)
    $default  reduce using rule 323 (expr_list)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 640

  295 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 868


State 641

  841 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  842                | "table" '<' . type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 869


State 642

  840 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 705
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    expr_map_tuple_list     go to state 870
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 643

  272 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 871
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 644

  271 expression_delete: "delete" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 271 (expression_delete)


State 645

  466 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 872
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 646

   85 expression_with: "with" expr . expression_block
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '{'    shift, and go to state 284

    expression_block  go to state 873


State 647

   87 expression_with_alias: "assume" "name" . '=' $@9 expr

    '='  shift, and go to state 874


State 648

  310 expr_cast: "cast" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 308 ($@17)

    $@17  go to state 875


State 649

  313 expr_cast: "upcast" '<' . $@19 type_declaration_no_options '>' $@20 expr

    $default  reduce using rule 311 ($@19)

    $@19  go to state 876


State 650

  467 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 877
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 651

  246 expression_any: "pass" ';' .

    $default  reduce using rule 246 (expression_any)


State 652

  316 expr_cast: "reinterpret" '<' . $@21 type_declaration_no_options '>' $@22 expr

    $default  reduce using rule 314 ($@21)

    $@21  go to state 878


State 653

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 879


State 654

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 880


State 655

   56 expression_goto: "goto" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 56 (expression_goto)


State 656

  498 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 881
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 657

   80 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 80 (expression_unsafe)


State 658

  833 make_dim_decl: "fixed_array" '<' . $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')'

    $default  reduce using rule 831 ($@104)

    $@104  go to state 882


State 659

  830 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 883
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 660

  811 make_struct_decl: "default" '<' . $@98 type_declaration_no_options '>' $@99

    $default  reduce using rule 809 ($@98)

    $@98  go to state 884


State 661

  820 make_tuple_call: "tuple" '<' . $@100 type_declaration_no_options '>' $@101 '(' make_struct_dim ')'

    $default  reduce using rule 818 ($@100)

    $@100  go to state 885


State 662

  817 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 886
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 663

  808 make_struct_decl: "variant" '<' . $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

    $default  reduce using rule 806 ($@96)

    $@96  go to state 887


State 664

  468 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  469     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 888


State 665

  291 expression_yield_no_pipe: "yield" "<-" . expr
  294 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 889
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 890
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 666

  293 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 293 (expression_yield)


State 667

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  290 expression_yield_no_pipe: "yield" expr .
  351 expr_assign: expr .
  352            | expr . '=' expr
  353            | expr . "<-" expr
  354            | expr . ":=" expr
  355            | expr . "&=" expr
  356            | expr . "|=" expr
  357            | expr . "^=" expr
  358            | expr . "&&=" expr
  359            | expr . "||=" expr
  360            | expr . "^^=" expr
  361            | expr . "+=" expr
  362            | expr . "-=" expr
  363            | expr . "*=" expr
  364            | expr . "/=" expr
  365            | expr . "%=" expr
  366            | expr . "<<=" expr
  367            | expr . ">>=" expr
  368            | expr . "<<<=" expr
  369            | expr . ">>>=" expr
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 851
    "-="    shift, and go to state 852
    "/="    shift, and go to state 853
    "*="    shift, and go to state 854
    "%="    shift, and go to state 855
    "&="    shift, and go to state 856
    "|="    shift, and go to state 857
    "^="    shift, and go to state 858
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 859
    ">>="   shift, and go to state 860
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 861
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 862
    ">>>="  shift, and go to state 863
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 864
    "||="   shift, and go to state 865
    "^^="   shift, and go to state 866
    ".."    shift, and go to state 764
    '='     shift, and go to state 867
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670

    " <|"     reduce using rule 351 (expr_assign)
    $default  reduce using rule 290 (expression_yield_no_pipe)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 668

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  452     | "++" expr .
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 452 (expr)


State 669

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  453     | "--" expr .
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 453 (expr)


State 670

  329 block_or_lambda: '@' .
  330                | '@' . '@'

    '@'  shift, and go to state 891

    $default  reduce using rule 329 (block_or_lambda)


State 671

  339 expr_block: expression_block .

    $default  reduce using rule 339 (expr_block)


State 672

  340 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 123 (optional_annotation_list)

    optional_annotation_list  go to state 892


State 673

  266 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 266 (expr_pipe)


State 674

  264 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 264 (expr_pipe)


State 675

  265 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 265 (expr_pipe)


State 676

  500 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 893
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 677

  501 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 894
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 678

  502 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 895
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 679

  503 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 896
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 680

  504 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 897
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 681

  506 expr_mtag: "$c" '(' . expr ')' '(' ')'
  507          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 898
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 682

  848 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 899


State 683

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  794 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  795                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  796                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  797                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  824 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "const"                           shift, and go to state 399
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "where"                           shift, and go to state 900
    "reinterpret"                     shift, and go to state 452
    "implicit"                        shift, and go to state 400
    "explicit"                        shift, and go to state 401
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "=="                              shift, and go to state 402
    "??"                              shift, and go to state 403
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 901
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 902
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '?'                               shift, and go to state 404
    '&'                               shift, and go to state 405
    '-'                               shift, and go to state 903
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 904
    '('                               shift, and go to state 905
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498
    '#'                               shift, and go to state 408

    $default  reduce using rule 780 (optional_block)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 906
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    dim_list                go to state 409
    make_decl               go to state 545
    make_struct_fields      go to state 907
    make_struct_dim         go to state 908
    optional_block          go to state 909
    make_struct_decl        go to state 546
    make_tuple              go to state 910
    make_tuple_call         go to state 547
    make_dim                go to state 911
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 684

  849 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 912


State 685

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  798 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  799                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  825 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "const"                           shift, and go to state 399
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "implicit"                        shift, and go to state 400
    "explicit"                        shift, and go to state 401
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "=="                              shift, and go to state 402
    "??"                              shift, and go to state 403
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 901
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 902
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '?'                               shift, and go to state 404
    '&'                               shift, and go to state 405
    '-'                               shift, and go to state 903
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 904
    '('                               shift, and go to state 913
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498
    '#'                               shift, and go to state 408

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 906
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    dim_list                go to state 409
    make_decl               go to state 545
    make_struct_fields      go to state 907
    make_struct_dim         go to state 914
    make_struct_decl        go to state 546
    make_tuple              go to state 910
    make_tuple_call         go to state 547
    make_dim                go to state 915
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 686

  851 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 916


State 687

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  815 make_map_tuple: expr . "=>" expr
  816               | expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "=>"   shift, and go to state 917
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 816 (make_map_tuple)


State 688

  834 make_table: make_map_tuple .

    $default  reduce using rule 834 (make_table)


State 689

  835 make_table: make_table . ';' make_map_tuple
  839 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    ";}}"  shift, and go to state 918
    ';'    shift, and go to state 919
    '}'    shift, and go to state 920

    optional_trailing_semicolon_cur_cur  go to state 921


State 690

  259 expression_keyword: "keyword" '<' . $@11 type_declaration_no_options_list '>' $@12 expr

    $default  reduce using rule 257 ($@11)

    $@11  go to state 922


State 691

  250 expr_keyword: "keyword" expr . expression_block
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '{'    shift, and go to state 284

    expression_block  go to state 923


State 692

  262 expression_keyword: "type function" '<' . $@13 type_declaration_no_options_list '>' $@14 optional_expr_list_in_braces

    $default  reduce using rule 260 ($@13)

    $@13  go to state 924


State 693

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 925
    "{"                   shift, and go to state 926

    character_sequence  go to state 927


State 694

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  429 expr: '-' expr .
  430     | expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 429 (expr)


State 695

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  428 expr: '+' expr .
  430     | expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 428 (expr)


State 696

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  465     | '*' expr .
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 465 (expr)


State 697

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  427 expr: '~' expr .
  430     | expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 427 (expr)


State 698

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  426 expr: '!' expr .
  430     | expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 426 (expr)


State 699

  847 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 928


State 700

  324 expr_list: expr_list . ',' expr
  823 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 929

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 930


State 701

  323 expr_list: expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 323 (expr_list)


State 702

  324 expr_list: expr_list . ',' expr
  456 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 929

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 931


State 703

  330 block_or_lambda: '@' '@' .
  397 func_addr_expr: '@' '@' . func_addr_name
  400               | '@' '@' . '<' $@26 type_declaration_no_options '>' $@27 func_addr_name
  403               | '@' '@' . '<' $@28 optional_function_argument_list optional_function_type '>' $@29 func_addr_name
  515 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 932
    "$c"    shift, and go to state 933
    "name"  shift, and go to state 59
    '<'     shift, and go to state 934

    $default  reduce using rule 330 (block_or_lambda)

    name_in_namespace  go to state 935
    func_addr_name     go to state 936


State 704

  850 array_comprehension: '{' "for" . variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 937


State 705

  836 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 836 (expr_map_tuple_list)


State 706

  837 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  838 make_table_decl: '{' expr_map_tuple_list . optional_comma '}'

    ','  shift, and go to state 938

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 939


State 707

  223 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 940


State 708

  244 expression_any: expression_label ';' .

    $default  reduce using rule 244 (expression_any)


State 709

  245 expression_any: expression_goto ';' .

    $default  reduce using rule 245 (expression_any)


State 710

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
   75                        | if_or_static_if expr . $@3 error $@4 ';'
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '{'    shift, and go to state 284

    $default  reduce using rule 73 ($@3)

    $@3               go to state 941
    expression_block  go to state 942


State 711

   77 expression_if_then_else: expression_if_one_liner "if" . $@5 expr expression_else_one_liner ';'

    $default  reduce using rule 76 ($@5)

    $@5  go to state 943


State 712

  343 expr_full_block_assumed_piped: block_or_lambda . $@25 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 342 ($@25)

    $@25  go to state 944


State 713

  225 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 225 (expr_call_pipe)


State 714

  497 expr: name_in_namespace "name" .

    $default  reduce using rule 497 (expr)


State 715

  391 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  392                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  411 expr_call: name_in_namespace '(' . ')'
  412          | name_in_namespace '(' . make_struct_dim ')'
  413          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 901
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 902
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 945
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 946
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 947
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_fields      go to state 907
    make_struct_dim         go to state 948
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 716

  231 expression_any: expression_delete ';' .

    $default  reduce using rule 231 (expression_any)


State 717

  238 expression_any: expression_break ';' .

    $default  reduce using rule 238 (expression_any)


State 718

  239 expression_any: expression_continue ';' .

    $default  reduce using rule 239 (expression_any)


State 719

  287 expression_return: expression_return_no_pipe ';' .

    $default  reduce using rule 287 (expression_return)


State 720

  292 expression_yield: expression_yield_no_pipe ';' .

    $default  reduce using rule 292 (expression_yield)


State 721

  298 optional_in_scope: "inscope" .

    $default  reduce using rule 298 (optional_in_scope)


State 722

  306 expression_let: kwd_let optional_in_scope . let_variable_declaration
  307               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 299
    "[["    shift, and go to state 949
    "name"  shift, and go to state 300
    '('     shift, and go to state 950

    tuple_expansion_variable_declaration  go to state 951
    let_variable_name_with_pos_list       go to state 301
    let_variable_declaration              go to state 952


State 723

  341 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 953

    $default  reduce using rule 337 (optional_capture_list)

    optional_capture_list  go to state 954


State 724

  263 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 955


State 725

  230 expression_any: expr_assign ';' .

    $default  reduce using rule 230 (expression_any)


State 726

  474 expr: expr "is" . "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr "is" . basic_type_declaration
  476     | expr "is" . "name"
  514 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 956
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 458
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 957
    "name"      shift, and go to state 958

    basic_type_declaration  go to state 959


State 727

  477 expr: expr "as" . "name"
  480     | expr "as" . "type" '<' $@34 type_declaration '>' $@35
  481     | expr "as" . basic_type_declaration
  512 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 960
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 458
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 961
    "name"      shift, and go to state 962

    basic_type_declaration  go to state 963


State 728

  361 expr_assign: expr "+=" . expr
  382 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 968
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 969
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 729

  362 expr_assign: expr "-=" . expr
  383 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 970
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 971
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 730

  364 expr_assign: expr "/=" . expr
  385 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 972
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 973
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 731

  363 expr_assign: expr "*=" . expr
  384 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 974
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 975
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 732

  365 expr_assign: expr "%=" . expr
  386 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 976
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 977
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 733

  355 expr_assign: expr "&=" . expr
  376 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 978
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 979
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 734

  356 expr_assign: expr "|=" . expr
  377 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 980
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 981
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 735

  357 expr_assign: expr "^=" . expr
  378 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 982
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 983
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 736

  430 expr: expr "<<" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 984
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 737

  431 expr: expr ">>" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 985
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 738

  454 expr: expr "++" .

    $default  reduce using rule 454 (expr)


State 739

  455 expr: expr "--" .

    $default  reduce using rule 455 (expr)


State 740

  443 expr: expr "<=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 986
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 741

  366 expr_assign: expr "<<=" . expr
  387 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 987
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 988
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 742

  367 expr_assign: expr ">>=" . expr
  388 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 989
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 990
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 743

  444 expr: expr ">=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 991
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 744

  441 expr: expr "==" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 992
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 745

  442 expr: expr "!=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 993
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 746

  393 expr_method_call: expr "->" . "name" '(' ')'
  394                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 994


State 747

  353 expr_assign: expr "<-" . expr
  375 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 995
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 996
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 748

  470 expr: expr "??" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 997
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 749

  461 expr: expr "?." . "name"
  509 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 998
    "name"  shift, and go to state 999


State 750

  459 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1000
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 751

  494 expr: expr "<|" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1001
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 752

  495 expr: expr "|>" . expr
  496     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1002
    expr_mtag               go to state 543
    basic_type_declaration  go to state 1003
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 753

  354 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1004
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 754

  432 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1005
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 755

  433 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1006
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 756

  368 expr_assign: expr "<<<=" . expr
  389 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 1007
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1008
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 757

  369 expr_assign: expr ">>>=" . expr
  390 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 1009
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1010
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 758

  448 expr: expr "&&" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1011
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 759

  449 expr: expr "||" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1012
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 760

  450 expr: expr "^^" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1013
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 761

  358 expr_assign: expr "&&=" . expr
  379 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 1014
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1015
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 762

  359 expr_assign: expr "||=" . expr
  380 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 1016
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1017
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 763

  360 expr_assign: expr "^^=" . expr
  381 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 1018
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1019
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 764

  451 expr: expr ".." . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1020
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 765

  352 expr_assign: expr '=' . expr
  374 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 964
    "@ <|"                            shift, and go to state 965
    "@@ <|"                           shift, and go to state 966
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 967
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign_pipe_right  go to state 1021
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1022
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 766

  471 expr: expr '?' . expr ':' expr
  482     | expr '?' . "as" "name"
  485     | expr '?' . "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr '?' . "as" basic_type_declaration
  513 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "as"                              shift, and go to state 1023
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1024
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 767

  446 expr: expr '|' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1025
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 768

  447 expr: expr '^' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1026
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 769

  445 expr: expr '&' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1027
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 770

  439 expr: expr '<' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1028
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 771

  440 expr: expr '>' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1029
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 772

  435 expr: expr '-' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1030
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 773

  434 expr: expr '+' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1031
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 774

  436 expr: expr '*' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1032
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 775

  437 expr: expr '/' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1033
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 776

  438 expr: expr '%' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1034
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 777

  404 expr_field: expr '.' . "name"
  405           | expr '.' . '.' "name"
  406           | expr '.' . "name" '(' ')'
  407           | expr '.' . "name" '(' expr_list ')'
  410           | expr '.' . $@30 error $@31
  458 expr: expr '.' . '[' expr ']'
  460     | expr '.' . "?[" expr ']'
  462     | expr '.' . "?." "name"
  508 expr_mtag: expr '.' . "$f" '(' expr ')'
  510          | expr '.' . '.' "$f" '(' expr ')'
  511          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 1035
    "?["    shift, and go to state 1036
    "$f"    shift, and go to state 1037
    "name"  shift, and go to state 1038
    '.'     shift, and go to state 1039
    '['     shift, and go to state 1040

    $default  reduce using rule 408 ($@30)

    $@30  go to state 1041


State 778

  457 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1042
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 779

  224 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 224 (expr_call_pipe)


State 780

  414 expr_call: basic_type_declaration '(' . ')'
  415          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1043
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1044
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 781

  590 enum_list: enum_list . ';'
  591          | enum_list . "name" ';'
  592          | enum_list . "name" '=' expr ';'
  612 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@47 enum_list . $@48 '}'

    "name"  shift, and go to state 552
    ';'     shift, and go to state 553

    $default  reduce using rule 611 ($@48)

    $@48  go to state 1045


State 782

  592 enum_list: enum_list "name" '=' . expr ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1046
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 783

  591 enum_list: enum_list "name" ';' .

    $default  reduce using rule 591 (enum_list)


State 784

  609 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@45 enum_list $@46 '}' .

    $default  reduce using rule 609 (enum_declaration)


State 785

  124 optional_annotation_list: '[' . annotation_list ']'
  536 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 1047
    name_in_namespace             go to state 70


State 786

  624 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 624 (optional_struct_variable_declaration_list)


State 787

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@39 function_declaration_header ';'
  535                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@40 function_declaration_header expression_block

    "def"  shift, and go to state 1048


State 788

  531 struct_variable_declaration_list: struct_variable_declaration_list $@38 . structure_variable_declaration ';'

    "[["  shift, and go to state 218

    $default  reduce using rule 516 (optional_field_annotation)

    optional_field_annotation       go to state 1049
    structure_variable_declaration  go to state 1050


State 789

  569 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 569 (let_variable_name_with_pos_list)


State 790

  572 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1051


State 791

  573 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 573 (let_variable_declaration)


State 792

  574 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'
  575                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 1052
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1053
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 793

  577 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 577 (let_variable_declaration)


State 794

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  351 expr_assign: expr .
  352            | expr . '=' expr
  353            | expr . "<-" expr
  354            | expr . ":=" expr
  355            | expr . "&=" expr
  356            | expr . "|=" expr
  357            | expr . "^=" expr
  358            | expr . "&&=" expr
  359            | expr . "||=" expr
  360            | expr . "^^=" expr
  361            | expr . "+=" expr
  362            | expr . "-=" expr
  363            | expr . "*=" expr
  364            | expr . "/=" expr
  365            | expr . "%=" expr
  366            | expr . "<<=" expr
  367            | expr . ">>=" expr
  368            | expr . "<<<=" expr
  369            | expr . ">>>=" expr
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  576 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 851
    "-="    shift, and go to state 852
    "/="    shift, and go to state 853
    "*="    shift, and go to state 854
    "%="    shift, and go to state 855
    "&="    shift, and go to state 856
    "|="    shift, and go to state 857
    "^="    shift, and go to state 858
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 859
    ">>="   shift, and go to state 860
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 861
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 862
    ">>>="  shift, and go to state 863
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 864
    "||="   shift, and go to state 865
    "^^="   shift, and go to state 866
    ".."    shift, and go to state 764
    '='     shift, and go to state 867
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670
    ';'     shift, and go to state 1054

    $default  reduce using rule 351 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 795

  690 type_declaration_no_options: "type" '<' $@53 type_declaration . '>' $@54
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1055


State 796

  713 type_declaration_no_options: "array" '<' $@58 type_declaration . '>' $@59
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1056


State 797

  716 type_declaration_no_options: "table" '<' $@60 table_type_pair . '>' $@61

    '>'  shift, and go to state 1057


State 798

  678 table_type_pair: type_declaration .
  679                | type_declaration . ';' type_declaration
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    ';'  shift, and go to state 1058

    $default  reduce using rule 678 (table_type_pair)


State 799

  691 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 691 (type_declaration_no_options)


State 800

  719 type_declaration_no_options: "iterator" '<' $@62 type_declaration . '>' $@63
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1059


State 801

  709 type_declaration_no_options: "smart_ptr" '<' $@56 type_declaration . '>' $@57
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1060


State 802

  668 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 668 (auto_type_declaration)


State 803

  670 bitfield_bits: "name" .

    $default  reduce using rule 670 (bitfield_bits)


State 804

  671 bitfield_bits: bitfield_bits . ';' "name"
  677 bitfield_type_declaration: "bitfield" '<' $@51 bitfield_bits . '>' $@52

    '>'  shift, and go to state 1061
    ';'  shift, and go to state 1062


State 805

  723 type_declaration_no_options: "block" '<' $@64 type_declaration . '>' $@65
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1063


State 806

  726 type_declaration_no_options: "block" '<' $@66 optional_function_argument_list . optional_function_type '>' $@67

    ':'  shift, and go to state 367

    $default  reduce using rule 128 (optional_function_type)

    optional_function_type  go to state 1064


State 807

  730 type_declaration_no_options: "function" '<' $@68 type_declaration . '>' $@69
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1065


State 808

  733 type_declaration_no_options: "function" '<' $@70 optional_function_argument_list . optional_function_type '>' $@71

    ':'  shift, and go to state 367

    $default  reduce using rule 128 (optional_function_type)

    optional_function_type  go to state 1066


State 809

  737 type_declaration_no_options: "lambda" '<' $@72 type_declaration . '>' $@73
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1067


State 810

  740 type_declaration_no_options: "lambda" '<' $@74 optional_function_argument_list . optional_function_type '>' $@75

    ':'  shift, and go to state 367

    $default  reduce using rule 128 (optional_function_type)

    optional_function_type  go to state 1068


State 811

  544 tuple_type_list: tuple_type .

    $default  reduce using rule 544 (tuple_type_list)


State 812

  545 tuple_type_list: tuple_type_list . ';' tuple_type
  743 type_declaration_no_options: "tuple" '<' $@76 tuple_type_list . '>' $@77

    '>'  shift, and go to state 1069
    ';'  shift, and go to state 1070


State 813

  550 variant_type_list: variant_type .

    $default  reduce using rule 550 (variant_type_list)


State 814

  551 variant_type_list: variant_type_list . ';' variant_type
  746 type_declaration_no_options: "variant" '<' $@78 variant_type_list . '>' $@79

    '>'  shift, and go to state 1071
    ';'  shift, and go to state 1072


State 815

  669 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 669 (auto_type_declaration)


State 816

  694 type_declaration_no_options: '$' name_in_namespace '<' $@55 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1073
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1074


State 817

  692 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1075


State 818

  252 optional_expr_list: expr_list .
  324 expr_list: expr_list . ',' expr

    ','  shift, and go to state 850

    $default  reduce using rule 252 (optional_expr_list)


State 819

  695 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 695 (type_declaration_no_options)


State 820

  680 dim_list: '[' expr ']' .

    $default  reduce using rule 680 (dim_list)


State 821

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  681 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 1076


State 822

  674 bitfield_alias_bits: bitfield_alias_bits "name" ';' .

    $default  reduce using rule 674 (bitfield_alias_bits)


State 823

  764 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@88 "name" $@89 '{' $@90 bitfield_alias_bits $@91 '}' .

    $default  reduce using rule 764 (bitfield_alias_declaration)


State 824

  543 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1077


State 825

  548 tuple_alias_type_list: tuple_alias_type_list tuple_type ';' .

    $default  reduce using rule 548 (tuple_alias_type_list)


State 826

  754 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@80 "name" $@81 '{' $@82 tuple_alias_type_list $@83 '}' .

    $default  reduce using rule 754 (tuple_alias_declaration)


State 827

  549 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1078


State 828

  554 variant_alias_type_list: variant_alias_type_list variant_type ';' .

    $default  reduce using rule 554 (variant_alias_type_list)


State 829

  759 variant_alias_declaration: "variant" optional_public_or_private_alias $@84 "name" $@85 '{' $@86 variant_alias_type_list $@87 '}' .

    $default  reduce using rule 759 (variant_alias_declaration)


State 830

  539 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 539 (function_argument_declaration)


State 831

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  629 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1079


State 832

  630 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 630 (variable_name_with_pos_list)


State 833

  631 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  632                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1080

    $default  reduce using rule 631 (variable_name_with_pos_list)


State 834

  559 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  560                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 616
    '='   shift, and go to state 618
    '|'   shift, and go to state 410

    $default  reduce using rule 559 (variable_declaration)

    copy_or_move  go to state 1081


State 835

  562 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 562 (variable_declaration)


State 836

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  351 expr_assign: expr .
  352            | expr . '=' expr
  353            | expr . "<-" expr
  354            | expr . ":=" expr
  355            | expr . "&=" expr
  356            | expr . "|=" expr
  357            | expr . "^=" expr
  358            | expr . "&&=" expr
  359            | expr . "||=" expr
  360            | expr . "^^=" expr
  361            | expr . "+=" expr
  362            | expr . "-=" expr
  363            | expr . "*=" expr
  364            | expr . "/=" expr
  365            | expr . "%=" expr
  366            | expr . "<<=" expr
  367            | expr . ">>=" expr
  368            | expr . "<<<=" expr
  369            | expr . ">>>=" expr
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  561 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 851
    "-="    shift, and go to state 852
    "/="    shift, and go to state 853
    "*="    shift, and go to state 854
    "%="    shift, and go to state 855
    "&="    shift, and go to state 856
    "|="    shift, and go to state 857
    "^="    shift, and go to state 858
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 859
    ">>="   shift, and go to state 860
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 861
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 862
    ">>>="  shift, and go to state 863
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 864
    "||="   shift, and go to state 865
    "^^="   shift, and go to state 866
    ".."    shift, and go to state 764
    '='     shift, and go to state 867
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670

    " <|"     reduce using rule 351 (expr_assign)
    $default  reduce using rule 561 (variable_declaration)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 837

  802 make_struct_decl: "struct" '<' $@92 . type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1082


State 838

  805 make_struct_decl: "class" '<' $@94 . type_declaration_no_options '>' $@95 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1083


State 839

   84 expression_while_loop: "while" expr $@7 . error $@8 ';'

    error  shift, and go to state 1084


State 840

   81 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 81 (expression_while_loop)


State 841

   79 expression_for_loop: "for" $@6 variable_name_with_pos_list . "in" expr_list expression_block
  631 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  632                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1085
    ','   shift, and go to state 617


State 842

  275 new_type_declaration: '<' $@15 . type_declaration '>' $@16

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1086


State 843

  278 expr_new: "new" new_type_declaration '(' . ')'
  279         | "new" new_type_declaration '(' . expr_list ')'
  280         | "new" new_type_declaration '(' . make_struct_dim ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 901
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 902
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1087
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1088
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_fields      go to state 907
    make_struct_dim         go to state 1089
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 844

  320 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  321               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  322               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '<'                               shift, and go to state 1090
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1091
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 845

  319 expr_type_decl: "type" '<' $@23 . type_declaration '>' $@24

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1092


State 846

  829 make_dim_decl: "array" '<' $@102 . type_declaration_no_options '>' $@103 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1093


State 847

  324 expr_list: expr_list . ',' expr
  826 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 929

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 1094


State 848

  289 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 289 (expression_return)


State 849

  286 expression_return_no_pipe: "return" "<-" expr_list .
  324 expr_list: expr_list . ',' expr

    ','  shift, and go to state 850

    $default  reduce using rule 286 (expression_return_no_pipe)


State 850

  324 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1095
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 851

  361 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1096
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 852

  362 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1097
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 853

  364 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1098
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 854

  363 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1099
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 855

  365 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1100
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 856

  355 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1101
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 857

  356 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1102
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 858

  357 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1103
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 859

  366 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1104
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 860

  367 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1105
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 861

  353 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1106
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 862

  368 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1107
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 863

  369 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1108
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 864

  358 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1109
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 865

  359 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1110
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 866

  360 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1111
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 867

  352 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1112
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 868

  295 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1113


State 869

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  841 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  842                | "table" '<' type_declaration_no_options . ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1114
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    ';'         shift, and go to state 1115
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 870

  837 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  840 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 938

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 1116


State 871

  272 expression_delete: "delete" "explicit" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 272 (expression_delete)


State 872

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  466     | "deref" '(' expr . ')'
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1117


State 873

   85 expression_with: "with" expr expression_block .

    $default  reduce using rule 85 (expression_with)


State 874

   87 expression_with_alias: "assume" "name" '=' . $@9 expr

    $default  reduce using rule 86 ($@9)

    $@9  go to state 1118


State 875

  310 expr_cast: "cast" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1119


State 876

  313 expr_cast: "upcast" '<' $@19 . type_declaration_no_options '>' $@20 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1120


State 877

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  467     | "addr" '(' expr . ')'
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1121


State 878

  316 expr_cast: "reinterpret" '<' $@21 . type_declaration_no_options '>' $@22 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1122


State 879

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 880

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 881

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  498     | "unsafe" '(' expr . ')'
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1123


State 882

  833 make_dim_decl: "fixed_array" '<' $@104 . type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1124


State 883

  324 expr_list: expr_list . ',' expr
  830 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 929

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 1125


State 884

  811 make_struct_decl: "default" '<' $@98 . type_declaration_no_options '>' $@99

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1126


State 885

  820 make_tuple_call: "tuple" '<' $@100 . type_declaration_no_options '>' $@101 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1127


State 886

  324 expr_list: expr_list . ',' expr
  817 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 929

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 1128


State 887

  808 make_struct_decl: "variant" '<' $@96 . type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1129


State 888

  468 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  469     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1130
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 889

  294 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 294 (expression_yield)


State 890

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  291 expression_yield_no_pipe: "yield" "<-" expr .
  351 expr_assign: expr .
  352            | expr . '=' expr
  353            | expr . "<-" expr
  354            | expr . ":=" expr
  355            | expr . "&=" expr
  356            | expr . "|=" expr
  357            | expr . "^=" expr
  358            | expr . "&&=" expr
  359            | expr . "||=" expr
  360            | expr . "^^=" expr
  361            | expr . "+=" expr
  362            | expr . "-=" expr
  363            | expr . "*=" expr
  364            | expr . "/=" expr
  365            | expr . "%=" expr
  366            | expr . "<<=" expr
  367            | expr . ">>=" expr
  368            | expr . "<<<=" expr
  369            | expr . ">>>=" expr
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 851
    "-="    shift, and go to state 852
    "/="    shift, and go to state 853
    "*="    shift, and go to state 854
    "%="    shift, and go to state 855
    "&="    shift, and go to state 856
    "|="    shift, and go to state 857
    "^="    shift, and go to state 858
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 859
    ">>="   shift, and go to state 860
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 861
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 862
    ">>>="  shift, and go to state 863
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 864
    "||="   shift, and go to state 865
    "^^="   shift, and go to state 866
    ".."    shift, and go to state 764
    '='     shift, and go to state 867
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670

    " <|"     reduce using rule 351 (expr_assign)
    $default  reduce using rule 291 (expression_yield_no_pipe)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 891

  330 block_or_lambda: '@' '@' .

    $default  reduce using rule 330 (block_or_lambda)


State 892

  340 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 953

    $default  reduce using rule 337 (optional_capture_list)

    optional_capture_list  go to state 1131


State 893

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  500 expr_mtag: "$$" '(' expr . ')'
  508          | expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1132


State 894

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  501 expr_mtag: "$i" '(' expr . ')'
  508          | expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1133


State 895

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  502 expr_mtag: "$v" '(' expr . ')'
  508          | expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1134


State 896

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  503 expr_mtag: "$b" '(' expr . ')'
  508          | expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1135


State 897

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  504 expr_mtag: "$a" '(' expr . ')'
  508          | expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1136


State 898

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  506 expr_mtag: "$c" '(' expr . ')' '(' ')'
  507          | "$c" '(' expr . ')' '(' expr_list ')'
  508          | expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1137


State 899

  631 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  632                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  848 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1138
    ','   shift, and go to state 617


State 900

  781 optional_block: "where" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1139


State 901

  774 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  775                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1140


State 902

  268 name_in_namespace: "name" .
  269                  | "name" . "::" "name"
  770 make_struct_fields: "name" . copy_or_move expr
  771                   | "name" . ":=" expr

    "<-"  shift, and go to state 616
    ":="  shift, and go to state 1141
    "::"  shift, and go to state 98
    '='   shift, and go to state 618

    $default  reduce using rule 268 (name_in_namespace)

    copy_or_move  go to state 1142


State 903

  429 expr: '-' . expr
  695 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  698                            | type_declaration_no_options '-' . "const"
  700                            | type_declaration_no_options '-' . '&'
  703                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "const"                           shift, and go to state 591
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '&'                               shift, and go to state 592
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 1143
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498
    '#'                               shift, and go to state 594

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 694
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 904

  680 dim_list: '[' . expr ']'
  687 type_declaration_no_options: type_declaration_no_options '[' . ']'
  823 make_dim_decl: '[' . expr_list optional_comma ']'
  847 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    ']'                               shift, and go to state 595
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 700
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1144
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 905

  456 expr: '(' . expr_list optional_comma ')'
  796 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  797                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1145
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 702
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 906

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  812 make_tuple: expr .
  813           | expr . "=>" expr

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "=>"   shift, and go to state 1146
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 812 (make_tuple)


State 907

  772 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  773                   | make_struct_fields . ',' "name" ":=" expr
  776                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  778 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1147

    $default  reduce using rule 778 (make_struct_dim)


State 908

  779 make_struct_dim: make_struct_dim . ';' make_struct_fields
  794 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 900
    ';'      shift, and go to state 1148

    $default  reduce using rule 780 (optional_block)

    optional_block  go to state 1149


State 909

  795 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1150
    ",]]"  shift, and go to state 1151
    ']'    shift, and go to state 1152

    optional_trailing_delim_sqr_sqr  go to state 1153


State 910

  814 make_tuple: make_tuple . ',' expr
  821 make_dim: make_tuple .

    ','  shift, and go to state 1154

    $default  reduce using rule 821 (make_dim)


State 911

  822 make_dim: make_dim . ';' make_tuple
  824 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    ";]]"  shift, and go to state 1155
    ']'    shift, and go to state 1156
    ';'    shift, and go to state 1157

    optional_trailing_semicolon_sqr_sqr  go to state 1158


State 912

  631 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  632                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  849 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 1159
    ','   shift, and go to state 617


State 913

  456 expr: '(' . expr_list optional_comma ')'
  799 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1160
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 702
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 914

  779 make_struct_dim: make_struct_dim . ';' make_struct_fields
  798 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 900
    ';'      shift, and go to state 1148

    $default  reduce using rule 780 (optional_block)

    optional_block  go to state 1161


State 915

  822 make_dim: make_dim . ';' make_tuple
  825 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    ";}]"  shift, and go to state 1162
    ';'    shift, and go to state 1157
    '}'    shift, and go to state 1163

    optional_trailing_semicolon_cur_sqr  go to state 1164


State 916

  631 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  632                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  851 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "in"  shift, and go to state 1165
    ','   shift, and go to state 617


State 917

  815 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1166
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 918

  783 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 783 (optional_trailing_semicolon_cur_cur)


State 919

  835 make_table: make_table ';' . make_map_tuple

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 1167
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 920

  782 optional_trailing_semicolon_cur_cur: '}' . '}'

    '}'  shift, and go to state 1168


State 921

  839 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 839 (make_table_decl)


State 922

  259 expression_keyword: "keyword" '<' $@11 . type_declaration_no_options_list '>' $@12 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1169
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1074


State 923

  250 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 250 (expr_keyword)


State 924

  262 expression_keyword: "type function" '<' $@13 . type_declaration_no_options_list '>' $@14 optional_expr_list_in_braces

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1170
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1074


State 925

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 926

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1171
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 927

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 928

  631 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  632                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  847 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1172
    ','   shift, and go to state 617


State 929

  324 expr_list: expr_list ',' . expr
  846 optional_comma: ',' .

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 846 (optional_comma)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1095
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 930

  823 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1173


State 931

  456 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1174


State 932

  396 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1175


State 933

  515 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1176


State 934

  400 func_addr_expr: '@' '@' '<' . $@26 type_declaration_no_options '>' $@27 func_addr_name
  403               | '@' '@' '<' . $@28 optional_function_argument_list optional_function_type '>' $@29 func_addr_name

    ':'       reduce using rule 401 ($@28)
    '>'       reduce using rule 401 ($@28)
    '('       reduce using rule 401 ($@28)
    $default  reduce using rule 398 ($@26)

    $@26  go to state 1177
    $@28  go to state 1178


State 935

  395 func_addr_name: name_in_namespace .

    $default  reduce using rule 395 (func_addr_name)


State 936

  397 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 397 (func_addr_expr)


State 937

  631 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  632                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  850 array_comprehension: '{' "for" variable_name_with_pos_list . "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1179
    ','   shift, and go to state 617


State 938

  837 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  846 optional_comma: ',' .

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 846 (optional_comma)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 1180
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 939

  838 make_table_decl: '{' expr_map_tuple_list optional_comma . '}'

    '}'  shift, and go to state 1181


State 940

  223 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 247 (expressions)

    expressions  go to state 1182


State 941

   75 expression_if_then_else: if_or_static_if expr $@3 . error $@4 ';'

    error  shift, and go to state 1183


State 942

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1184
    "elif"         shift, and go to state 1185
    "static_elif"  shift, and go to state 1186

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1187
    expression_else      go to state 1188


State 943

   77 expression_if_then_else: expression_if_one_liner "if" $@5 . expr expression_else_one_liner ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1189
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 944

  343 expr_full_block_assumed_piped: block_or_lambda $@25 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 14

    $default  reduce using rule 123 (optional_annotation_list)

    optional_annotation_list  go to state 1190


State 945

  391 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  823 make_dim_decl: '[' . expr_list optional_comma ']'
  847 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 901
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 902
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 700
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_fields      go to state 1191
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 946

  411 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 411 (expr_call)


State 947

  324 expr_list: expr_list . ',' expr
  392 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  413 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1192
    ')'  shift, and go to state 1193


State 948

  412 expr_call: name_in_namespace '(' make_struct_dim . ')'
  779 make_struct_dim: make_struct_dim . ';' make_struct_fields

    ')'  shift, and go to state 1194
    ';'  shift, and go to state 1148


State 949

  302 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  304                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

    "name"  shift, and go to state 1195

    tuple_expansion  go to state 1196


State 950

  303 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  305                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr ';'

    "name"  shift, and go to state 1195

    tuple_expansion  go to state 1197


State 951

  307 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 307 (expression_let)


State 952

  306 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 306 (expression_let)


State 953

  338 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1198
    ":="  shift, and go to state 1199
    '='   shift, and go to state 1200
    '&'   shift, and go to state 1201

    capture_entry  go to state 1202
    capture_list   go to state 1203


State 954

  341 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 125 (optional_function_argument_list)

    optional_function_argument_list  go to state 1204


State 955

  263 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 263 (expr_pipe)


State 956

  474 expr: expr "is" "type" . '<' $@32 type_declaration_no_options '>' $@33

    '<'  shift, and go to state 1205


State 957

  514 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1206


State 958

  476 expr: expr "is" "name" .

    $default  reduce using rule 476 (expr)


State 959

  475 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 475 (expr)


State 960

  480 expr: expr "as" "type" . '<' $@34 type_declaration '>' $@35

    '<'  shift, and go to state 1207


State 961

  512 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1208


State 962

  477 expr: expr "as" "name" .

    $default  reduce using rule 477 (expr)


State 963

  481 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 481 (expr)


State 964

  372 expr_assign_pipe_right: "$ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1209


State 965

  370 expr_assign_pipe_right: "@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1210


State 966

  371 expr_assign_pipe_right: "@@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1211


State 967

  373 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 373 (expr_assign_pipe_right)


State 968

  382 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 382 (expr_assign_pipe)


State 969

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  361 expr_assign: expr "+=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 361 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 970

  383 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 383 (expr_assign_pipe)


State 971

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  362 expr_assign: expr "-=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 362 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 972

  385 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 385 (expr_assign_pipe)


State 973

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  364 expr_assign: expr "/=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 364 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 974

  384 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 384 (expr_assign_pipe)


State 975

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  363 expr_assign: expr "*=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 363 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 976

  386 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 386 (expr_assign_pipe)


State 977

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  365 expr_assign: expr "%=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 365 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 978

  376 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 376 (expr_assign_pipe)


State 979

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  355 expr_assign: expr "&=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 355 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 980

  377 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 377 (expr_assign_pipe)


State 981

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  356 expr_assign: expr "|=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 356 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 982

  378 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 378 (expr_assign_pipe)


State 983

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr "^=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 357 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 984

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  430     | expr "<<" expr .
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '-'   shift, and go to state 772
    '+'   shift, and go to state 773
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 430 (expr)


State 985

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  431     | expr ">>" expr .
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '-'   shift, and go to state 772
    '+'   shift, and go to state 773
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 431 (expr)


State 986

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  443     | expr "<=" expr .
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 443 (expr)


State 987

  387 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 387 (expr_assign_pipe)


State 988

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr "<<=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 989

  388 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 388 (expr_assign_pipe)


State 990

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  367 expr_assign: expr ">>=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 367 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 991

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  444     | expr ">=" expr .
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 444 (expr)


State 992

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  441     | expr "==" expr .
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 441 (expr)


State 993

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  442     | expr "!=" expr .
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 442 (expr)


State 994

  393 expr_method_call: expr "->" "name" . '(' ')'
  394                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1212


State 995

  375 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 375 (expr_assign_pipe)


State 996

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  353 expr_assign: expr "<-" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 353 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 997

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  470     | expr "??" expr .
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 470 (expr)


State 998

  509 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1213


State 999

  461 expr: expr "?." "name" .

    $default  reduce using rule 461 (expr)


State 1000

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  459     | expr "?[" expr . ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 1214


State 1001

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  494     | expr "<|" expr .
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 494 (expr)


State 1002

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  495     | expr "|>" expr .
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 495 (expr)


State 1003

  414 expr_call: basic_type_declaration . '(' ')'
  415          | basic_type_declaration . '(' expr_list ')'
  496 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 780

    $default  reduce using rule 496 (expr)


State 1004

  354 expr_assign: expr ":=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 354 (expr_assign)


State 1005

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  432     | expr "<<<" expr .
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '-'   shift, and go to state 772
    '+'   shift, and go to state 773
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 432 (expr)


State 1006

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  433     | expr ">>>" expr .
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '-'   shift, and go to state 772
    '+'   shift, and go to state 773
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 433 (expr)


State 1007

  389 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 389 (expr_assign_pipe)


State 1008

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  368 expr_assign: expr "<<<=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 368 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 1009

  390 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 390 (expr_assign_pipe)


State 1010

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  369 expr_assign: expr ">>>=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 369 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 1011

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  448     | expr "&&" expr .
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 448 (expr)


State 1012

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  449     | expr "||" expr .
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "^^"   shift, and go to state 760
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 449 (expr)


State 1013

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  450     | expr "^^" expr .
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 450 (expr)


State 1014

  379 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 379 (expr_assign_pipe)


State 1015

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr "&&=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 358 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 1016

  380 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 380 (expr_assign_pipe)


State 1017

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  359 expr_assign: expr "||=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 359 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 1018

  381 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 381 (expr_assign_pipe)


State 1019

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_assign: expr "^^=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 360 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 1020

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  451     | expr ".." expr .
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    ".."  error (nonassociative)

    $default  reduce using rule 451 (expr)


State 1021

  374 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 374 (expr_assign_pipe)


State 1022

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  352 expr_assign: expr '=' expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 352 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 1023

  482 expr: expr '?' "as" . "name"
  485     | expr '?' "as" . "type" '<' $@36 type_declaration '>' $@37
  486     | expr '?' "as" . basic_type_declaration
  513 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1215
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 458
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 1216
    "name"      shift, and go to state 1217

    basic_type_declaration  go to state 1218


State 1024

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  471     | expr '?' expr . ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    ':'    shift, and go to state 1219
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778


State 1025

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  446     | expr '|' expr .
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 446 (expr)


State 1026

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  447     | expr '^' expr .
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 447 (expr)


State 1027

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  445     | expr '&' expr .
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 445 (expr)


State 1028

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  439     | expr '<' expr .
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 439 (expr)


State 1029

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  440     | expr '>' expr .
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 440 (expr)


State 1030

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  435     | expr '-' expr .
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 435 (expr)


State 1031

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  434     | expr '+' expr .
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 434 (expr)


State 1032

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  436     | expr '*' expr .
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 436 (expr)


State 1033

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  437     | expr '/' expr .
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 437 (expr)


State 1034

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  438     | expr '%' expr .
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 438 (expr)


State 1035

  462 expr: expr '.' "?." . "name"
  511 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1220
    "name"  shift, and go to state 1221


State 1036

  460 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1222
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1037

  508 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1223


State 1038

  404 expr_field: expr '.' "name" .
  406           | expr '.' "name" . '(' ')'
  407           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1224

    '('       [reduce using rule 404 (expr_field)]
    $default  reduce using rule 404 (expr_field)


State 1039

  405 expr_field: expr '.' '.' . "name"
  510 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1225
    "name"  shift, and go to state 1226


State 1040

  458 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1227
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1041

  410 expr_field: expr '.' $@30 . error $@31

    error  shift, and go to state 1228


State 1042

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  457     | expr '[' expr . ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 1229


State 1043

  414 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 414 (expr_call)


State 1044

  324 expr_list: expr_list . ',' expr
  415 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 850
    ')'  shift, and go to state 1230


State 1045

  612 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@47 enum_list $@48 . '}'

    '}'  shift, and go to state 1231


State 1046

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  592 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1232


State 1047

  122 annotation_list: annotation_list . ',' annotation_declaration
  124 optional_annotation_list: '[' annotation_list . ']'
  536 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 107
    ']'  shift, and go to state 1233


State 1048

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@39 function_declaration_header ';'
  535                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@40 function_declaration_header expression_block

    "public"   shift, and go to state 1234
    "private"  shift, and go to state 1235

    $default  reduce using rule 523 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1236


State 1049

  528 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1237

    $default  reduce using rule 526 (optional_static_member_variable)

    optional_static_member_variable  go to state 1238


State 1050

  531 struct_variable_declaration_list: struct_variable_declaration_list $@38 structure_variable_declaration . ';'

    ';'  shift, and go to state 1239


State 1051

  572 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 572 (let_variable_name_with_pos_list)


State 1052

  575 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 575 (let_variable_declaration)


State 1053

  224 expr_call_pipe: expr . expr_full_block_assumed_piped
  351 expr_assign: expr .
  352            | expr . '=' expr
  353            | expr . "<-" expr
  354            | expr . ":=" expr
  355            | expr . "&=" expr
  356            | expr . "|=" expr
  357            | expr . "^=" expr
  358            | expr . "&&=" expr
  359            | expr . "||=" expr
  360            | expr . "^^=" expr
  361            | expr . "+=" expr
  362            | expr . "-=" expr
  363            | expr . "*=" expr
  364            | expr . "/=" expr
  365            | expr . "%=" expr
  366            | expr . "<<=" expr
  367            | expr . ">>=" expr
  368            | expr . "<<<=" expr
  369            | expr . ">>>=" expr
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  574 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 851
    "-="    shift, and go to state 852
    "/="    shift, and go to state 853
    "*="    shift, and go to state 854
    "%="    shift, and go to state 855
    "&="    shift, and go to state 856
    "|="    shift, and go to state 857
    "^="    shift, and go to state 858
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 859
    ">>="   shift, and go to state 860
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 861
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 862
    ">>>="  shift, and go to state 863
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 864
    "||="   shift, and go to state 865
    "^^="   shift, and go to state 866
    ".."    shift, and go to state 764
    '='     shift, and go to state 867
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670
    ';'     shift, and go to state 1240

    $default  reduce using rule 351 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 1054

  576 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 576 (let_variable_declaration)


State 1055

  690 type_declaration_no_options: "type" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 689 ($@54)

    $@54  go to state 1241


State 1056

  713 type_declaration_no_options: "array" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 712 ($@59)

    $@59  go to state 1242


State 1057

  716 type_declaration_no_options: "table" '<' $@60 table_type_pair '>' . $@61

    $default  reduce using rule 715 ($@61)

    $@61  go to state 1243


State 1058

  679 table_type_pair: type_declaration ';' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1244


State 1059

  719 type_declaration_no_options: "iterator" '<' $@62 type_declaration '>' . $@63

    $default  reduce using rule 718 ($@63)

    $@63  go to state 1245


State 1060

  709 type_declaration_no_options: "smart_ptr" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 708 ($@57)

    $@57  go to state 1246


State 1061

  677 bitfield_type_declaration: "bitfield" '<' $@51 bitfield_bits '>' . $@52

    $default  reduce using rule 676 ($@52)

    $@52  go to state 1247


State 1062

  671 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1248


State 1063

  723 type_declaration_no_options: "block" '<' $@64 type_declaration '>' . $@65

    $default  reduce using rule 722 ($@65)

    $@65  go to state 1249


State 1064

  726 type_declaration_no_options: "block" '<' $@66 optional_function_argument_list optional_function_type . '>' $@67

    '>'  shift, and go to state 1250


State 1065

  730 type_declaration_no_options: "function" '<' $@68 type_declaration '>' . $@69

    $default  reduce using rule 729 ($@69)

    $@69  go to state 1251


State 1066

  733 type_declaration_no_options: "function" '<' $@70 optional_function_argument_list optional_function_type . '>' $@71

    '>'  shift, and go to state 1252


State 1067

  737 type_declaration_no_options: "lambda" '<' $@72 type_declaration '>' . $@73

    $default  reduce using rule 736 ($@73)

    $@73  go to state 1253


State 1068

  740 type_declaration_no_options: "lambda" '<' $@74 optional_function_argument_list optional_function_type . '>' $@75

    '>'  shift, and go to state 1254


State 1069

  743 type_declaration_no_options: "tuple" '<' $@76 tuple_type_list '>' . $@77

    $default  reduce using rule 742 ($@77)

    $@77  go to state 1255


State 1070

  545 tuple_type_list: tuple_type_list ';' . tuple_type

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 603
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 1256
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 606


State 1071

  746 type_declaration_no_options: "variant" '<' $@78 variant_type_list '>' . $@79

    $default  reduce using rule 745 ($@79)

    $@79  go to state 1257


State 1072

  551 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 608

    variant_type  go to state 1258


State 1073

  256 type_declaration_no_options_list: type_declaration_no_options_list . ';' type_declaration
  694 type_declaration_no_options: '$' name_in_namespace '<' $@55 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    '>'  shift, and go to state 1259
    ';'  shift, and go to state 1260


State 1074

  255 type_declaration_no_options_list: type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 255 (type_declaration_no_options_list)


State 1075

  692 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 692 (type_declaration_no_options)


State 1076

  681 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 681 (dim_list)


State 1077

  543 tuple_type: "name" ':' type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 543 (tuple_type)


State 1078

  549 variant_type: "name" ':' type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 549 (variant_type)


State 1079

  629 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 629 (variable_name_with_pos_list)


State 1080

  632 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1261


State 1081

  560 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1262
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1082

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  802 make_struct_decl: "struct" '<' $@92 type_declaration_no_options . '>' $@93 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1263
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1083

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  805 make_struct_decl: "class" '<' $@94 type_declaration_no_options . '>' $@95 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1264
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1084

   84 expression_while_loop: "while" expr $@7 error . $@8 ';'

    $default  reduce using rule 83 ($@8)

    $@8  go to state 1265


State 1085

   79 expression_for_loop: "for" $@6 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1266
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1086

  275 new_type_declaration: '<' $@15 type_declaration . '>' $@16
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1267


State 1087

  278 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 278 (expr_new)


State 1088

  279 expr_new: "new" new_type_declaration '(' expr_list . ')'
  324 expr_list: expr_list . ',' expr

    ','  shift, and go to state 850
    ')'  shift, and go to state 1268


State 1089

  280 expr_new: "new" new_type_declaration '(' make_struct_dim . ')'
  779 make_struct_dim: make_struct_dim . ';' make_struct_fields

    ')'  shift, and go to state 1269
    ';'  shift, and go to state 1148


State 1090

  321 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  322               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 1270


State 1091

  320 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1271


State 1092

  319 expr_type_decl: "type" '<' $@23 type_declaration . '>' $@24
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1272


State 1093

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  829 make_dim_decl: "array" '<' $@102 type_declaration_no_options . '>' $@103 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1273
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1094

  826 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1274


State 1095

  324 expr_list: expr_list ',' expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 324 (expr_list)


State 1096

  361 expr_assign: expr "+=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 361 (expr_assign)


State 1097

  362 expr_assign: expr "-=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 362 (expr_assign)


State 1098

  364 expr_assign: expr "/=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 364 (expr_assign)


State 1099

  363 expr_assign: expr "*=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 363 (expr_assign)


State 1100

  365 expr_assign: expr "%=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 365 (expr_assign)


State 1101

  355 expr_assign: expr "&=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 355 (expr_assign)


State 1102

  356 expr_assign: expr "|=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 356 (expr_assign)


State 1103

  357 expr_assign: expr "^=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 357 (expr_assign)


State 1104

  366 expr_assign: expr "<<=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 366 (expr_assign)


State 1105

  367 expr_assign: expr ">>=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 367 (expr_assign)


State 1106

  353 expr_assign: expr "<-" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 353 (expr_assign)


State 1107

  368 expr_assign: expr "<<<=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 368 (expr_assign)


State 1108

  369 expr_assign: expr ">>>=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 369 (expr_assign)


State 1109

  358 expr_assign: expr "&&=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 358 (expr_assign)


State 1110

  359 expr_assign: expr "||=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 359 (expr_assign)


State 1111

  360 expr_assign: expr "^^=" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 360 (expr_assign)


State 1112

  352 expr_assign: expr '=' expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 352 (expr_assign)


State 1113

  295 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 295 (expression_try_catch)


State 1114

  841 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1275


State 1115

  842 make_table_decl: "table" '<' type_declaration_no_options ';' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1276


State 1116

  840 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1277


State 1117

  466 expr: "deref" '(' expr ')' .

    $default  reduce using rule 466 (expr)


State 1118

   87 expression_with_alias: "assume" "name" '=' $@9 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1278
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1119

  310 expr_cast: "cast" '<' $@17 type_declaration_no_options . '>' $@18 expr
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1279
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1120

  313 expr_cast: "upcast" '<' $@19 type_declaration_no_options . '>' $@20 expr
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1280
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1121

  467 expr: "addr" '(' expr ')' .

    $default  reduce using rule 467 (expr)


State 1122

  316 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options . '>' $@22 expr
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1281
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1123

  498 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 498 (expr)


State 1124

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  833 make_dim_decl: "fixed_array" '<' $@104 type_declaration_no_options . '>' $@105 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1282
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1125

  830 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1283


State 1126

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  811 make_struct_decl: "default" '<' $@98 type_declaration_no_options . '>' $@99

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1284
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1127

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  820 make_tuple_call: "tuple" '<' $@100 type_declaration_no_options . '>' $@101 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1285
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1128

  817 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1286


State 1129

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  808 make_struct_decl: "variant" '<' $@96 type_declaration_no_options . '>' $@97 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1287
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1130

  468 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  469     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 953

    $default  reduce using rule 337 (optional_capture_list)

    optional_capture_list  go to state 1288


State 1131

  340 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 125 (optional_function_argument_list)

    optional_function_argument_list  go to state 1289


State 1132

  500 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 500 (expr_mtag)


State 1133

  501 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 501 (expr_mtag)


State 1134

  502 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 502 (expr_mtag)


State 1135

  503 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 503 (expr_mtag)


State 1136

  504 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 504 (expr_mtag)


State 1137

  506 expr_mtag: "$c" '(' expr ')' . '(' ')'
  507          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1290


State 1138

  848 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1291
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1139

  781 optional_block: "where" expr_block .

    $default  reduce using rule 781 (optional_block)


State 1140

  774 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  775                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1292
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1141

  771 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1293
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1142

  770 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1294
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1143

  695 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  823 make_dim_decl: '[' . expr_list optional_comma ']'
  847 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    ']'                               shift, and go to state 819
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 700
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1144

  323 expr_list: expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  680 dim_list: '[' expr . ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 820

    ']'       [reduce using rule 323 (expr_list)]
    $default  reduce using rule 323 (expr_list)


State 1145

  796 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  797                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 900
    "$f"     shift, and go to state 901
    "name"   shift, and go to state 1295

    $default  reduce using rule 780 (optional_block)

    make_struct_fields  go to state 907
    make_struct_dim     go to state 1296
    optional_block      go to state 1297


State 1146

  813 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1298
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1147

  772 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  773                   | make_struct_fields ',' . "name" ":=" expr
  776                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1299
    "name"  shift, and go to state 1300


State 1148

  779 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "$f"    shift, and go to state 901
    "name"  shift, and go to state 1295

    make_struct_fields  go to state 1301


State 1149

  794 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1150
    ",]]"  shift, and go to state 1151
    ']'    shift, and go to state 1152

    optional_trailing_delim_sqr_sqr  go to state 1302


State 1150

  789 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 789 (optional_trailing_delim_sqr_sqr)


State 1151

  790 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 790 (optional_trailing_delim_sqr_sqr)


State 1152

  788 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1303


State 1153

  795 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 795 (make_struct_decl)


State 1154

  814 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1304
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1155

  787 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 787 (optional_trailing_semicolon_sqr_sqr)


State 1156

  786 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1305


State 1157

  822 make_dim: make_dim ';' . make_tuple

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 906
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple              go to state 1306
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1158

  824 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 824 (make_dim_decl)


State 1159

  849 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1307
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1160

  799 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 901
    "name"  shift, and go to state 1295

    make_struct_fields  go to state 907
    make_struct_dim     go to state 1308


State 1161

  798 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1309
    ",}]"  shift, and go to state 1310
    '}'    shift, and go to state 1311

    optional_trailing_delim_cur_sqr  go to state 1312


State 1162

  785 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 785 (optional_trailing_semicolon_cur_sqr)


State 1163

  784 optional_trailing_semicolon_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1313


State 1164

  825 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 825 (make_dim_decl)


State 1165

  851 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1314
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1166

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  815 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 815 (make_map_tuple)


State 1167

  835 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 835 (make_table)


State 1168

  782 optional_trailing_semicolon_cur_cur: '}' '}' .

    $default  reduce using rule 782 (optional_trailing_semicolon_cur_cur)


State 1169

  256 type_declaration_no_options_list: type_declaration_no_options_list . ';' type_declaration
  259 expression_keyword: "keyword" '<' $@11 type_declaration_no_options_list . '>' $@12 expr

    '>'  shift, and go to state 1315
    ';'  shift, and go to state 1260


State 1170

  256 type_declaration_no_options_list: type_declaration_no_options_list . ';' type_declaration
  262 expression_keyword: "type function" '<' $@13 type_declaration_no_options_list . '>' $@14 optional_expr_list_in_braces

    '>'  shift, and go to state 1316
    ';'  shift, and go to state 1260


State 1171

   30 string_builder_body: string_builder_body "{" expr . "}"
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    "}"    shift, and go to state 1317
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778


State 1172

  847 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1318
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1173

  823 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 823 (make_dim_decl)


State 1174

  456 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 456 (expr)


State 1175

  396 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1319
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1176

  515 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1320
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1177

  400 func_addr_expr: '@' '@' '<' $@26 . type_declaration_no_options '>' $@27 func_addr_name

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1321


State 1178

  403 func_addr_expr: '@' '@' '<' $@28 . optional_function_argument_list optional_function_type '>' $@29 func_addr_name

    '('  shift, and go to state 282

    $default  reduce using rule 125 (optional_function_argument_list)

    optional_function_argument_list  go to state 1322


State 1179

  850 array_comprehension: '{' "for" variable_name_with_pos_list "in" . expr_list ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1323
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1180

  837 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 837 (expr_map_tuple_list)


State 1181

  838 make_table_decl: '{' expr_map_tuple_list optional_comma '}' .

    $default  reduce using rule 838 (make_table_decl)


State 1182

  223 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  248 expressions: expressions . expression_any
  249            | expressions . error

    error                             shift, and go to state 425
    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 428
    "if"                              shift, and go to state 429
    "static_if"                       shift, and go to state 430
    "for"                             shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 438
    "null"                            shift, and go to state 439
    "break"                           shift, and go to state 440
    "try"                             shift, and go to state 441
    "table"                           shift, and go to state 442
    "delete"                          shift, and go to state 443
    "deref"                           shift, and go to state 444
    "with"                            shift, and go to state 445
    "assume"                          shift, and go to state 446
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 449
    "continue"                        shift, and go to state 450
    "pass"                            shift, and go to state 451
    "reinterpret"                     shift, and go to state 452
    "label"                           shift, and go to state 453
    "goto"                            shift, and go to state 454
    "unsafe"                          shift, and go to state 455
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "yield"                           shift, and go to state 462
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 485
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    ';'                               shift, and go to state 497
    '{'                               shift, and go to state 498
    '}'                               shift, and go to state 1324

    string_builder             go to state 500
    expr_reader                go to state 501
    expression_label           go to state 502
    expression_goto            go to state 503
    if_or_static_if            go to state 504
    expression_if_one_liner    go to state 505
    expression_if_then_else    go to state 506
    expression_for_loop        go to state 507
    expression_unsafe          go to state 508
    expression_while_loop      go to state 509
    expression_with            go to state 510
    expression_with_alias      go to state 511
    expr_call_pipe             go to state 512
    expression_any             go to state 513
    expr_keyword               go to state 514
    expression_keyword         go to state 515
    expr_pipe                  go to state 516
    name_in_namespace          go to state 517
    expression_delete          go to state 518
    expr_new                   go to state 519
    expression_break           go to state 520
    expression_continue        go to state 521
    expression_return_no_pipe  go to state 522
    expression_return          go to state 523
    expression_yield_no_pipe   go to state 524
    expression_yield           go to state 525
    expression_try_catch       go to state 526
    kwd_let                    go to state 527
    expression_let             go to state 528
    expr_cast                  go to state 529
    expr_type_decl             go to state 530
    expr_type_info             go to state 531
    block_or_lambda            go to state 532
    expr_full_block            go to state 533
    expr_numeric_const         go to state 534
    expr_assign                go to state 535
    expr_assign_pipe           go to state 536
    expr_named_call            go to state 537
    expr_method_call           go to state 538
    func_addr_expr             go to state 539
    expr_field                 go to state 540
    expr_call                  go to state 541
    expr                       go to state 542
    expr_mtag                  go to state 543
    basic_type_declaration     go to state 544
    make_decl                  go to state 545
    make_struct_decl           go to state 546
    make_tuple_call            go to state 547
    make_dim_decl              go to state 548
    make_table_decl            go to state 549
    array_comprehension        go to state 550


State 1183

   75 expression_if_then_else: if_or_static_if expr $@3 error . $@4 ';'

    $default  reduce using rule 74 ($@4)

    $@4  go to state 1325


State 1184

   60 expression_else: "else" . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1326


State 1185

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1186

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1187

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1327
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1188

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1189

   77 expression_if_then_else: expression_if_one_liner "if" $@5 expr . expression_else_one_liner ';'
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1328
    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    ".."    shift, and go to state 764
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1329


State 1190

  343 expr_full_block_assumed_piped: block_or_lambda $@25 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "[["  shift, and go to state 953

    $default  reduce using rule 337 (optional_capture_list)

    optional_capture_list  go to state 1330


State 1191

  391 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  772 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  773                   | make_struct_fields . ',' "name" ":=" expr
  776                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1147
    ']'  shift, and go to state 1331


State 1192

  324 expr_list: expr_list ',' . expr
  392 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 1332
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1095
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1193

  413 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 413 (expr_call)


State 1194

  412 expr_call: name_in_namespace '(' make_struct_dim ')' .

    $default  reduce using rule 412 (expr_call)


State 1195

  300 tuple_expansion: "name" .

    $default  reduce using rule 300 (tuple_expansion)


State 1196

  301 tuple_expansion: tuple_expansion . ',' "name"
  302 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  304                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 1333
    ']'  shift, and go to state 1334


State 1197

  301 tuple_expansion: tuple_expansion . ',' "name"
  303 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  305                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 1333
    ')'  shift, and go to state 1335


State 1198

  333 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1336


State 1199

  334 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1337


State 1200

  332 capture_entry: '=' . "name"

    "name"  shift, and go to state 1338


State 1201

  331 capture_entry: '&' . "name"

    "name"  shift, and go to state 1339


State 1202

  335 capture_list: capture_entry .

    $default  reduce using rule 335 (capture_list)


State 1203

  336 capture_list: capture_list . ',' capture_entry
  338 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1340
    ']'  shift, and go to state 1341


State 1204

  341 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 128 (optional_function_type)

    optional_function_type  go to state 1342


State 1205

  474 expr: expr "is" "type" '<' . $@32 type_declaration_no_options '>' $@33

    $default  reduce using rule 472 ($@32)

    $@32  go to state 1343


State 1206

  514 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1344
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1207

  480 expr: expr "as" "type" '<' . $@34 type_declaration '>' $@35

    $default  reduce using rule 478 ($@34)

    $@34  go to state 1345


State 1208

  512 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1346
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1209

  372 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 372 (expr_assign_pipe_right)


State 1210

  370 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 370 (expr_assign_pipe_right)


State 1211

  371 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 371 (expr_assign_pipe_right)


State 1212

  393 expr_method_call: expr "->" "name" '(' . ')'
  394                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1347
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1348
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1213

  509 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1349
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1214

  459 expr: expr "?[" expr ']' .

    $default  reduce using rule 459 (expr)


State 1215

  485 expr: expr '?' "as" "type" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 1350


State 1216

  513 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1351


State 1217

  482 expr: expr '?' "as" "name" .

    $default  reduce using rule 482 (expr)


State 1218

  486 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 486 (expr)


State 1219

  471 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1352
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1220

  511 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1353


State 1221

  462 expr: expr '.' "?." "name" .

    $default  reduce using rule 462 (expr)


State 1222

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  460     | expr '.' "?[" expr . ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 1354


State 1223

  508 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1355
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1224

  406 expr_field: expr '.' "name" '(' . ')'
  407           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1356
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1357
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1225

  510 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1358


State 1226

  405 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 405 (expr_field)


State 1227

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  458     | expr '.' '[' expr . ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 1359


State 1228

  410 expr_field: expr '.' $@30 error . $@31

    $default  reduce using rule 409 ($@31)

    $@31  go to state 1360


State 1229

  457 expr: expr '[' expr ']' .

    $default  reduce using rule 457 (expr)


State 1230

  415 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 415 (expr_call)


State 1231

  612 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@47 enum_list $@48 '}' .

    $default  reduce using rule 612 (enum_declaration)


State 1232

  592 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 592 (enum_list)


State 1233

  124 optional_annotation_list: '[' annotation_list ']' .
  536 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1361

    $default  reduce using rule 124 (optional_annotation_list)


State 1234

  524 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 524 (optional_public_or_private_member_variable)


State 1235

  525 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 525 (optional_public_or_private_member_variable)


State 1236

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@39 function_declaration_header ';'
  535                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@40 function_declaration_header expression_block

    "abstract"  shift, and go to state 1362
    "static"    shift, and go to state 1237

    $default  reduce using rule 526 (optional_static_member_variable)

    optional_static_member_variable  go to state 1363


State 1237

  527 optional_static_member_variable: "static" .

    $default  reduce using rule 527 (optional_static_member_variable)


State 1238

  528 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1364
    "sealed"    shift, and go to state 1365

    $default  reduce using rule 518 (optional_override)

    optional_override  go to state 1366


State 1239

  531 struct_variable_declaration_list: struct_variable_declaration_list $@38 structure_variable_declaration ';' .

    $default  reduce using rule 531 (struct_variable_declaration_list)


State 1240

  574 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 574 (let_variable_declaration)


State 1241

  690 type_declaration_no_options: "type" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 690 (type_declaration_no_options)


State 1242

  713 type_declaration_no_options: "array" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 713 (type_declaration_no_options)


State 1243

  716 type_declaration_no_options: "table" '<' $@60 table_type_pair '>' $@61 .

    $default  reduce using rule 716 (type_declaration_no_options)


State 1244

  679 table_type_pair: type_declaration ';' type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 679 (table_type_pair)


State 1245

  719 type_declaration_no_options: "iterator" '<' $@62 type_declaration '>' $@63 .

    $default  reduce using rule 719 (type_declaration_no_options)


State 1246

  709 type_declaration_no_options: "smart_ptr" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 709 (type_declaration_no_options)


State 1247

  677 bitfield_type_declaration: "bitfield" '<' $@51 bitfield_bits '>' $@52 .

    $default  reduce using rule 677 (bitfield_type_declaration)


State 1248

  671 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 671 (bitfield_bits)


State 1249

  723 type_declaration_no_options: "block" '<' $@64 type_declaration '>' $@65 .

    $default  reduce using rule 723 (type_declaration_no_options)


State 1250

  726 type_declaration_no_options: "block" '<' $@66 optional_function_argument_list optional_function_type '>' . $@67

    $default  reduce using rule 725 ($@67)

    $@67  go to state 1367


State 1251

  730 type_declaration_no_options: "function" '<' $@68 type_declaration '>' $@69 .

    $default  reduce using rule 730 (type_declaration_no_options)


State 1252

  733 type_declaration_no_options: "function" '<' $@70 optional_function_argument_list optional_function_type '>' . $@71

    $default  reduce using rule 732 ($@71)

    $@71  go to state 1368


State 1253

  737 type_declaration_no_options: "lambda" '<' $@72 type_declaration '>' $@73 .

    $default  reduce using rule 737 (type_declaration_no_options)


State 1254

  740 type_declaration_no_options: "lambda" '<' $@74 optional_function_argument_list optional_function_type '>' . $@75

    $default  reduce using rule 739 ($@75)

    $@75  go to state 1369


State 1255

  743 type_declaration_no_options: "tuple" '<' $@76 tuple_type_list '>' $@77 .

    $default  reduce using rule 743 (type_declaration_no_options)


State 1256

  545 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 545 (tuple_type_list)


State 1257

  746 type_declaration_no_options: "variant" '<' $@78 variant_type_list '>' $@79 .

    $default  reduce using rule 746 (type_declaration_no_options)


State 1258

  551 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 551 (variant_type_list)


State 1259

  694 type_declaration_no_options: '$' name_in_namespace '<' $@55 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1370


State 1260

  256 type_declaration_no_options_list: type_declaration_no_options_list ';' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1371


State 1261

  632 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 632 (variable_name_with_pos_list)


State 1262

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  560 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 560 (variable_declaration)


State 1263

  802 make_struct_decl: "struct" '<' $@92 type_declaration_no_options '>' . $@93 '(' make_struct_dim ')'

    $default  reduce using rule 801 ($@93)

    $@93  go to state 1372


State 1264

  805 make_struct_decl: "class" '<' $@94 type_declaration_no_options '>' . $@95 '(' make_struct_dim ')'

    $default  reduce using rule 804 ($@95)

    $@95  go to state 1373


State 1265

   84 expression_while_loop: "while" expr $@7 error $@8 . ';'

    ';'  shift, and go to state 1374


State 1266

   79 expression_for_loop: "for" $@6 variable_name_with_pos_list "in" expr_list . expression_block
  324 expr_list: expr_list . ',' expr

    ','  shift, and go to state 850
    '{'  shift, and go to state 284

    expression_block  go to state 1375


State 1267

  275 new_type_declaration: '<' $@15 type_declaration '>' . $@16

    $default  reduce using rule 274 ($@16)

    $@16  go to state 1376


State 1268

  279 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 279 (expr_new)


State 1269

  280 expr_new: "new" new_type_declaration '(' make_struct_dim ')' .

    $default  reduce using rule 280 (expr_new)


State 1270

  321 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  322               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1377
    ';'  shift, and go to state 1378


State 1271

  320 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 320 (expr_type_info)


State 1272

  319 expr_type_decl: "type" '<' $@23 type_declaration '>' . $@24

    $default  reduce using rule 318 ($@24)

    $@24  go to state 1379


State 1273

  829 make_dim_decl: "array" '<' $@102 type_declaration_no_options '>' . $@103 '(' expr_list optional_comma ')'

    $default  reduce using rule 828 ($@103)

    $@103  go to state 1380


State 1274

  826 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 826 (make_dim_decl)


State 1275

  841 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 705
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    expr_map_tuple_list     go to state 1381
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1276

  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"
  842 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1382
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1277

  840 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 840 (make_table_decl)


State 1278

   87 expression_with_alias: "assume" "name" '=' $@9 expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 87 (expression_with_alias)


State 1279

  310 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 309 ($@18)

    $@18  go to state 1383


State 1280

  313 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' . $@20 expr

    $default  reduce using rule 312 ($@20)

    $@20  go to state 1384


State 1281

  316 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' . $@22 expr

    $default  reduce using rule 315 ($@22)

    $@22  go to state 1385


State 1282

  833 make_dim_decl: "fixed_array" '<' $@104 type_declaration_no_options '>' . $@105 '(' expr_list optional_comma ')'

    $default  reduce using rule 832 ($@105)

    $@105  go to state 1386


State 1283

  830 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 830 (make_dim_decl)


State 1284

  811 make_struct_decl: "default" '<' $@98 type_declaration_no_options '>' . $@99

    $default  reduce using rule 810 ($@99)

    $@99  go to state 1387


State 1285

  820 make_tuple_call: "tuple" '<' $@100 type_declaration_no_options '>' . $@101 '(' make_struct_dim ')'

    $default  reduce using rule 819 ($@101)

    $@101  go to state 1388


State 1286

  817 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 817 (make_tuple_call)


State 1287

  808 make_struct_decl: "variant" '<' $@96 type_declaration_no_options '>' . $@97 '(' make_struct_dim ')'

    $default  reduce using rule 807 ($@97)

    $@97  go to state 1389


State 1288

  468 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  469     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1390


State 1289

  340 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 128 (optional_function_type)

    optional_function_type  go to state 1391


State 1290

  506 expr_mtag: "$c" '(' expr ')' '(' . ')'
  507          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1392
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1393
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1291

  324 expr_list: expr_list . ',' expr
  848 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 850
    ';'  shift, and go to state 1394


State 1292

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  774 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  775                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1395


State 1293

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  771 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 771 (make_struct_fields)


State 1294

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  770 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 770 (make_struct_fields)


State 1295

  770 make_struct_fields: "name" . copy_or_move expr
  771                   | "name" . ":=" expr

    "<-"  shift, and go to state 616
    ":="  shift, and go to state 1141
    '='   shift, and go to state 618

    copy_or_move  go to state 1142


State 1296

  779 make_struct_dim: make_struct_dim . ';' make_struct_fields
  797 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 900
    ';'      shift, and go to state 1148

    $default  reduce using rule 780 (optional_block)

    optional_block  go to state 1396


State 1297

  796 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1150
    ",]]"  shift, and go to state 1151
    ']'    shift, and go to state 1152

    optional_trailing_delim_sqr_sqr  go to state 1397


State 1298

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  813 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 813 (make_tuple)


State 1299

  776 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  777                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1398


State 1300

  772 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  773                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 616
    ":="  shift, and go to state 1399
    '='   shift, and go to state 618

    copy_or_move  go to state 1400


State 1301

  772 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  773                   | make_struct_fields . ',' "name" ":=" expr
  776                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  779 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 1147

    $default  reduce using rule 779 (make_struct_dim)


State 1302

  794 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 794 (make_struct_decl)


State 1303

  788 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 788 (optional_trailing_delim_sqr_sqr)


State 1304

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  814 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 814 (make_tuple)


State 1305

  786 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 786 (optional_trailing_semicolon_sqr_sqr)


State 1306

  814 make_tuple: make_tuple . ',' expr
  822 make_dim: make_dim ';' make_tuple .

    ','  shift, and go to state 1154

    $default  reduce using rule 822 (make_dim)


State 1307

  324 expr_list: expr_list . ',' expr
  849 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 850
    ';'  shift, and go to state 1401


State 1308

  779 make_struct_dim: make_struct_dim . ';' make_struct_fields
  799 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 900
    ';'      shift, and go to state 1148

    $default  reduce using rule 780 (optional_block)

    optional_block  go to state 1402


State 1309

  792 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 792 (optional_trailing_delim_cur_sqr)


State 1310

  793 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 793 (optional_trailing_delim_cur_sqr)


State 1311

  791 optional_trailing_delim_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1403


State 1312

  798 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 798 (make_struct_decl)


State 1313

  784 optional_trailing_semicolon_cur_sqr: '}' ']' .

    $default  reduce using rule 784 (optional_trailing_semicolon_cur_sqr)


State 1314

  324 expr_list: expr_list . ',' expr
  851 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . ';' make_map_tuple array_comprehension_where '}' '}'

    ','  shift, and go to state 850
    ';'  shift, and go to state 1404


State 1315

  259 expression_keyword: "keyword" '<' $@11 type_declaration_no_options_list '>' . $@12 expr

    $default  reduce using rule 258 ($@12)

    $@12  go to state 1405


State 1316

  262 expression_keyword: "type function" '<' $@13 type_declaration_no_options_list '>' . $@14 optional_expr_list_in_braces

    $default  reduce using rule 261 ($@14)

    $@14  go to state 1406


State 1317

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1318

  324 expr_list: expr_list . ',' expr
  847 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']'

    ','  shift, and go to state 850
    ';'  shift, and go to state 1407


State 1319

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  396 func_addr_name: "$i" '(' expr . ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1408


State 1320

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  515          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1409


State 1321

  400 func_addr_expr: '@' '@' '<' $@26 type_declaration_no_options . '>' $@27 func_addr_name
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1410
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1322

  403 func_addr_expr: '@' '@' '<' $@28 optional_function_argument_list . optional_function_type '>' $@29 func_addr_name

    ':'  shift, and go to state 367

    $default  reduce using rule 128 (optional_function_type)

    optional_function_type  go to state 1411


State 1323

  324 expr_list: expr_list . ',' expr
  850 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list . ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 850
    ';'  shift, and go to state 1412


State 1324

  223 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 223 (expression_block)


State 1325

   75 expression_if_then_else: if_or_static_if expr $@3 error $@4 . ';'

    ';'  shift, and go to state 1413


State 1326

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1327

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '{'    shift, and go to state 284

    expression_block  go to state 1414


State 1328

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1415


State 1329

   77 expression_if_then_else: expression_if_one_liner "if" $@5 expr expression_else_one_liner . ';'

    ';'  shift, and go to state 1416


State 1330

  343 expr_full_block_assumed_piped: block_or_lambda $@25 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 282

    $default  reduce using rule 125 (optional_function_argument_list)

    optional_function_argument_list  go to state 1417


State 1331

  391 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1418


State 1332

  392 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  823 make_dim_decl: '[' . expr_list optional_comma ']'
  847 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 901
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 902
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 700
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_fields      go to state 1419
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1333

  301 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1420


State 1334

  302 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  304                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr ';'

    ']'  shift, and go to state 1421


State 1335

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  305                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr ';'

    ':'  shift, and go to state 1422
    '&'  shift, and go to state 382

    $default  reduce using rule 566 (optional_ref)

    optional_ref  go to state 1423


State 1336

  333 capture_entry: "<-" "name" .

    $default  reduce using rule 333 (capture_entry)


State 1337

  334 capture_entry: ":=" "name" .

    $default  reduce using rule 334 (capture_entry)


State 1338

  332 capture_entry: '=' "name" .

    $default  reduce using rule 332 (capture_entry)


State 1339

  331 capture_entry: '&' "name" .

    $default  reduce using rule 331 (capture_entry)


State 1340

  336 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1198
    ":="  shift, and go to state 1199
    '='   shift, and go to state 1200
    '&'   shift, and go to state 1201

    capture_entry  go to state 1424


State 1341

  338 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1425


State 1342

  341 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1426
    '{'   shift, and go to state 284

    expression_block       go to state 1427
    block_or_simple_block  go to state 1428


State 1343

  474 expr: expr "is" "type" '<' $@32 . type_declaration_no_options '>' $@33

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1429


State 1344

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  514          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1430


State 1345

  480 expr: expr "as" "type" '<' $@34 . type_declaration '>' $@35

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1431


State 1346

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  512          | expr "as" "$f" '(' expr . ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1432


State 1347

  393 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 393 (expr_method_call)


State 1348

  324 expr_list: expr_list . ',' expr
  394 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 850
    ')'  shift, and go to state 1433


State 1349

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  509          | expr "?." "$f" '(' expr . ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1434


State 1350

  485 expr: expr '?' "as" "type" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 483 ($@36)

    $@36  go to state 1435


State 1351

  513 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1436
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1352

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  471     | expr '?' expr ':' expr .
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 471 (expr)


State 1353

  511 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1437
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1354

  460 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 460 (expr)


State 1355

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr '.' "$f" '(' expr . ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1438


State 1356

  406 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 406 (expr_field)


State 1357

  324 expr_list: expr_list . ',' expr
  407 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 850
    ')'  shift, and go to state 1439


State 1358

  510 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1440
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1359

  458 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 458 (expr)


State 1360

  410 expr_field: expr '.' $@30 error $@31 .

    $default  reduce using rule 410 (expr_field)


State 1361

  536 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 536 (struct_variable_declaration_list)


State 1362

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@39 function_declaration_header ';'

    "const"  shift, and go to state 1441

    $default  reduce using rule 521 (optional_constant)

    optional_constant  go to state 1442


State 1363

  535 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@40 function_declaration_header expression_block

    "override"  shift, and go to state 1364
    "sealed"    shift, and go to state 1365

    $default  reduce using rule 518 (optional_override)

    optional_override  go to state 1443


State 1364

  519 optional_override: "override" .

    $default  reduce using rule 519 (optional_override)


State 1365

  520 optional_override: "sealed" .

    $default  reduce using rule 520 (optional_override)


State 1366

  528 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1234
    "private"  shift, and go to state 1235

    $default  reduce using rule 523 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1444


State 1367

  726 type_declaration_no_options: "block" '<' $@66 optional_function_argument_list optional_function_type '>' $@67 .

    $default  reduce using rule 726 (type_declaration_no_options)


State 1368

  733 type_declaration_no_options: "function" '<' $@70 optional_function_argument_list optional_function_type '>' $@71 .

    $default  reduce using rule 733 (type_declaration_no_options)


State 1369

  740 type_declaration_no_options: "lambda" '<' $@74 optional_function_argument_list optional_function_type '>' $@75 .

    $default  reduce using rule 740 (type_declaration_no_options)


State 1370

  694 type_declaration_no_options: '$' name_in_namespace '<' $@55 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 251 (optional_expr_list)

    string_builder          go to state 500
    expr_reader             go to state 501
    optional_expr_list      go to state 1445
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 818
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1371

  256 type_declaration_no_options_list: type_declaration_no_options_list ';' type_declaration .
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 256 (type_declaration_no_options_list)


State 1372

  802 make_struct_decl: "struct" '<' $@92 type_declaration_no_options '>' $@93 . '(' make_struct_dim ')'

    '('  shift, and go to state 1446


State 1373

  805 make_struct_decl: "class" '<' $@94 type_declaration_no_options '>' $@95 . '(' make_struct_dim ')'

    '('  shift, and go to state 1447


State 1374

   84 expression_while_loop: "while" expr $@7 error $@8 ';' .

    $default  reduce using rule 84 (expression_while_loop)


State 1375

   79 expression_for_loop: "for" $@6 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 79 (expression_for_loop)


State 1376

  275 new_type_declaration: '<' $@15 type_declaration '>' $@16 .

    $default  reduce using rule 275 (new_type_declaration)


State 1377

  321 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1448
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1378

  322 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1449


State 1379

  319 expr_type_decl: "type" '<' $@23 type_declaration '>' $@24 .

    $default  reduce using rule 319 (expr_type_decl)


State 1380

  829 make_dim_decl: "array" '<' $@102 type_declaration_no_options '>' $@103 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1450


State 1381

  837 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  841 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 938

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 1451


State 1382

  842 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1452


State 1383

  310 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1453
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1384

  313 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' $@20 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1454
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1385

  316 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' $@22 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1455
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1386

  833 make_dim_decl: "fixed_array" '<' $@104 type_declaration_no_options '>' $@105 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1456


State 1387

  811 make_struct_decl: "default" '<' $@98 type_declaration_no_options '>' $@99 .

    $default  reduce using rule 811 (make_struct_decl)


State 1388

  820 make_tuple_call: "tuple" '<' $@100 type_declaration_no_options '>' $@101 . '(' make_struct_dim ')'

    '('  shift, and go to state 1457


State 1389

  808 make_struct_decl: "variant" '<' $@96 type_declaration_no_options '>' $@97 . '(' make_struct_dim ')'

    '('  shift, and go to state 1458


State 1390

  468 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  469     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1459
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1460
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1391

  340 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1426
    '{'   shift, and go to state 284

    expression_block       go to state 1427
    block_or_simple_block  go to state 1461


State 1392

  506 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 506 (expr_mtag)


State 1393

  324 expr_list: expr_list . ',' expr
  507 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 850
    ')'  shift, and go to state 1462


State 1394

  848 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1463
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1395

  774 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  775                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 616
    ":="  shift, and go to state 1464
    '='   shift, and go to state 618

    copy_or_move  go to state 1465


State 1396

  797 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1150
    ",]]"  shift, and go to state 1151
    ']'    shift, and go to state 1152

    optional_trailing_delim_sqr_sqr  go to state 1466


State 1397

  796 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 796 (make_struct_decl)


State 1398

  776 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  777                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1467
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1399

  773 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1468
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1400

  772 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1469
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1401

  849 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1470
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1402

  799 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1309
    ",}]"  shift, and go to state 1310
    '}'    shift, and go to state 1311

    optional_trailing_delim_cur_sqr  go to state 1471


State 1403

  791 optional_trailing_delim_cur_sqr: '}' ']' .

    $default  reduce using rule 791 (optional_trailing_delim_cur_sqr)


State 1404

  851 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' . make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 1472
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1405

  259 expression_keyword: "keyword" '<' $@11 type_declaration_no_options_list '>' $@12 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1473
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1406

  262 expression_keyword: "type function" '<' $@13 type_declaration_no_options_list '>' $@14 . optional_expr_list_in_braces

    '('  shift, and go to state 1474

    '('       [reduce using rule 253 (optional_expr_list_in_braces)]
    $default  reduce using rule 253 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1475


State 1407

  847 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1476
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1408

  396 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 396 (func_addr_name)


State 1409

  515 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 515 (expr_mtag)


State 1410

  400 func_addr_expr: '@' '@' '<' $@26 type_declaration_no_options '>' . $@27 func_addr_name

    $default  reduce using rule 399 ($@27)

    $@27  go to state 1477


State 1411

  403 func_addr_expr: '@' '@' '<' $@28 optional_function_argument_list optional_function_type . '>' $@29 func_addr_name

    '>'  shift, and go to state 1478


State 1412

  850 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 1479
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1413

   75 expression_if_then_else: if_or_static_if expr $@3 error $@4 ';' .

    $default  reduce using rule 75 (expression_if_then_else)


State 1414

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1184
    "elif"         shift, and go to state 1185
    "static_elif"  shift, and go to state 1186

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1187
    expression_else      go to state 1480


State 1415

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 1481
    "null"                            shift, and go to state 439
    "break"                           shift, and go to state 440
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "continue"                        shift, and go to state 450
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "yield"                           shift, and go to state 1482
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder             go to state 500
    expr_reader                go to state 501
    expression_if_one_liner    go to state 1483
    expression_keyword         go to state 561
    name_in_namespace          go to state 517
    expr_new                   go to state 519
    expression_break           go to state 1484
    expression_continue        go to state 1485
    expression_return_no_pipe  go to state 1486
    expression_yield_no_pipe   go to state 1487
    expr_cast                  go to state 529
    expr_type_decl             go to state 530
    expr_type_info             go to state 531
    block_or_lambda            go to state 532
    expr_full_block            go to state 533
    expr_numeric_const         go to state 534
    expr_named_call            go to state 537
    expr_method_call           go to state 538
    func_addr_expr             go to state 539
    expr_field                 go to state 540
    expr_call                  go to state 541
    expr                       go to state 1488
    expr_mtag                  go to state 543
    basic_type_declaration     go to state 544
    make_decl                  go to state 545
    make_struct_decl           go to state 546
    make_tuple_call            go to state 547
    make_dim_decl              go to state 548
    make_table_decl            go to state 549
    array_comprehension        go to state 550


State 1416

   77 expression_if_then_else: expression_if_one_liner "if" $@5 expr expression_else_one_liner ';' .

    $default  reduce using rule 77 (expression_if_then_else)


State 1417

  343 expr_full_block_assumed_piped: block_or_lambda $@25 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 367

    $default  reduce using rule 128 (optional_function_type)

    optional_function_type  go to state 1489


State 1418

  391 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 391 (expr_named_call)


State 1419

  392 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  772 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  773                   | make_struct_fields . ',' "name" ":=" expr
  776                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1147
    ']'  shift, and go to state 1490


State 1420

  301 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 301 (tuple_expansion)


State 1421

  302 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  304                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr ';'

    ':'  shift, and go to state 1491
    '&'  shift, and go to state 382

    $default  reduce using rule 566 (optional_ref)

    optional_ref  go to state 1492


State 1422

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1493


State 1423

  305 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 566
    ":="  shift, and go to state 567
    '='   shift, and go to state 568

    copy_or_move_or_clone  go to state 1494


State 1424

  336 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 336 (capture_list)


State 1425

  338 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 338 (optional_capture_list)


State 1426

  326 block_or_simple_block: "=>" . expr
  327                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 1495
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1496
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1427

  325 block_or_simple_block: expression_block .

    $default  reduce using rule 325 (block_or_simple_block)


State 1428

  341 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 341 (expr_full_block)


State 1429

  474 expr: expr "is" "type" '<' $@32 type_declaration_no_options . '>' $@33
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1497
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1430

  514 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 514 (expr_mtag)


State 1431

  480 expr: expr "as" "type" '<' $@34 type_declaration . '>' $@35
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1498


State 1432

  512 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 512 (expr_mtag)


State 1433

  394 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 394 (expr_method_call)


State 1434

  509 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 509 (expr_mtag)


State 1435

  485 expr: expr '?' "as" "type" '<' $@36 . type_declaration '>' $@37

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1499


State 1436

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr '?' "as" "$f" '(' expr . ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1500


State 1437

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr '.' "?." "$f" '(' expr . ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1501


State 1438

  508 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 508 (expr_mtag)


State 1439

  407 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 407 (expr_field)


State 1440

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr '.' '.' "$f" '(' expr . ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1502


State 1441

  522 optional_constant: "const" .

    $default  reduce using rule 522 (optional_constant)


State 1442

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@39 function_declaration_header ';'

    $default  reduce using rule 532 ($@39)

    $@39  go to state 1503


State 1443

  535 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@40 function_declaration_header expression_block

    "const"  shift, and go to state 1441

    $default  reduce using rule 521 (optional_constant)

    optional_constant  go to state 1504


State 1444

  528 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_declaration         go to state 1505
    variable_name_with_pos_list  go to state 421


State 1445

  694 type_declaration_no_options: '$' name_in_namespace '<' $@55 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1506


State 1446

  802 make_struct_decl: "struct" '<' $@92 type_declaration_no_options '>' $@93 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 901
    "name"  shift, and go to state 1295

    make_struct_fields  go to state 907
    make_struct_dim     go to state 1507


State 1447

  805 make_struct_decl: "class" '<' $@94 type_declaration_no_options '>' $@95 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 901
    "name"  shift, and go to state 1295

    make_struct_fields  go to state 907
    make_struct_dim     go to state 1508


State 1448

  321 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1509


State 1449

  322 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1510


State 1450

  829 make_dim_decl: "array" '<' $@102 type_declaration_no_options '>' $@103 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1511
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1451

  841 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1512


State 1452

  842 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 705
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    expr_map_tuple_list     go to state 1513
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1453

  310 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' $@18 expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 310 (expr_cast)


State 1454

  313 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' $@20 expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 313 (expr_cast)


State 1455

  316 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' $@22 expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 316 (expr_cast)


State 1456

  833 make_dim_decl: "fixed_array" '<' $@104 type_declaration_no_options '>' $@105 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1514
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1457

  820 make_tuple_call: "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 901
    "name"  shift, and go to state 1295

    make_struct_fields  go to state 907
    make_struct_dim     go to state 1515


State 1458

  808 make_struct_decl: "variant" '<' $@96 type_declaration_no_options '>' $@97 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 901
    "name"  shift, and go to state 1295

    make_struct_fields  go to state 907
    make_struct_dim     go to state 1516


State 1459

  468 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 468 (expr)


State 1460

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  469     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1517


State 1461

  340 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 340 (expr_block)


State 1462

  507 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 507 (expr_mtag)


State 1463

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  848 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1518

    $default  reduce using rule 843 (array_comprehension_where)

    array_comprehension_where  go to state 1519


State 1464

  775 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1520
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1465

  774 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1521
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1466

  797 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 797 (make_struct_decl)


State 1467

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  776 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  777                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1522


State 1468

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  773 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 773 (make_struct_fields)


State 1469

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  772 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 772 (make_struct_fields)


State 1470

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  849 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1518

    $default  reduce using rule 843 (array_comprehension_where)

    array_comprehension_where  go to state 1523


State 1471

  799 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 799 (make_struct_decl)


State 1472

  851 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple . array_comprehension_where '}' '}'

    ';'  shift, and go to state 1518

    $default  reduce using rule 843 (array_comprehension_where)

    array_comprehension_where  go to state 1524


State 1473

  259 expression_keyword: "keyword" '<' $@11 type_declaration_no_options_list '>' $@12 expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 259 (expression_keyword)


State 1474

  254 optional_expr_list_in_braces: '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 251 (optional_expr_list)

    string_builder          go to state 500
    expr_reader             go to state 501
    optional_expr_list      go to state 1525
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 818
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1475

  262 expression_keyword: "type function" '<' $@13 type_declaration_no_options_list '>' $@14 optional_expr_list_in_braces .

    $default  reduce using rule 262 (expression_keyword)


State 1476

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  847 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1518

    $default  reduce using rule 843 (array_comprehension_where)

    array_comprehension_where  go to state 1526


State 1477

  400 func_addr_expr: '@' '@' '<' $@26 type_declaration_no_options '>' $@27 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 932
    "name"  shift, and go to state 59

    name_in_namespace  go to state 935
    func_addr_name     go to state 1527


State 1478

  403 func_addr_expr: '@' '@' '<' $@28 optional_function_argument_list optional_function_type '>' . $@29 func_addr_name

    $default  reduce using rule 402 ($@29)

    $@29  go to state 1528


State 1479

  850 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1518

    $default  reduce using rule 843 (array_comprehension_where)

    array_comprehension_where  go to state 1529


State 1480

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1481

  284 expression_return_no_pipe: "return" .
  285                          | "return" . expr_list
  286                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 1530
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 284 (expression_return_no_pipe)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 637
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1482

  290 expression_yield_no_pipe: "yield" . expr
  291                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 1531
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1532
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1483

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1484

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1485

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1486

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1487

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1488

   67 expression_if_one_liner: expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 67 (expression_if_one_liner)


State 1489

  343 expr_full_block_assumed_piped: block_or_lambda $@25 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1533


State 1490

  392 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1534


State 1491

  302 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1535


State 1492

  304 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 566
    ":="  shift, and go to state 567
    '='   shift, and go to state 568

    copy_or_move_or_clone  go to state 1536


State 1493

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 566
    "??"        shift, and go to state 403
    ":="        shift, and go to state 567
    '='         shift, and go to state 568
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 1537
    dim_list               go to state 409


State 1494

  305 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1538
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1495

  327 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1539
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1496

  326 block_or_simple_block: "=>" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    ".."  error (nonassociative)

    $default  reduce using rule 326 (block_or_simple_block)


State 1497

  474 expr: expr "is" "type" '<' $@32 type_declaration_no_options '>' . $@33

    $default  reduce using rule 473 ($@33)

    $@33  go to state 1540


State 1498

  480 expr: expr "as" "type" '<' $@34 type_declaration '>' . $@35

    $default  reduce using rule 479 ($@35)

    $@35  go to state 1541


State 1499

  485 expr: expr '?' "as" "type" '<' $@36 type_declaration . '>' $@37
  748 type_declaration: type_declaration . '|' type_declaration_no_options
  749                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1542


State 1500

  513 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 513 (expr_mtag)


State 1501

  511 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 511 (expr_mtag)


State 1502

  510 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 510 (expr_mtag)


State 1503

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@39 . function_declaration_header ';'

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1543


State 1504

  535 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@40 function_declaration_header expression_block

    $default  reduce using rule 534 ($@40)

    $@40  go to state 1544


State 1505

  528 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 528 (structure_variable_declaration)


State 1506

  694 type_declaration_no_options: '$' name_in_namespace '<' $@55 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 694 (type_declaration_no_options)


State 1507

  779 make_struct_dim: make_struct_dim . ';' make_struct_fields
  802 make_struct_decl: "struct" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1545
    ';'  shift, and go to state 1148


State 1508

  779 make_struct_dim: make_struct_dim . ';' make_struct_fields
  805 make_struct_decl: "class" '<' $@94 type_declaration_no_options '>' $@95 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1546
    ';'  shift, and go to state 1148


State 1509

  321 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 321 (expr_type_info)


State 1510

  322 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1547
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1511

  324 expr_list: expr_list . ',' expr
  829 make_dim_decl: "array" '<' $@102 type_declaration_no_options '>' $@103 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 929

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 1548


State 1512

  841 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 841 (make_table_decl)


State 1513

  837 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  842 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 938

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 1549


State 1514

  324 expr_list: expr_list . ',' expr
  833 make_dim_decl: "fixed_array" '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 929

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 1550


State 1515

  779 make_struct_dim: make_struct_dim . ';' make_struct_fields
  820 make_tuple_call: "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1551
    ';'  shift, and go to state 1148


State 1516

  779 make_struct_dim: make_struct_dim . ';' make_struct_fields
  808 make_struct_decl: "variant" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1552
    ';'  shift, and go to state 1148


State 1517

  469 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 469 (expr)


State 1518

  844 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1553


State 1519

  848 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1554


State 1520

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  775 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 775 (make_struct_fields)


State 1521

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  774 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 774 (make_struct_fields)


State 1522

  776 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  777                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 616
    ":="  shift, and go to state 1555
    '='   shift, and go to state 618

    copy_or_move  go to state 1556


State 1523

  849 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1557


State 1524

  851 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where . '}' '}'

    '}'  shift, and go to state 1558


State 1525

  254 optional_expr_list_in_braces: '(' optional_expr_list . ')'

    ')'  shift, and go to state 1559


State 1526

  847 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1560


State 1527

  400 func_addr_expr: '@' '@' '<' $@26 type_declaration_no_options '>' $@27 func_addr_name .

    $default  reduce using rule 400 (func_addr_expr)


State 1528

  403 func_addr_expr: '@' '@' '<' $@28 optional_function_argument_list optional_function_type '>' $@29 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 932
    "name"  shift, and go to state 59

    name_in_namespace  go to state 935
    func_addr_name     go to state 1561


State 1529

  850 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1562


State 1530

  286 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 849
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1531

  291 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1563
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1532

  290 expression_yield_no_pipe: "yield" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 290 (expression_yield_no_pipe)


State 1533

  343 expr_full_block_assumed_piped: block_or_lambda $@25 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 343 (expr_full_block_assumed_piped)


State 1534

  392 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 392 (expr_named_call)


State 1535

  302 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  686 type_declaration_no_options: type_declaration_no_options . dim_list
  687                            | type_declaration_no_options . '[' ']'
  695                            | type_declaration_no_options . '-' '[' ']'
  696                            | type_declaration_no_options . "explicit"
  697                            | type_declaration_no_options . "const"
  698                            | type_declaration_no_options . '-' "const"
  699                            | type_declaration_no_options . '&'
  700                            | type_declaration_no_options . '-' '&'
  701                            | type_declaration_no_options . '#'
  702                            | type_declaration_no_options . "implicit"
  703                            | type_declaration_no_options . '-' '#'
  704                            | type_declaration_no_options . "==" "const"
  705                            | type_declaration_no_options . "==" '&'
  706                            | type_declaration_no_options . '?'
  710                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 566
    "??"        shift, and go to state 403
    ":="        shift, and go to state 567
    '='         shift, and go to state 568
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 1564
    dim_list               go to state 409


State 1536

  304 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1565
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1537

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1566
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1538

  305 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . ';'
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1567


State 1539

  327 block_or_simple_block: "=>" "<-" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 327 (block_or_simple_block)


State 1540

  474 expr: expr "is" "type" '<' $@32 type_declaration_no_options '>' $@33 .

    $default  reduce using rule 474 (expr)


State 1541

  480 expr: expr "as" "type" '<' $@34 type_declaration '>' $@35 .

    $default  reduce using rule 480 (expr)


State 1542

  485 expr: expr '?' "as" "type" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 484 ($@37)

    $@37  go to state 1568


State 1543

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@39 function_declaration_header . ';'

    ';'  shift, and go to state 1569


State 1544

  535 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@40 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1570


State 1545

  802 make_struct_decl: "struct" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')' .

    $default  reduce using rule 802 (make_struct_decl)


State 1546

  805 make_struct_decl: "class" '<' $@94 type_declaration_no_options '>' $@95 '(' make_struct_dim ')' .

    $default  reduce using rule 805 (make_struct_decl)


State 1547

  322 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1571


State 1548

  829 make_dim_decl: "array" '<' $@102 type_declaration_no_options '>' $@103 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1572


State 1549

  842 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1573


State 1550

  833 make_dim_decl: "fixed_array" '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1574


State 1551

  820 make_tuple_call: "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' make_struct_dim ')' .

    $default  reduce using rule 820 (make_tuple_call)


State 1552

  808 make_struct_decl: "variant" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')' .

    $default  reduce using rule 808 (make_struct_decl)


State 1553

  844 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1575
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1554

  848 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1576


State 1555

  777 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1577
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1556

  776 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1578
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1557

  849 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1579


State 1558

  851 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' . '}'

    '}'  shift, and go to state 1580


State 1559

  254 optional_expr_list_in_braces: '(' optional_expr_list ')' .

    $default  reduce using rule 254 (optional_expr_list_in_braces)


State 1560

  847 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' .

    $default  reduce using rule 847 (array_comprehension)


State 1561

  403 func_addr_expr: '@' '@' '<' $@28 optional_function_argument_list optional_function_type '>' $@29 func_addr_name .

    $default  reduce using rule 403 (func_addr_expr)


State 1562

  850 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 850 (array_comprehension)


State 1563

  291 expression_yield_no_pipe: "yield" "<-" expr .
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 291 (expression_yield_no_pipe)


State 1564

  302 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1581
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1565

  304 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . ';'
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1582


State 1566

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . ';'
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1583


State 1567

  305 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 305 (tuple_expansion_variable_declaration)


State 1568

  485 expr: expr '?' "as" "type" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 485 (expr)


State 1569

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@39 function_declaration_header ';' .

    $default  reduce using rule 533 (struct_variable_declaration_list)


State 1570

  535 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@40 function_declaration_header . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1584


State 1571

  322 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 322 (expr_type_info)


State 1572

  829 make_dim_decl: "array" '<' $@102 type_declaration_no_options '>' $@103 '(' expr_list optional_comma ')' .

    $default  reduce using rule 829 (make_dim_decl)


State 1573

  842 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 842 (make_table_decl)


State 1574

  833 make_dim_decl: "fixed_array" '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')' .

    $default  reduce using rule 833 (make_dim_decl)


State 1575

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  844 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 844 (array_comprehension_where)


State 1576

  848 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 848 (array_comprehension)


State 1577

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  777 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 777 (make_struct_fields)


State 1578

  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'
  776 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 776 (make_struct_fields)


State 1579

  849 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 849 (array_comprehension)


State 1580

  851 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}' .

    $default  reduce using rule 851 (array_comprehension)


State 1581

  302 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . ';'
  393 expr_method_call: expr . "->" "name" '(' ')'
  394                 | expr . "->" "name" '(' expr_list ')'
  404 expr_field: expr . '.' "name"
  405           | expr . '.' '.' "name"
  406           | expr . '.' "name" '(' ')'
  407           | expr . '.' "name" '(' expr_list ')'
  410           | expr . '.' $@30 error $@31
  430 expr: expr . "<<" expr
  431     | expr . ">>" expr
  432     | expr . "<<<" expr
  433     | expr . ">>>" expr
  434     | expr . '+' expr
  435     | expr . '-' expr
  436     | expr . '*' expr
  437     | expr . '/' expr
  438     | expr . '%' expr
  439     | expr . '<' expr
  440     | expr . '>' expr
  441     | expr . "==" expr
  442     | expr . "!=" expr
  443     | expr . "<=" expr
  444     | expr . ">=" expr
  445     | expr . '&' expr
  446     | expr . '|' expr
  447     | expr . '^' expr
  448     | expr . "&&" expr
  449     | expr . "||" expr
  450     | expr . "^^" expr
  451     | expr . ".." expr
  454     | expr . "++"
  455     | expr . "--"
  457     | expr . '[' expr ']'
  458     | expr . '.' '[' expr ']'
  459     | expr . "?[" expr ']'
  460     | expr . '.' "?[" expr ']'
  461     | expr . "?." "name"
  462     | expr . '.' "?." "name"
  470     | expr . "??" expr
  471     | expr . '?' expr ':' expr
  474     | expr . "is" "type" '<' $@32 type_declaration_no_options '>' $@33
  475     | expr . "is" basic_type_declaration
  476     | expr . "is" "name"
  477     | expr . "as" "name"
  480     | expr . "as" "type" '<' $@34 type_declaration '>' $@35
  481     | expr . "as" basic_type_declaration
  482     | expr . '?' "as" "name"
  485     | expr . '?' "as" "type" '<' $@36 type_declaration '>' $@37
  486     | expr . '?' "as" basic_type_declaration
  494     | expr . "<|" expr
  495     | expr . "|>" expr
  496     | expr . "|>" basic_type_declaration
  508 expr_mtag: expr . '.' "$f" '(' expr ')'
  509          | expr . "?." "$f" '(' expr ')'
  510          | expr . '.' '.' "$f" '(' expr ')'
  511          | expr . '.' "?." "$f" '(' expr ')'
  512          | expr . "as" "$f" '(' expr ')'
  513          | expr . '?' "as" "$f" '(' expr ')'
  514          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1585


State 1582

  304 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 304 (tuple_expansion_variable_declaration)


State 1583

  303 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 303 (tuple_expansion_variable_declaration)


State 1584

  535 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@40 function_declaration_header expression_block .

    $default  reduce using rule 535 (struct_variable_declaration_list)


State 1585

  302 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 302 (tuple_expansion_variable_declaration)
