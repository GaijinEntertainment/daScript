Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 63 conflicts: 1 shift/reduce
State 336 conflicts: 1 shift/reduce
State 438 conflicts: 1 shift/reduce
State 555 conflicts: 2 shift/reduce
State 557 conflicts: 2 shift/reduce
State 667 conflicts: 1 shift/reduce
State 749 conflicts: 1 shift/reduce
State 959 conflicts: 1 shift/reduce
State 1103 conflicts: 1 shift/reduce
State 1217 conflicts: 1 shift/reduce
State 1218 conflicts: 1 shift/reduce
State 1511 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program semicolon

   16 top_level_reader_macro: expr_reader semicolon

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 optional_not_required: %empty
   23                      | '!' "inscope"

   24 module_declaration: "module" module_name optional_shared optional_public_or_private_module optional_not_required

   25 character_sequence: STRING_CHARACTER
   26                   | STRING_CHARACTER_ESC
   27                   | character_sequence STRING_CHARACTER
   28                   | character_sequence STRING_CHARACTER_ESC

   29 string_constant: "start of the string" character_sequence "end of the string"
   30                | "start of the string" "end of the string"

   31 format_string: %empty
   32              | format_string STRING_CHARACTER

   33 optional_format_string: %empty

   34 $@1: %empty

   35 optional_format_string: ':' $@1 format_string

   36 string_builder_body: %empty
   37                    | string_builder_body character_sequence
   38                    | string_builder_body "{" expr optional_format_string "}"

   39 string_builder: "start of the string" string_builder_body "end of the string"

   40 reader_character_sequence: STRING_CHARACTER
   41                          | reader_character_sequence STRING_CHARACTER

   42 $@2: %empty

   43 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   44 options_declaration: "options" annotation_argument_list

   45 require_declaration: "require" require_module

   46 keyword_or_name: "name"
   47                | "keyword"
   48                | "type function"

   49 require_module_name: keyword_or_name
   50                    | '%' require_module_name
   51                    | require_module_name '.' keyword_or_name
   52                    | require_module_name '/' keyword_or_name

   53 require_module: require_module_name is_public_module
   54               | require_module_name "as" "name" is_public_module

   55 is_public_module: %empty
   56                 | "public"

   57 expect_declaration: "expect" expect_list

   58 expect_list: expect_error
   59            | expect_list ',' expect_error

   60 expect_error: "integer constant"
   61             | "integer constant" ':' "integer constant"

   62 expression_label: "label" "integer constant" ':'

   63 expression_goto: "goto" "label" "integer constant"
   64                | "goto" expr

   65 elif_or_static_elif: "elif"
   66                    | "static_elif"

   67 expression_else: %empty
   68                | "else" expression_block
   69                | elif_or_static_elif expr expression_block expression_else

   70 semicolon: "end of line"
   71          | "end of expression"

   72 if_or_static_if: "if"
   73                | "static_if"

   74 expression_else_one_liner: %empty

   75 $@3: %empty

   76 expression_else_one_liner: "else" $@3 expression_if_one_liner

   77 expression_if_one_liner: expr
   78                        | expression_return_no_pipe
   79                        | expression_yield_no_pipe
   80                        | expression_break
   81                        | expression_continue

   82 expression_if_then_else: if_or_static_if expr expression_block expression_else

   83 $@4: %empty

   84 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner semicolon

   85 $@5: %empty

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list expression_block

   87 expression_unsafe: "unsafe" expression_block

   88 expression_while_loop: "while" expr expression_block

   89 expression_with: "with" expr expression_block

   90 $@6: %empty

   91 expression_with_alias: "assume" "name" '=' $@6 expr

   92 annotation_argument_value: string_constant
   93                          | "name"
   94                          | "integer constant"
   95                          | "floating point constant"
   96                          | "true"
   97                          | "false"

   98 annotation_argument_value_list: annotation_argument_value
   99                               | annotation_argument_value_list ',' annotation_argument_value

  100 annotation_argument_name: "name"
  101                         | "type"
  102                         | "in"

  103 annotation_argument: annotation_argument_name '=' string_constant
  104                    | annotation_argument_name '=' "name"
  105                    | annotation_argument_name '=' "integer constant"
  106                    | annotation_argument_name '=' "floating point constant"
  107                    | annotation_argument_name '=' "true"
  108                    | annotation_argument_name '=' "false"
  109                    | annotation_argument_name
  110                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  111 annotation_argument_list: annotation_argument
  112                         | annotation_argument_list ',' annotation_argument

  113 metadata_argument_list: '@' annotation_argument
  114                       | metadata_argument_list '@' annotation_argument
  115                       | metadata_argument_list semicolon

  116 annotation_declaration_name: name_in_namespace
  117                            | "require"
  118                            | "private"
  119                            | "template"

  120 annotation_declaration_basic: annotation_declaration_name
  121                             | annotation_declaration_name '(' annotation_argument_list ')'

  122 annotation_declaration: annotation_declaration_basic
  123                       | '!' annotation_declaration
  124                       | annotation_declaration "&&" annotation_declaration
  125                       | annotation_declaration "||" annotation_declaration
  126                       | annotation_declaration "^^" annotation_declaration
  127                       | '(' annotation_declaration ')'
  128                       | "|>" annotation_declaration

  129 annotation_list: annotation_declaration
  130                | annotation_list ',' annotation_declaration

  131 optional_annotation_list: %empty
  132                         | '[' annotation_list ']'

  133 optional_function_argument_list: %empty
  134                                | '(' ')'
  135                                | '(' function_argument_list ')'

  136 optional_function_type: %empty
  137                       | ':' type_declaration

  138 function_name: "name"
  139              | "operator" '!'
  140              | "operator" '~'
  141              | "operator" "+="
  142              | "operator" "-="
  143              | "operator" "*="
  144              | "operator" "/="
  145              | "operator" "%="
  146              | "operator" "&="
  147              | "operator" "|="
  148              | "operator" "^="
  149              | "operator" "&&="
  150              | "operator" "||="
  151              | "operator" "^^="
  152              | "operator" "&&"
  153              | "operator" "||"
  154              | "operator" "^^"
  155              | "operator" '+'
  156              | "operator" '-'
  157              | "operator" '*'
  158              | "operator" '/'
  159              | "operator" '%'
  160              | "operator" '<'
  161              | "operator" '>'
  162              | "operator" ".."
  163              | "operator" "=="
  164              | "operator" "!="
  165              | "operator" "<="
  166              | "operator" ">="
  167              | "operator" '&'
  168              | "operator" '|'
  169              | "operator" '^'
  170              | "++" "operator"
  171              | "--" "operator"
  172              | "operator" "++"
  173              | "operator" "--"
  174              | "operator" "<<"
  175              | "operator" ">>"
  176              | "operator" "<<="
  177              | "operator" ">>="
  178              | "operator" "<<<"
  179              | "operator" ">>>"
  180              | "operator" "<<<="
  181              | "operator" ">>>="
  182              | "operator" '[' ']'
  183              | "operator" "?[" ']'
  184              | "operator" '.'
  185              | "operator" "?."
  186              | "operator" '.' "name"
  187              | "operator" '.' "name" ":="
  188              | "operator" '.' "name" "+="
  189              | "operator" '.' "name" "-="
  190              | "operator" '.' "name" "*="
  191              | "operator" '.' "name" "/="
  192              | "operator" '.' "name" "%="
  193              | "operator" '.' "name" "&="
  194              | "operator" '.' "name" "|="
  195              | "operator" '.' "name" "^="
  196              | "operator" '.' "name" "&&="
  197              | "operator" '.' "name" "||="
  198              | "operator" '.' "name" "^^="
  199              | "operator" "?." "name"
  200              | "operator" ":="
  201              | "operator" "delete"
  202              | "operator" "??"
  203              | "operator" "is"
  204              | "operator" "as"
  205              | "operator" "is" "name"
  206              | "operator" "as" "name"
  207              | "operator" '?' "as"
  208              | "operator" '?' "as" "name"
  209              | "bool"
  210              | "string"
  211              | "int"
  212              | "int2"
  213              | "int3"
  214              | "int4"
  215              | "uint"
  216              | "uint2"
  217              | "uint3"
  218              | "uint4"
  219              | "float"
  220              | "float2"
  221              | "float3"
  222              | "float4"
  223              | "range"
  224              | "urange"
  225              | "range64"
  226              | "urange64"
  227              | "int64"
  228              | "uint64"
  229              | "double"
  230              | "int8"
  231              | "uint8"
  232              | "int16"
  233              | "uint16"

  234 global_function_declaration: optional_annotation_list "def" function_declaration

  235 optional_public_or_private_function: %empty
  236                                    | "private"
  237                                    | "public"

  238 function_declaration_header: function_name optional_function_argument_list optional_function_type

  239 $@7: %empty

  240 function_declaration: optional_public_or_private_function $@7 function_declaration_header expression_block

  241 open_block: "begin of code block"
  242           | "new scope"

  243 close_block: "end of code block"
  244            | "close scope"

  245 expression_block: open_block expressions close_block
  246                 | open_block expressions close_block "finally" open_block expressions close_block

  247 expr_call_pipe: expr expr_full_block_assumed_piped
  248               | expression_keyword expr_full_block_assumed_piped
  249               | "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped

  250 expression_any: semicolon
  251               | expr_pipe
  252               | expr_keyword
  253               | expr_assign_pipe
  254               | expr_assign semicolon
  255               | expression_delete semicolon
  256               | expression_let
  257               | expression_while_loop
  258               | expression_unsafe
  259               | expression_with
  260               | expression_with_alias
  261               | expression_for_loop
  262               | expression_break semicolon
  263               | expression_continue semicolon
  264               | expression_return
  265               | expression_yield
  266               | expression_if_then_else
  267               | expression_try_catch
  268               | expression_label semicolon
  269               | expression_goto semicolon
  270               | "pass" semicolon

  271 expressions: %empty
  272            | expressions expression_any
  273            | expressions error

  274 expr_keyword: "keyword" expr expression_block

  275 optional_expr_list: %empty
  276                   | expr_list optional_comma

  277 optional_expr_list_in_braces: %empty
  278                             | '(' optional_expr_list optional_comma ')'

  279 optional_expr_map_tuple_list: %empty
  280                             | expr_map_tuple_list optional_comma

  281 type_declaration_no_options_list: type_declaration
  282                                 | type_declaration_no_options_list c_or_s type_declaration

  283 $@8: %empty

  284 $@9: %empty

  285 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 expr

  286 $@10: %empty

  287 $@11: %empty

  288 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

  289 expr_pipe: expr_assign " <|" expr_block
  290          | "@ <|" expr_block
  291          | "@@ <|" expr_block
  292          | "$ <|" expr_block
  293          | expr_call_pipe

  294 name_in_namespace: "name"
  295                  | "name" "::" "name"
  296                  | "::" "name"

  297 expression_delete: "delete" expr
  298                  | "delete" "explicit" expr

  299 $@12: %empty

  300 $@13: %empty

  301 new_type_declaration: '<' $@12 type_declaration '>' $@13
  302                     | structure_type_declaration

  303 expr_new: "new" new_type_declaration
  304         | "new" new_type_declaration '(' use_initializer ')'
  305         | "new" new_type_declaration '(' expr_list ')'
  306         | "new" new_type_declaration '(' make_struct_single ')'
  307         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  308         | "new" make_decl

  309 expression_break: "break"

  310 expression_continue: "continue"

  311 expression_return_no_pipe: "return"
  312                          | "return" expr_list
  313                          | "return" "<-" expr_list

  314 expression_return: expression_return_no_pipe semicolon
  315                  | "return" expr_pipe
  316                  | "return" "<-" expr_pipe

  317 expression_yield_no_pipe: "yield" expr
  318                         | "yield" "<-" expr

  319 expression_yield: expression_yield_no_pipe semicolon
  320                 | "yield" expr_pipe
  321                 | "yield" "<-" expr_pipe

  322 expression_try_catch: "try" expression_block "recover" expression_block

  323 kwd_let_var_or_nothing: "let"
  324                       | "var"
  325                       | %empty

  326 kwd_let: "let"
  327        | "var"

  328 optional_in_scope: "inscope"
  329                  | %empty

  330 tuple_expansion: "name"
  331                | tuple_expansion ',' "name"

  332 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  333                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  334                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  335                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  336                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  337                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe
  338                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon
  339                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

  340 expression_let: kwd_let optional_in_scope let_variable_declaration
  341               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  342 $@14: %empty

  343 $@15: %empty

  344 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 expr

  345 $@16: %empty

  346 $@17: %empty

  347 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 expr

  348 $@18: %empty

  349 $@19: %empty

  350 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 expr

  351 $@20: %empty

  352 $@21: %empty

  353 expr_type_decl: "type" '<' $@20 type_declaration '>' $@21

  354 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  355               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  356               | "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  357               | "typeinfo" name_in_namespace '(' expr ')'
  358               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  359               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  360 expr_list: expr
  361          | expr_list ',' expr

  362 block_or_simple_block: expression_block
  363                      | "=>" expr
  364                      | "=>" "<-" expr

  365 block_or_lambda: '$'
  366                | '@'
  367                | '@' '@'

  368 capture_entry: '&' "name"
  369              | '=' "name"
  370              | "<-" "name"
  371              | ":=" "name"
  372              | "name" '(' "name" ')'

  373 capture_list: capture_entry
  374             | capture_list ',' capture_entry

  375 optional_capture_list: %empty
  376                      | "[[" capture_list ']' ']'
  377                      | "capture" '(' capture_list ')'

  378 expr_block: expression_block
  379           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  380 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  381 $@22: %empty

  382 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  383 expr_numeric_const: "integer constant"
  384                   | "unsigned integer constant"
  385                   | "long integer constant"
  386                   | "unsigned long integer constant"
  387                   | "unsigned int8 constant"
  388                   | "floating point constant"
  389                   | "double constant"

  390 expr_assign: expr
  391            | expr '=' expr
  392            | expr "<-" expr
  393            | expr ":=" expr
  394            | expr "&=" expr
  395            | expr "|=" expr
  396            | expr "^=" expr
  397            | expr "&&=" expr
  398            | expr "||=" expr
  399            | expr "^^=" expr
  400            | expr "+=" expr
  401            | expr "-=" expr
  402            | expr "*=" expr
  403            | expr "/=" expr
  404            | expr "%=" expr
  405            | expr "<<=" expr
  406            | expr ">>=" expr
  407            | expr "<<<=" expr
  408            | expr ">>>=" expr

  409 expr_assign_pipe_right: "@ <|" expr_block
  410                       | "@@ <|" expr_block
  411                       | "$ <|" expr_block
  412                       | expr_call_pipe

  413 expr_assign_pipe: expr '=' expr_assign_pipe_right
  414                 | expr "<-" expr_assign_pipe_right
  415                 | expr "&=" expr_assign_pipe_right
  416                 | expr "|=" expr_assign_pipe_right
  417                 | expr "^=" expr_assign_pipe_right
  418                 | expr "&&=" expr_assign_pipe_right
  419                 | expr "||=" expr_assign_pipe_right
  420                 | expr "^^=" expr_assign_pipe_right
  421                 | expr "+=" expr_assign_pipe_right
  422                 | expr "-=" expr_assign_pipe_right
  423                 | expr "*=" expr_assign_pipe_right
  424                 | expr "/=" expr_assign_pipe_right
  425                 | expr "%=" expr_assign_pipe_right
  426                 | expr "<<=" expr_assign_pipe_right
  427                 | expr ">>=" expr_assign_pipe_right
  428                 | expr "<<<=" expr_assign_pipe_right
  429                 | expr ">>>=" expr_assign_pipe_right

  430 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  431                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  432 expr_method_call: expr "->" "name" '(' ')'
  433                 | expr "->" "name" '(' expr_list ')'

  434 func_addr_name: name_in_namespace
  435               | "$i" '(' expr ')'

  436 func_addr_expr: '@' '@' func_addr_name

  437 $@23: %empty

  438 $@24: %empty

  439 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name

  440 $@25: %empty

  441 $@26: %empty

  442 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name

  443 expr_field: expr '.' "name"
  444           | expr '.' '.' "name"
  445           | expr '.' "name" '(' ')'
  446           | expr '.' "name" '(' expr_list ')'
  447           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr '.' basic_type_declaration '(' ')'
  449           | expr '.' basic_type_declaration '(' expr_list ')'

  450 $@27: %empty

  451 $@28: %empty

  452 expr_field: expr '.' $@27 error $@28

  453 expr_call: name_in_namespace '(' ')'
  454          | name_in_namespace '(' "uninitialized" ')'
  455          | name_in_namespace '(' make_struct_single ')'
  456          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  457          | name_in_namespace '(' expr_list ')'
  458          | basic_type_declaration '(' ')'
  459          | basic_type_declaration '(' expr_list ')'

  460 expr: "null"
  461     | name_in_namespace
  462     | expr_numeric_const
  463     | expr_reader
  464     | string_builder
  465     | make_decl
  466     | "true"
  467     | "false"
  468     | expr_field
  469     | expr_mtag
  470     | '!' expr
  471     | '~' expr
  472     | '+' expr
  473     | '-' expr
  474     | expr "<<" expr
  475     | expr ">>" expr
  476     | expr "<<<" expr
  477     | expr ">>>" expr
  478     | expr '+' expr
  479     | expr '-' expr
  480     | expr '*' expr
  481     | expr '/' expr
  482     | expr '%' expr
  483     | expr '<' expr
  484     | expr '>' expr
  485     | expr "==" expr
  486     | expr "!=" expr
  487     | expr "<=" expr
  488     | expr ">=" expr
  489     | expr '&' expr
  490     | expr '|' expr
  491     | expr '^' expr
  492     | expr "&&" expr
  493     | expr "||" expr
  494     | expr "^^" expr
  495     | expr ".." expr
  496     | "++" expr
  497     | "--" expr
  498     | expr "++"
  499     | expr "--"
  500     | '(' expr_list optional_comma ')'
  501     | '(' make_struct_single ')'
  502     | expr '[' expr ']'
  503     | expr '.' '[' expr ']'
  504     | expr "?[" expr ']'
  505     | expr '.' "?[" expr ']'
  506     | expr "?." "name"
  507     | expr '.' "?." "name"
  508     | func_addr_expr
  509     | expr_call
  510     | '*' expr
  511     | "deref" '(' expr ')'
  512     | "addr" '(' expr ')'
  513     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  514     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  515     | expr "??" expr
  516     | expr '?' expr ':' expr

  517 $@29: %empty

  518 $@30: %empty

  519 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr "is" basic_type_declaration
  521     | expr "is" "name"
  522     | expr "as" "name"

  523 $@31: %empty

  524 $@32: %empty

  525 expr: expr "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr "as" basic_type_declaration
  527     | expr '?' "as" "name"

  528 $@33: %empty

  529 $@34: %empty

  530 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr '?' "as" basic_type_declaration
  532     | expr_type_info
  533     | expr_type_decl
  534     | expr_cast
  535     | expr_new
  536     | expr_method_call
  537     | expr_named_call
  538     | expr_full_block
  539     | expr "<|" expr
  540     | expr "|>" expr
  541     | expr "|>" basic_type_declaration
  542     | name_in_namespace "name"
  543     | "unsafe" '(' expr ')'
  544     | expression_keyword

  545 expr_mtag: "$$" '(' expr ')'
  546          | "$i" '(' expr ')'
  547          | "$v" '(' expr ')'
  548          | "$b" '(' expr ')'
  549          | "$a" '(' expr ')'
  550          | "..."
  551          | "$c" '(' expr ')' '(' ')'
  552          | "$c" '(' expr ')' '(' expr_list ')'
  553          | expr '.' "$f" '(' expr ')'
  554          | expr "?." "$f" '(' expr ')'
  555          | expr '.' '.' "$f" '(' expr ')'
  556          | expr '.' "?." "$f" '(' expr ')'
  557          | expr "as" "$f" '(' expr ')'
  558          | expr '?' "as" "$f" '(' expr ')'
  559          | expr "is" "$f" '(' expr ')'
  560          | '@' '@' "$c" '(' expr ')'

  561 optional_field_annotation: %empty
  562                          | "[[" annotation_argument_list ']' ']'
  563                          | metadata_argument_list

  564 optional_override: %empty
  565                  | "override"
  566                  | "sealed"

  567 optional_constant: %empty
  568                  | "const"

  569 optional_public_or_private_member_variable: %empty
  570                                           | "public"
  571                                           | "private"

  572 optional_static_member_variable: %empty
  573                                | "static"

  574 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  575 struct_variable_declaration_list: %empty
  576                                 | struct_variable_declaration_list semicolon

  577 $@35: %empty

  578 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration semicolon

  579 $@36: %empty

  580 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon

  581 $@37: %empty

  582 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block
  583                                 | struct_variable_declaration_list '[' annotation_list ']' semicolon

  584 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type

  585 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type
  586                                   | "$a" '(' expr ')'

  587 function_argument_list: function_argument_declaration_no_type
  588                       | function_argument_declaration_type
  589                       | function_argument_declaration_no_type semicolon function_argument_list
  590                       | function_argument_declaration_type semicolon function_argument_list
  591                       | function_argument_declaration_type ',' function_argument_list

  592 tuple_type: type_declaration
  593           | "name" ':' type_declaration

  594 tuple_type_list: tuple_type
  595                | tuple_type_list c_or_s tuple_type

  596 tuple_alias_type_list: %empty
  597                      | tuple_alias_type_list c_or_s
  598                      | tuple_alias_type_list tuple_type c_or_s

  599 variant_type: "name" ':' type_declaration

  600 variant_type_list: variant_type
  601                  | variant_type_list c_or_s variant_type

  602 variant_alias_type_list: %empty
  603                        | variant_alias_type_list c_or_s
  604                        | variant_alias_type_list variant_type c_or_s

  605 copy_or_move: '='
  606             | "<-"

  607 variable_declaration_no_type: variable_name_with_pos_list
  608                             | variable_name_with_pos_list '&'
  609                             | variable_name_with_pos_list copy_or_move expr

  610 variable_declaration_type: variable_name_with_pos_list ':' type_declaration
  611                          | variable_name_with_pos_list ':' type_declaration copy_or_move expr

  612 variable_declaration: variable_declaration_type
  613                     | variable_declaration_no_type

  614 copy_or_move_or_clone: '='
  615                      | "<-"
  616                      | ":="

  617 optional_ref: %empty
  618             | '&'

  619 let_variable_name_with_pos_list: "name"
  620                                | "$i" '(' expr ')'
  621                                | "name" "aka" "name"
  622                                | let_variable_name_with_pos_list ',' "name"
  623                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  624 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options semicolon
  625                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  626                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  627                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr semicolon
  628                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  629 global_variable_declaration_list: %empty
  630                                 | global_variable_declaration_list "end of line"

  631 $@38: %empty

  632 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation let_variable_declaration

  633 optional_shared: %empty
  634                | "shared"

  635 optional_public_or_private_variable: %empty
  636                                    | "private"
  637                                    | "public"

  638 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block

  639 $@39: %empty

  640 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

  641 enum_list: %empty
  642          | enum_list semicolon
  643          | enum_list "name" semicolon
  644          | enum_list "name" '=' expr semicolon

  645 optional_public_or_private_alias: %empty
  646                                 | "private"
  647                                 | "public"

  648 $@40: %empty

  649 single_alias: optional_public_or_private_alias "name" $@40 '=' type_declaration

  650 alias_list: single_alias semicolon
  651           | alias_list single_alias semicolon

  652 alias_declaration: "typedef" open_block alias_list close_block

  653 $@41: %empty

  654 alias_declaration: "typedef" $@41 single_alias semicolon

  655 optional_public_or_private_enum: %empty
  656                                | "private"
  657                                | "public"

  658 enum_name: "name"

  659 $@42: %empty

  660 $@43: %empty

  661 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block

  662 $@44: %empty

  663 $@45: %empty

  664 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

  665 optional_structure_parent: %empty
  666                          | ':' name_in_namespace

  667 optional_sealed: %empty
  668                | "sealed"

  669 structure_name: optional_sealed "name" optional_structure_parent

  670 class_or_struct: "class"
  671                | "struct"
  672                | "template" "class"
  673                | "template" "struct"

  674 optional_public_or_private_structure: %empty
  675                                     | "private"
  676                                     | "public"

  677 optional_struct_variable_declaration_list: %empty
  678                                          | open_block struct_variable_declaration_list close_block

  679 $@46: %empty

  680 $@47: %empty

  681 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

  682 variable_name_with_pos_list: "name"
  683                            | "$i" '(' expr ')'
  684                            | "name" "aka" "name"
  685                            | variable_name_with_pos_list ',' "name"
  686                            | variable_name_with_pos_list ',' "name" "aka" "name"

  687 basic_type_declaration: "bool"
  688                       | "string"
  689                       | "int"
  690                       | "int8"
  691                       | "int16"
  692                       | "int64"
  693                       | "int2"
  694                       | "int3"
  695                       | "int4"
  696                       | "uint"
  697                       | "uint8"
  698                       | "uint16"
  699                       | "uint64"
  700                       | "uint2"
  701                       | "uint3"
  702                       | "uint4"
  703                       | "float"
  704                       | "float2"
  705                       | "float3"
  706                       | "float4"
  707                       | "void"
  708                       | "range"
  709                       | "urange"
  710                       | "range64"
  711                       | "urange64"
  712                       | "double"
  713                       | "bitfield"

  714 enum_basic_type_declaration: "int"
  715                            | "int8"
  716                            | "int16"
  717                            | "uint"
  718                            | "uint8"
  719                            | "uint16"
  720                            | "int64"
  721                            | "uint64"

  722 structure_type_declaration: name_in_namespace

  723 auto_type_declaration: "auto"
  724                      | "auto" '(' "name" ')'
  725                      | "$t" '(' expr ')'

  726 bitfield_bits: "name"
  727              | bitfield_bits semicolon "name"

  728 bitfield_alias_bits: %empty
  729                    | bitfield_alias_bits semicolon
  730                    | bitfield_alias_bits "name" semicolon
  731                    | bitfield_alias_bits "name" '=' expr semicolon

  732 bitfield_basic_type_declaration: %empty
  733                                | ':' "uint8"
  734                                | ':' "uint16"
  735                                | ':' "uint"
  736                                | ':' "uint64"

  737 $@48: %empty

  738 $@49: %empty

  739 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@48 bitfield_bits '>' $@49

  740 c_or_s: ','
  741       | semicolon

  742 table_type_pair: type_declaration
  743                | type_declaration c_or_s type_declaration

  744 dim_list: '[' expr ']'
  745         | dim_list '[' expr ']'

  746 type_declaration_no_options: basic_type_declaration
  747                            | auto_type_declaration
  748                            | bitfield_type_declaration
  749                            | structure_type_declaration
  750                            | type_declaration_no_options dim_list
  751                            | type_declaration_no_options '[' ']'

  752 $@50: %empty

  753 $@51: %empty

  754 type_declaration_no_options: "type" '<' $@50 type_declaration '>' $@51
  755                            | "typedecl" '(' expr ')'
  756                            | '$' name_in_namespace '(' optional_expr_list ')'

  757 $@52: %empty

  758 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  759                            | type_declaration_no_options '-' '[' ']'
  760                            | type_declaration_no_options "explicit"
  761                            | type_declaration_no_options "const"
  762                            | type_declaration_no_options '-' "const"
  763                            | type_declaration_no_options '&'
  764                            | type_declaration_no_options '-' '&'
  765                            | type_declaration_no_options '#'
  766                            | type_declaration_no_options "implicit"
  767                            | type_declaration_no_options '-' '#'
  768                            | type_declaration_no_options "==" "const"
  769                            | type_declaration_no_options "==" '&'
  770                            | type_declaration_no_options '?'

  771 $@53: %empty

  772 $@54: %empty

  773 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' $@54
  774                            | type_declaration_no_options "??"

  775 $@55: %empty

  776 $@56: %empty

  777 type_declaration_no_options: "array" '<' $@55 type_declaration '>' $@56

  778 $@57: %empty

  779 $@58: %empty

  780 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' $@58

  781 $@59: %empty

  782 $@60: %empty

  783 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' $@60
  784                            | "block"

  785 $@61: %empty

  786 $@62: %empty

  787 type_declaration_no_options: "block" '<' $@61 type_declaration '>' $@62

  788 $@63: %empty

  789 $@64: %empty

  790 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64
  791                            | "function"

  792 $@65: %empty

  793 $@66: %empty

  794 type_declaration_no_options: "function" '<' $@65 type_declaration '>' $@66

  795 $@67: %empty

  796 $@68: %empty

  797 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  798                            | "lambda"

  799 $@69: %empty

  800 $@70: %empty

  801 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' $@70

  802 $@71: %empty

  803 $@72: %empty

  804 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72

  805 $@73: %empty

  806 $@74: %empty

  807 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' $@74

  808 $@75: %empty

  809 $@76: %empty

  810 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' $@76

  811 type_declaration: type_declaration_no_options
  812                 | type_declaration '|' type_declaration_no_options
  813                 | type_declaration '|' '#'

  814 $@77: %empty

  815 $@78: %empty

  816 $@79: %empty

  817 $@80: %empty

  818 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

  819 $@81: %empty

  820 $@82: %empty

  821 $@83: %empty

  822 $@84: %empty

  823 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

  824 $@85: %empty

  825 $@86: %empty

  826 $@87: %empty

  827 $@88: %empty

  828 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits $@88 close_block

  829 make_decl: make_struct_decl
  830          | make_dim_decl
  831          | make_table_decl
  832          | array_comprehension
  833          | make_tuple_call

  834 make_struct_fields: "name" copy_or_move expr
  835                   | "name" ":=" expr
  836                   | make_struct_fields ',' "name" copy_or_move expr
  837                   | make_struct_fields ',' "name" ":=" expr
  838                   | "$f" '(' expr ')' copy_or_move expr
  839                   | "$f" '(' expr ')' ":=" expr
  840                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  841                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  842 make_variant_dim: %empty
  843                 | make_struct_fields

  844 make_struct_single: make_struct_fields optional_comma

  845 make_struct_dim: make_struct_fields
  846                | make_struct_dim "end of expression" make_struct_fields

  847 make_struct_dim_list: '(' make_struct_fields ')'
  848                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  849 make_struct_dim_decl: make_struct_fields
  850                     | make_struct_dim_list optional_comma

  851 optional_make_struct_dim_decl: make_struct_dim_decl
  852                              | %empty

  853 optional_block: %empty
  854               | "where" expr_block

  855 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  856                                    | ";}}"

  857 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  858                                    | ";}]"

  859 optional_trailing_semicolon_sqr_sqr: ']' ']'
  860                                    | ";]]"

  861 optional_trailing_delim_sqr_sqr: ']' ']'
  862                                | ";]]"
  863                                | ",]]"

  864 optional_trailing_delim_cur_sqr: "end of code block" ']'
  865                                | ";}]"
  866                                | ",}]"

  867 use_initializer: %empty
  868                | "uninitialized"

  869 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  870                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  871                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  872                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  873                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  874                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  875 $@89: %empty

  876 $@90: %empty

  877 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

  878 $@91: %empty

  879 $@92: %empty

  880 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

  881 $@93: %empty

  882 $@94: %empty

  883 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

  884 $@95: %empty

  885 $@96: %empty

  886 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer

  887 make_tuple: expr
  888           | expr "=>" expr
  889           | make_tuple ',' expr

  890 make_map_tuple: expr "=>" expr
  891               | expr

  892 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  893 $@97: %empty

  894 $@98: %empty

  895 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

  896 make_dim: make_tuple
  897         | make_dim "end of expression" make_tuple

  898 make_dim_decl: '[' optional_expr_list ']'
  899              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  900              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  901 $@99: %empty

  902 $@100: %empty

  903 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

  904 $@101: %empty

  905 $@102: %empty

  906 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  907 $@103: %empty

  908 $@104: %empty

  909 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'
  910              | "array" '(' expr_list optional_comma ')'

  911 $@105: %empty

  912 $@106: %empty

  913 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'
  914              | "fixed_array" '(' expr_list optional_comma ')'

  915 $@107: %empty

  916 $@108: %empty

  917 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

  918 make_table: make_map_tuple
  919           | make_table "end of expression" make_map_tuple

  920 expr_map_tuple_list: make_map_tuple
  921                    | expr_map_tuple_list ',' make_map_tuple

  922 make_table_decl: "begin of code block" optional_expr_map_tuple_list "end of code block"
  923                | "{{" make_table optional_trailing_semicolon_cur_cur
  924                | "table" '(' optional_expr_map_tuple_list ')'
  925                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  926                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  927 array_comprehension_where: %empty
  928                          | "end of expression" "where" expr

  929 optional_comma: %empty
  930               | ','

  931 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  932                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  933                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  934                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  935                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  936                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 23 123 139 470
    '#' (35) 765 767 813
    '$' (36) 20 365 756 758
    '%' (37) 43 50 159 482
    '&' (38) 167 368 489 608 618 763 764 769
    '(' (40) 110 121 127 134 135 278 304 305 306 307 334 335 338 339 354 355 356 357 358 359 372 377 430 431 432 433 435 445 446 447 448 449 453 454 455 456 457 458 459 500 501 511 512 513 514 543 545 546 547 548 549 551 552 553 554 555 556 557 558 559 560 586 620 683 724 725 755 756 758 838 839 840 841 847 848 871 872 874 877 880 883 892 895 903 906 909 910 913 914 917 924 925 926
    ')' (41) 110 121 127 134 135 278 304 305 306 307 334 335 338 339 354 355 356 357 358 359 372 377 430 431 432 433 435 445 446 447 448 449 453 454 455 456 457 458 459 500 501 511 512 513 514 543 545 546 547 548 549 551 552 553 554 555 556 557 558 559 560 586 620 683 724 725 755 756 758 838 839 840 841 847 848 871 872 874 877 880 883 892 895 903 906 909 910 913 914 917 924 925 926
    '*' (42) 157 480 510
    '+' (43) 155 472 478
    ',' (44) 59 99 112 130 331 361 374 431 591 622 623 685 686 740 836 837 840 841 848 889 921 930
    '-' (45) 156 473 479 759 762 764 767
    '.' (46) 51 184 186 187 188 189 190 191 192 193 194 195 196 197 198 443 444 445 446 447 448 449 452 503 505 507 553 555 556
    '/' (47) 52 158 481
    ':' (58) 35 61 62 137 332 333 334 335 516 593 599 610 611 624 625 626 664 666 733 734 735 736
    "end of expression" (59) 71 359 846 897 919 928 931 932 933 934 935 936
    '<' (60) 160 249 285 288 301 344 347 350 353 355 356 358 359 439 442 483 513 514 519 525 530 739 754 758 773 777 780 783 787 790 794 797 801 804 807 810 877 880 883 886 895 903 906 909 913 917 925 926
    '=' (61) 91 103 104 105 106 107 108 110 369 391 413 605 614 644 649 731
    '>' (62) 161 249 285 288 301 344 347 350 353 355 356 358 359 439 442 484 513 514 519 525 530 739 754 758 773 777 780 783 787 790 794 797 801 804 807 810 877 880 883 886 895 903 906 909 913 917 925 926
    '?' (63) 207 208 516 527 530 531 558 770
    '@' (64) 113 114 366 367 436 439 442 560
    '[' (91) 132 182 430 431 447 502 503 583 744 745 751 759 898 931 932
    ']' (93) 132 182 183 332 333 336 337 376 430 431 447 502 503 504 505 562 583 744 745 751 759 857 859 861 864 898 931 932 933 934
    '^' (94) 169 491
    "begin of code block" (123) 241 922 935
    '|' (124) 168 490 812 813
    "end of code block" (125) 243 855 857 864 922 934 935 936
    '~' (126) 140 471
    error (256) 273 452
    "lexer error" (258)
    "capture" (259) 377
    "struct" (260) 671 673 877 903
    "class" (261) 670 672 880
    "let" (262) 323 326
    "def" (263) 234 580 582
    "while" (264) 88
    "if" (265) 72 84
    "static_if" (266) 73
    "else" (267) 68 76
    "for" (268) 86 931 932 933 934 935 936
    "recover" (269) 322
    "true" (270) 96 107 466
    "false" (271) 97 108 467
    "new" (272) 303 304 305 306 307 308
    "typeinfo" (273) 354 355 356 357 358 359
    "type" (274) 101 353 519 525 530 754
    "in" (275) 86 102 931 932 933 934 935 936
    "is" (276) 203 205 519 520 521 559
    "as" (277) 54 204 206 207 208 522 525 526 527 530 531 557 558
    "elif" (278) 65
    "static_elif" (279) 66
    "array" (280) 777 903 906 909 910 913
    "return" (281) 311 312 313 315 316
    "null" (282) 460
    "break" (283) 309
    "try" (284) 322
    "options" (285) 44
    "table" (286) 780 924 925 926
    "expect" (287) 57
    "const" (288) 568 761 762 768
    "require" (289) 45 117
    "operator" (290) 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208
    "enum" (291) 661 664
    "finally" (292) 246
    "delete" (293) 201 297 298
    "deref" (294) 511
    "typedef" (295) 652 654
    "typedecl" (296) 755
    "with" (297) 89
    "aka" (298) 621 623 684 686
    "assume" (299) 91
    "cast" (300) 344
    "override" (301) 565
    "abstract" (302) 580
    "upcast" (303) 347
    "iterator" (304) 783 932
    "var" (305) 324 327
    "addr" (306) 512
    "continue" (307) 310
    "where" (308) 854 928
    "pass" (309) 270
    "reinterpret" (310) 350
    "module" (311) 24
    "public" (312) 18 56 237 570 637 647 657 676
    "label" (313) 62 63
    "goto" (314) 63 64
    "implicit" (315) 766
    "explicit" (316) 298 760
    "shared" (317) 634
    "private" (318) 19 118 236 571 636 646 656 675
    "smart_ptr" (319) 773
    "unsafe" (320) 87 543
    "inscope" (321) 23 328
    "static" (322) 573
    "fixed_array" (323) 914 917
    "default" (324) 886
    "uninitialized" (325) 307 454 456 868
    "bool" (326) 209 687
    "void" (327) 707
    "string" (328) 210 688
    "auto" (329) 723 724
    "int" (330) 211 689 714
    "int2" (331) 212 693
    "int3" (332) 213 694
    "int4" (333) 214 695
    "uint" (334) 215 696 717 735
    "bitfield" (335) 713 739 828
    "uint2" (336) 216 700
    "uint3" (337) 217 701
    "uint4" (338) 218 702
    "float" (339) 219 703
    "float2" (340) 220 704
    "float3" (341) 221 705
    "float4" (342) 222 706
    "range" (343) 223 708
    "urange" (344) 224 709
    "range64" (345) 225 710
    "urange64" (346) 226 711
    "block" (347) 784 787 790
    "int64" (348) 227 692 720
    "uint64" (349) 228 699 721 736
    "double" (350) 229 712
    "function" (351) 791 794 797
    "lambda" (352) 798 801 804
    "int8" (353) 230 690 715
    "uint8" (354) 231 697 718 733
    "int16" (355) 232 691 716
    "uint16" (356) 233 698 719 734
    "tuple" (357) 807 818 892 895 906
    "variant" (358) 810 823 883 909
    "generator" (359) 249 513 514
    "yield" (360) 317 318 320 321
    "sealed" (361) 566 668
    "template" (362) 119 672 673
    "+=" (363) 141 188 400 421
    "-=" (364) 142 189 401 422
    "/=" (365) 144 191 403 424
    "*=" (366) 143 190 402 423
    "%=" (367) 145 192 404 425
    "&=" (368) 146 193 394 415
    "|=" (369) 147 194 395 416
    "^=" (370) 148 195 396 417
    "<<" (371) 174 474
    ">>" (372) 175 475
    "++" (373) 170 172 496 498
    "--" (374) 171 173 497 499
    "<=" (375) 165 487
    "<<=" (376) 176 405 426
    ">>=" (377) 177 406 427
    ">=" (378) 166 488
    "==" (379) 163 485 768 769
    "!=" (380) 164 486
    "->" (381) 432 433
    "<-" (382) 313 316 318 321 364 370 392 414 606 615
    "??" (383) 202 515 774
    "?." (384) 185 199 506 507 554 556
    "?[" (385) 183 504 505
    "<|" (386) 539
    " <|" (387) 289
    "$ <|" (388) 292 411
    "@ <|" (389) 290 409
    "@@ <|" (390) 291 410
    "|>" (391) 128 540 541
    ":=" (392) 187 200 371 393 616 835 837 839 841
    "<<<" (393) 178 476
    ">>>" (394) 179 477
    "<<<=" (395) 180 407 428
    ">>>=" (396) 181 408 429
    "=>" (397) 363 364 888 890
    "::" (398) 295 296
    "&&" (399) 124 152 492
    "||" (400) 125 153 493
    "^^" (401) 126 154 494
    "&&=" (402) 149 196 397 418
    "||=" (403) 150 197 398 419
    "^^=" (404) 151 198 399 420
    ".." (405) 162 495
    "$$" (406) 545
    "$i" (407) 435 546 620 683
    "$v" (408) 547
    "$b" (409) 548
    "$a" (410) 549 586
    "$t" (411) 725
    "$c" (412) 551 552 560
    "$f" (413) 553 554 555 556 557 558 559 838 839 840 841
    "..." (414) 550
    "[[" (415) 332 333 336 337 376 562 869 870 871 872 899 933
    "[{" (416) 873 874 900 934
    "{{" (417) 923 936
    "new scope" <i> (418) 242
    "close scope" <i> (419) 244
    "end of line" (420) 70 630
    "integer constant" <i> (421) 60 61 62 63 94 105 383
    "long integer constant" <i64> (422) 385
    "unsigned integer constant" <ui> (423) 384
    "unsigned long integer constant" <ui64> (424) 386
    "unsigned int8 constant" <ui> (425) 387
    "floating point constant" <fd> (426) 95 106 388
    "double constant" <d> (427) 389
    "name" <s> (428) 21 46 54 91 93 100 104 138 186 187 188 189 190 191 192 193 194 195 196 197 198 199 205 206 208 294 295 296 330 331 355 356 358 359 368 369 370 371 372 432 433 443 444 445 446 447 506 507 521 522 527 542 593 599 619 621 622 623 643 644 649 658 669 682 684 685 686 724 726 727 730 731 818 823 828 834 835 836 837
    "keyword" <s> (429) 47 274 285
    "type function" <s> (430) 48 288
    "start of the string" (431) 29 30 39
    STRING_CHARACTER <ch> (432) 25 27 32 40 41
    STRING_CHARACTER_ESC (433) 26 28
    "end of the string" (434) 29 30 39
    "{" (435) 38
    "}" (436) 38
    "end of failed eader macro" (437)
    ";}}" (438) 856
    ";}]" (439) 858 865
    ";]]" (440) 860 862
    ",]]" (441) 863
    ",}]" (442) 866
    UNARY_MINUS (443)
    UNARY_PLUS (444)
    PRE_INC (445)
    PRE_DEC (446)
    POST_INC (447)
    POST_DEC (448)
    DEREF (449)


Nonterminals, with rules where they appear

    $accept (222)
        on left: 0
    program (223)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (224)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (225)
        on left: 17 18 19
        on right: 24
    module_name <s> (226)
        on left: 20 21
        on right: 24
    optional_not_required <b> (227)
        on left: 22 23
        on right: 24
    module_declaration (228)
        on left: 24
        on right: 2
    character_sequence <s> (229)
        on left: 25 26 27 28
        on right: 27 28 29 37
    string_constant <s> (230)
        on left: 29 30
        on right: 92 103
    format_string <s> (231)
        on left: 31 32
        on right: 32 35
    optional_format_string <s> (232)
        on left: 33 35
        on right: 38
    $@1 (233)
        on left: 34
        on right: 35
    string_builder_body <pExpression> (234)
        on left: 36 37 38
        on right: 37 38 39
    string_builder <pExpression> (235)
        on left: 39
        on right: 464
    reader_character_sequence (236)
        on left: 40 41
        on right: 41 43
    expr_reader <pExpression> (237)
        on left: 43
        on right: 16 463
    $@2 (238)
        on left: 42
        on right: 43
    options_declaration (239)
        on left: 44
        on right: 9
    require_declaration (240)
        on left: 45
        on right: 8
    keyword_or_name <s> (241)
        on left: 46 47 48
        on right: 49 51 52
    require_module_name <s> (242)
        on left: 49 50 51 52
        on right: 50 51 52 53 54
    require_module (243)
        on left: 53 54
        on right: 45
    is_public_module <b> (244)
        on left: 55 56
        on right: 53 54
    expect_declaration (245)
        on left: 57
        on right: 7
    expect_list (246)
        on left: 58 59
        on right: 57 59
    expect_error (247)
        on left: 60 61
        on right: 58 59
    expression_label <pExpression> (248)
        on left: 62
        on right: 268
    expression_goto <pExpression> (249)
        on left: 63 64
        on right: 269
    elif_or_static_elif <b> (250)
        on left: 65 66
        on right: 69
    expression_else <pExpression> (251)
        on left: 67 68 69
        on right: 69 82
    semicolon (252)
        on left: 70 71
        on right: 15 16 84 115 250 254 255 262 263 268 269 270 314 319 332 334 336 338 576 578 580 583 589 590 624 625 627 642 643 644 650 651 654 727 729 730 731 741
    if_or_static_if <b> (253)
        on left: 72 73
        on right: 82
    expression_else_one_liner <pExpression> (254)
        on left: 74 76
        on right: 84
    $@3 (255)
        on left: 75
        on right: 76
    expression_if_one_liner <pExpression> (256)
        on left: 77 78 79 80 81
        on right: 76 84
    expression_if_then_else <pExpression> (257)
        on left: 82 84
        on right: 266
    $@4 (258)
        on left: 83
        on right: 84
    expression_for_loop <pExpression> (259)
        on left: 86
        on right: 261
    $@5 (260)
        on left: 85
        on right: 86
    expression_unsafe <pExpression> (261)
        on left: 87
        on right: 258
    expression_while_loop <pExpression> (262)
        on left: 88
        on right: 257
    expression_with <pExpression> (263)
        on left: 89
        on right: 259
    expression_with_alias <pExpression> (264)
        on left: 91
        on right: 260
    $@6 (265)
        on left: 90
        on right: 91
    annotation_argument_value <aa> (266)
        on left: 92 93 94 95 96 97
        on right: 98 99
    annotation_argument_value_list <aaList> (267)
        on left: 98 99
        on right: 99 110
    annotation_argument_name <s> (268)
        on left: 100 101 102
        on right: 103 104 105 106 107 108 109 110
    annotation_argument <aa> (269)
        on left: 103 104 105 106 107 108 109 110
        on right: 111 112 113 114
    annotation_argument_list <aaList> (270)
        on left: 111 112
        on right: 44 112 121 562
    metadata_argument_list <aaList> (271)
        on left: 113 114 115
        on right: 114 115 563
    annotation_declaration_name <s> (272)
        on left: 116 117 118 119
        on right: 120 121
    annotation_declaration_basic <fa> (273)
        on left: 120 121
        on right: 122
    annotation_declaration <fa> (274)
        on left: 122 123 124 125 126 127 128
        on right: 123 124 125 126 127 128 129 130
    annotation_list <faList> (275)
        on left: 129 130
        on right: 130 132 583
    optional_annotation_list <faList> (276)
        on left: 131 132
        on right: 234 379 380 382 580 582 661 664 681
    optional_function_argument_list <pVarDeclList> (277)
        on left: 133 134 135
        on right: 238 379 380 382 442 790 797 804
    optional_function_type <pTypeDecl> (278)
        on left: 136 137
        on right: 238 379 380 382 442 790 797 804
    function_name <s> (279)
        on left: 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
        on right: 238
    global_function_declaration (280)
        on left: 234
        on right: 6
    optional_public_or_private_function <b> (281)
        on left: 235 236 237
        on right: 240
    function_declaration_header <pFuncDecl> (282)
        on left: 238
        on right: 240 580 582
    function_declaration <pFuncDecl> (283)
        on left: 240
        on right: 234
    $@7 (284)
        on left: 239
        on right: 240
    open_block (285)
        on left: 241 242
        on right: 245 246 638 652 661 664 678 818 823 828
    close_block (286)
        on left: 243 244
        on right: 245 246 638 652 661 664 678 818 823 828
    expression_block <pExpression> (287)
        on left: 245 246
        on right: 68 69 82 86 87 88 89 240 274 322 362 378 382 582
    expr_call_pipe <pExpression> (288)
        on left: 247 248 249
        on right: 293 412
    expression_any <pExpression> (289)
        on left: 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270
        on right: 272
    expressions <pExpression> (290)
        on left: 271 272 273
        on right: 245 246 272 273
    expr_keyword <pExpression> (291)
        on left: 274
        on right: 252
    optional_expr_list <pExpression> (292)
        on left: 275 276
        on right: 278 756 758 898 913
    optional_expr_list_in_braces <pExpression> (293)
        on left: 277 278
        on right: 288
    optional_expr_map_tuple_list <pExpression> (294)
        on left: 279 280
        on right: 922 924 925 926
    type_declaration_no_options_list <pTypeDeclList> (295)
        on left: 281 282
        on right: 282 285 288 758
    expression_keyword <pExpression> (296)
        on left: 285 288
        on right: 248 544
    $@8 (297)
        on left: 283
        on right: 285
    $@9 (298)
        on left: 284
        on right: 285
    $@10 (299)
        on left: 286
        on right: 288
    $@11 (300)
        on left: 287
        on right: 288
    expr_pipe <pExpression> (301)
        on left: 289 290 291 292 293
        on right: 251 315 316 320 321 333 335 337 339 626 628
    name_in_namespace <s> (302)
        on left: 294 295 296
        on right: 43 116 354 355 356 357 358 359 430 431 434 453 454 455 456 457 461 542 666 722 756 758
    expression_delete <pExpression> (303)
        on left: 297 298
        on right: 255
    new_type_declaration <pTypeDecl> (304)
        on left: 301 302
        on right: 303 304 305 306 307
    $@12 (305)
        on left: 299
        on right: 301
    $@13 (306)
        on left: 300
        on right: 301
    expr_new <pExpression> (307)
        on left: 303 304 305 306 307 308
        on right: 535
    expression_break <pExpression> (308)
        on left: 309
        on right: 80 262
    expression_continue <pExpression> (309)
        on left: 310
        on right: 81 263
    expression_return_no_pipe <pExpression> (310)
        on left: 311 312 313
        on right: 78 314
    expression_return <pExpression> (311)
        on left: 314 315 316
        on right: 264
    expression_yield_no_pipe <pExpression> (312)
        on left: 317 318
        on right: 79 319
    expression_yield <pExpression> (313)
        on left: 319 320 321
        on right: 265
    expression_try_catch <pExpression> (314)
        on left: 322
        on right: 267
    kwd_let_var_or_nothing <b> (315)
        on left: 323 324 325
        on right: 584 585
    kwd_let <b> (316)
        on left: 326 327
        on right: 340 341 638 640
    optional_in_scope <b> (317)
        on left: 328 329
        on right: 340 341
    tuple_expansion <pNameList> (318)
        on left: 330 331
        on right: 331 332 333 334 335 336 337 338 339
    tuple_expansion_variable_declaration <pVarDecl> (319)
        on left: 332 333 334 335 336 337 338 339
        on right: 341
    expression_let <pExpression> (320)
        on left: 340 341
        on right: 256
    expr_cast <pExpression> (321)
        on left: 344 347 350
        on right: 534
    $@14 (322)
        on left: 342
        on right: 344
    $@15 (323)
        on left: 343
        on right: 344
    $@16 (324)
        on left: 345
        on right: 347
    $@17 (325)
        on left: 346
        on right: 347
    $@18 (326)
        on left: 348
        on right: 350
    $@19 (327)
        on left: 349
        on right: 350
    expr_type_decl <pExpression> (328)
        on left: 353
        on right: 533
    $@20 (329)
        on left: 351
        on right: 353
    $@21 (330)
        on left: 352
        on right: 353
    expr_type_info <pExpression> (331)
        on left: 354 355 356 357 358 359
        on right: 532
    expr_list <pExpression> (332)
        on left: 360 361
        on right: 86 276 305 312 313 361 431 433 446 449 457 459 500 552 892 910 914 917 931 932 933 934 935 936
    block_or_simple_block <pExpression> (333)
        on left: 362 363 364
        on right: 379 380
    block_or_lambda <i> (334)
        on left: 365 366 367
        on right: 379 380 382
    capture_entry <pCapt> (335)
        on left: 368 369 370 371 372
        on right: 373 374
    capture_list <pCaptList> (336)
        on left: 373 374
        on right: 374 376 377
    optional_capture_list <pCaptList> (337)
        on left: 375 376 377
        on right: 249 379 380 382 513 514
    expr_block <pExpression> (338)
        on left: 378 379
        on right: 289 290 291 292 409 410 411 854
    expr_full_block <pExpression> (339)
        on left: 380
        on right: 538
    expr_full_block_assumed_piped <pExpression> (340)
        on left: 382
        on right: 247 248 249
    $@22 (341)
        on left: 381
        on right: 382
    expr_numeric_const <pExpression> (342)
        on left: 383 384 385 386 387 388 389
        on right: 462
    expr_assign <pExpression> (343)
        on left: 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408
        on right: 254 289
    expr_assign_pipe_right <pExpression> (344)
        on left: 409 410 411 412
        on right: 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429
    expr_assign_pipe <pExpression> (345)
        on left: 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429
        on right: 253
    expr_named_call <pExpression> (346)
        on left: 430 431
        on right: 537
    expr_method_call <pExpression> (347)
        on left: 432 433
        on right: 536
    func_addr_name <pExpression> (348)
        on left: 434 435
        on right: 436 439 442
    func_addr_expr <pExpression> (349)
        on left: 436 439 442
        on right: 508
    $@23 (350)
        on left: 437
        on right: 439
    $@24 (351)
        on left: 438
        on right: 439
    $@25 (352)
        on left: 440
        on right: 442
    $@26 (353)
        on left: 441
        on right: 442
    expr_field <pExpression> (354)
        on left: 443 444 445 446 447 448 449 452
        on right: 468
    $@27 (355)
        on left: 450
        on right: 452
    $@28 (356)
        on left: 451
        on right: 452
    expr_call <pExpression> (357)
        on left: 453 454 455 456 457 458 459
        on right: 509
    expr <pExpression> (358)
        on left: 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 519 520 521 522 525 526 527 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544
        on right
    $@29 (359)
        on left: 517
        on right: 519
    $@30 (360)
        on left: 518
        on right: 519
    $@31 (361)
        on left: 523
        on right: 525
    $@32 (362)
        on left: 524
        on right: 525
    $@33 (363)
        on left: 528
        on right: 530
    $@34 (364)
        on left: 529
        on right: 530
    expr_mtag <pExpression> (365)
        on left: 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560
        on right: 469
    optional_field_annotation <aaList> (366)
        on left: 561 562 563
        on right: 574 584 585 632 640
    optional_override <i> (367)
        on left: 564 565 566
        on right: 574 582
    optional_constant <b> (368)
        on left: 567 568
        on right: 580 582
    optional_public_or_private_member_variable <b> (369)
        on left: 569 570 571
        on right: 574 580 582
    optional_static_member_variable <b> (370)
        on left: 572 573
        on right: 574 582
    structure_variable_declaration <pVarDecl> (371)
        on left: 574
        on right: 578
    struct_variable_declaration_list <pVarDeclList> (372)
        on left: 575 576 578 580 582 583
        on right: 576 578 580 582 583 678
    $@35 (373)
        on left: 577
        on right: 578
    $@36 (374)
        on left: 579
        on right: 580
    $@37 (375)
        on left: 581
        on right: 582
    function_argument_declaration_no_type <pVarDecl> (376)
        on left: 584
        on right: 587 589
    function_argument_declaration_type <pVarDecl> (377)
        on left: 585 586
        on right: 588 590 591
    function_argument_list <pVarDeclList> (378)
        on left: 587 588 589 590 591
        on right: 135 589 590 591
    tuple_type <pVarDecl> (379)
        on left: 592 593
        on right: 594 595 598
    tuple_type_list <pVarDeclList> (380)
        on left: 594 595
        on right: 595 807 895 906
    tuple_alias_type_list <pVarDeclList> (381)
        on left: 596 597 598
        on right: 597 598 818
    variant_type <pVarDecl> (382)
        on left: 599
        on right: 600 601 604
    variant_type_list <pVarDeclList> (383)
        on left: 600 601
        on right: 601 810 883 909
    variant_alias_type_list <pVarDeclList> (384)
        on left: 602 603 604
        on right: 603 604 823
    copy_or_move <b> (385)
        on left: 605 606
        on right: 609 611 834 836 838 840
    variable_declaration_no_type <pVarDecl> (386)
        on left: 607 608 609
        on right: 584 613
    variable_declaration_type <pVarDecl> (387)
        on left: 610 611
        on right: 585 612
    variable_declaration <pVarDecl> (388)
        on left: 612 613
        on right: 574
    copy_or_move_or_clone <i> (389)
        on left: 614 615 616
        on right: 332 333 334 335 336 337 338 339 625 626 627 628
    optional_ref <b> (390)
        on left: 617 618
        on right: 336 337 338 339 627 628
    let_variable_name_with_pos_list <pNameWithPosList> (391)
        on left: 619 620 621 622 623
        on right: 622 623 624 625 626 627 628
    let_variable_declaration <pVarDecl> (392)
        on left: 624 625 626 627 628
        on right: 340 632 640
    global_variable_declaration_list <pVarDeclList> (393)
        on left: 629 630 632
        on right: 630 632 638
    $@38 (394)
        on left: 631
        on right: 632
    optional_shared <b> (395)
        on left: 633 634
        on right: 24 638 640
    optional_public_or_private_variable <b> (396)
        on left: 635 636 637
        on right: 638 640
    global_let (397)
        on left: 638 640
        on right: 5
    $@39 (398)
        on left: 639
        on right: 640
    enum_list <pEnum> (399)
        on left: 641 642 643 644
        on right: 642 643 644 661 664
    optional_public_or_private_alias <b> (400)
        on left: 645 646 647
        on right: 649 818 823 828
    single_alias (401)
        on left: 649
        on right: 650 651 654
    $@40 (402)
        on left: 648
        on right: 649
    alias_list (403)
        on left: 650 651
        on right: 651 652
    alias_declaration (404)
        on left: 652 654
        on right: 10
    $@41 (405)
        on left: 653
        on right: 654
    optional_public_or_private_enum <b> (406)
        on left: 655 656 657
        on right: 661 664
    enum_name <pEnum> (407)
        on left: 658
        on right: 661 664
    enum_declaration (408)
        on left: 661 664
        on right: 4
    $@42 (409)
        on left: 659
        on right: 661
    $@43 (410)
        on left: 660
        on right: 661
    $@44 (411)
        on left: 662
        on right: 664
    $@45 (412)
        on left: 663
        on right: 664
    optional_structure_parent <s> (413)
        on left: 665 666
        on right: 669
    optional_sealed <b> (414)
        on left: 667 668
        on right: 669
    structure_name <pStructure> (415)
        on left: 669
        on right: 681
    class_or_struct <i> (416)
        on left: 670 671 672 673
        on right: 681
    optional_public_or_private_structure <b> (417)
        on left: 674 675 676
        on right: 681
    optional_struct_variable_declaration_list <pVarDeclList> (418)
        on left: 677 678
        on right: 681
    structure_declaration (419)
        on left: 681
        on right: 3
    $@46 (420)
        on left: 679
        on right: 681
    $@47 (421)
        on left: 680
        on right: 681
    variable_name_with_pos_list <pNameWithPosList> (422)
        on left: 682 683 684 685 686
        on right: 86 607 608 609 610 611 685 686 931 932 933 934 935 936
    basic_type_declaration <type> (423)
        on left: 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713
        on right: 448 449 458 459 520 526 531 541 746
    enum_basic_type_declaration <type> (424)
        on left: 714 715 716 717 718 719 720 721
        on right: 664
    structure_type_declaration <pTypeDecl> (425)
        on left: 722
        on right: 302 749
    auto_type_declaration <pTypeDecl> (426)
        on left: 723 724 725
        on right: 747
    bitfield_bits <pNameList> (427)
        on left: 726 727
        on right: 727 739
    bitfield_alias_bits <pNameExprList> (428)
        on left: 728 729 730 731
        on right: 729 730 731 828
    bitfield_basic_type_declaration <type> (429)
        on left: 732 733 734 735 736
        on right: 739 828
    bitfield_type_declaration <pTypeDecl> (430)
        on left: 739
        on right: 748
    $@48 (431)
        on left: 737
        on right: 739
    $@49 (432)
        on left: 738
        on right: 739
    c_or_s (433)
        on left: 740 741
        on right: 282 356 595 597 598 601 603 604 743 926
    table_type_pair <aTypePair> (434)
        on left: 742 743
        on right: 780
    dim_list <pTypeDecl> (435)
        on left: 744 745
        on right: 745 750
    type_declaration_no_options <pTypeDecl> (436)
        on left: 746 747 748 749 750 751 754 755 756 758 759 760 761 762 763 764 765 766 767 768 769 770 773 774 777 780 783 784 787 790 791 794 797 798 801 804 807 810
        on right: 249 332 333 334 335 344 347 350 439 513 514 519 624 625 626 750 751 759 760 761 762 763 764 765 766 767 768 769 770 774 811 812 869 870 871 872 873 874 877 880 886 899 900 903 913 917 925 926
    $@50 (437)
        on left: 752
        on right: 754
    $@51 (438)
        on left: 753
        on right: 754
    $@52 (439)
        on left: 757
        on right: 758
    $@53 (440)
        on left: 771
        on right: 773
    $@54 (441)
        on left: 772
        on right: 773
    $@55 (442)
        on left: 775
        on right: 777
    $@56 (443)
        on left: 776
        on right: 777
    $@57 (444)
        on left: 778
        on right: 780
    $@58 (445)
        on left: 779
        on right: 780
    $@59 (446)
        on left: 781
        on right: 783
    $@60 (447)
        on left: 782
        on right: 783
    $@61 (448)
        on left: 785
        on right: 787
    $@62 (449)
        on left: 786
        on right: 787
    $@63 (450)
        on left: 788
        on right: 790
    $@64 (451)
        on left: 789
        on right: 790
    $@65 (452)
        on left: 792
        on right: 794
    $@66 (453)
        on left: 793
        on right: 794
    $@67 (454)
        on left: 795
        on right: 797
    $@68 (455)
        on left: 796
        on right: 797
    $@69 (456)
        on left: 799
        on right: 801
    $@70 (457)
        on left: 800
        on right: 801
    $@71 (458)
        on left: 802
        on right: 804
    $@72 (459)
        on left: 803
        on right: 804
    $@73 (460)
        on left: 805
        on right: 807
    $@74 (461)
        on left: 806
        on right: 807
    $@75 (462)
        on left: 808
        on right: 810
    $@76 (463)
        on left: 809
        on right: 810
    type_declaration <pTypeDecl> (464)
        on left: 811 812 813
        on right: 137 281 282 301 353 525 530 592 593 599 610 611 649 742 743 754 773 777 783 787 794 801 812 813
    tuple_alias_declaration (465)
        on left: 818
        on right: 12
    $@77 (466)
        on left: 814
        on right: 818
    $@78 (467)
        on left: 815
        on right: 818
    $@79 (468)
        on left: 816
        on right: 818
    $@80 (469)
        on left: 817
        on right: 818
    variant_alias_declaration (470)
        on left: 823
        on right: 11
    $@81 (471)
        on left: 819
        on right: 823
    $@82 (472)
        on left: 820
        on right: 823
    $@83 (473)
        on left: 821
        on right: 823
    $@84 (474)
        on left: 822
        on right: 823
    bitfield_alias_declaration (475)
        on left: 828
        on right: 13
    $@85 (476)
        on left: 824
        on right: 828
    $@86 (477)
        on left: 825
        on right: 828
    $@87 (478)
        on left: 826
        on right: 828
    $@88 (479)
        on left: 827
        on right: 828
    make_decl <pExpression> (480)
        on left: 829 830 831 832 833
        on right: 308 465
    make_struct_fields <pMakeStruct> (481)
        on left: 834 835 836 837 838 839 840 841
        on right: 430 431 447 836 837 840 841 843 844 845 846 847 848 849
    make_variant_dim <pExpression> (482)
        on left: 842 843
        on right: 883 909
    make_struct_single <pExpression> (483)
        on left: 844
        on right: 306 307 455 456 501
    make_struct_dim <pExpression> (484)
        on left: 845 846
        on right: 846 869 872 873 874
    make_struct_dim_list <pExpression> (485)
        on left: 847 848
        on right: 848 850
    make_struct_dim_decl <pExpression> (486)
        on left: 849 850
        on right: 851
    optional_make_struct_dim_decl <pExpression> (487)
        on left: 851 852
        on right: 877 880 895 903 906
    optional_block <pExpression> (488)
        on left: 853 854
        on right: 869 870 871 872 873 874
    optional_trailing_semicolon_cur_cur (489)
        on left: 855 856
        on right: 923
    optional_trailing_semicolon_cur_sqr (490)
        on left: 857 858
        on right: 900
    optional_trailing_semicolon_sqr_sqr (491)
        on left: 859 860
        on right: 899
    optional_trailing_delim_sqr_sqr (492)
        on left: 861 862 863
        on right: 869 870 871 872
    optional_trailing_delim_cur_sqr (493)
        on left: 864 865 866
        on right: 873 874
    use_initializer <b> (494)
        on left: 867 868
        on right: 304 877 880 883 886 895 903 906
    make_struct_decl <pExpression> (495)
        on left: 869 870 871 872 873 874 877 880 883 886
        on right: 829
    $@89 (496)
        on left: 875
        on right: 877
    $@90 (497)
        on left: 876
        on right: 877
    $@91 (498)
        on left: 878
        on right: 880
    $@92 (499)
        on left: 879
        on right: 880
    $@93 (500)
        on left: 881
        on right: 883
    $@94 (501)
        on left: 882
        on right: 883
    $@95 (502)
        on left: 884
        on right: 886
    $@96 (503)
        on left: 885
        on right: 886
    make_tuple <pExpression> (504)
        on left: 887 888 889
        on right: 889 896 897
    make_map_tuple <pExpression> (505)
        on left: 890 891
        on right: 918 919 920 921 935 936
    make_tuple_call <pExpression> (506)
        on left: 892 895
        on right: 833
    $@97 (507)
        on left: 893
        on right: 895
    $@98 (508)
        on left: 894
        on right: 895
    make_dim <pExpression> (509)
        on left: 896 897
        on right: 897 899 900
    make_dim_decl <pExpression> (510)
        on left: 898 899 900 903 906 909 910 913 914 917
        on right: 830
    $@99 (511)
        on left: 901
        on right: 903
    $@100 (512)
        on left: 902
        on right: 903
    $@101 (513)
        on left: 904
        on right: 906
    $@102 (514)
        on left: 905
        on right: 906
    $@103 (515)
        on left: 907
        on right: 909
    $@104 (516)
        on left: 908
        on right: 909
    $@105 (517)
        on left: 911
        on right: 913
    $@106 (518)
        on left: 912
        on right: 913
    $@107 (519)
        on left: 915
        on right: 917
    $@108 (520)
        on left: 916
        on right: 917
    make_table <pExpression> (521)
        on left: 918 919
        on right: 919 923
    expr_map_tuple_list <pExpression> (522)
        on left: 920 921
        on right: 280 921
    make_table_decl <pExpression> (523)
        on left: 922 923 924 925 926
        on right: 831
    array_comprehension_where <pExpression> (524)
        on left: 927 928
        on right: 931 932 933 934 935 936
    optional_comma <b> (525)
        on left: 929 930
        on right: 276 278 280 500 844 850 892 910 914 917
    array_comprehension <pExpression> (526)
        on left: 931 932 933 934 935 936
        on right: 832


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . semicolon

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '%'                  shift, and go to state 15
    '['                  shift, and go to state 16

    $default  reduce using rule 131 (optional_annotation_list)

    top_level_reader_macro       go to state 17
    module_declaration           go to state 18
    expr_reader                  go to state 19
    options_declaration          go to state 20
    require_declaration          go to state 21
    expect_declaration           go to state 22
    semicolon                    go to state 23
    optional_annotation_list     go to state 24
    global_function_declaration  go to state 25
    kwd_let                      go to state 26
    global_let                   go to state 27
    alias_declaration            go to state 28
    enum_declaration             go to state 29
    structure_declaration        go to state 30
    tuple_alias_declaration      go to state 31
    variant_alias_declaration    go to state 32
    bitfield_alias_declaration   go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  326 kwd_let: "let" .

    $default  reduce using rule 326 (kwd_let)


State 4

   44 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   57 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   45 require_declaration: "require" . require_module

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45
    '%'              shift, and go to state 46

    keyword_or_name      go to state 47
    require_module_name  go to state 48
    require_module       go to state 49


State 7

  652 alias_declaration: "typedef" . open_block alias_list close_block
  654                  | "typedef" . $@41 single_alias semicolon

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 653 ($@41)

    open_block  go to state 52
    $@41        go to state 53


State 8

  327 kwd_let: "var" .

    $default  reduce using rule 327 (kwd_let)


State 9

   24 module_declaration: "module" . module_name optional_shared optional_public_or_private_module optional_not_required

    "name"  shift, and go to state 54
    '$'     shift, and go to state 55

    module_name  go to state 56


State 10

  828 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@85 "name" $@86 bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits $@88 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 645 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 59


State 11

  818 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 645 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 60


State 12

  823 variant_alias_declaration: "variant" . optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 645 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 61


State 13

   70 semicolon: "end of line" .

    $default  reduce using rule 70 (semicolon)


State 14

   71 semicolon: "end of expression" .

    $default  reduce using rule 71 (semicolon)


State 15

   43 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 64


State 16

  132 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 73
    annotation_list               go to state 74
    name_in_namespace             go to state 75


State 17

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 18

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 19

   16 top_level_reader_macro: expr_reader . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 76


State 20

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 21

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 22

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 23

   15 program: program semicolon .

    $default  reduce using rule 15 (program)


State 24

  234 global_function_declaration: optional_annotation_list . "def" function_declaration
  661 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block
  664                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block
  681 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 77
    "class"     shift, and go to state 78
    "def"       shift, and go to state 79
    "enum"      shift, and go to state 80
    "template"  shift, and go to state 81

    class_or_struct  go to state 82


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  638 global_let: kwd_let . optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block
  640           | kwd_let . optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 83

    $default  reduce using rule 633 (optional_shared)

    optional_shared  go to state 84


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

  101 annotation_argument_name: "type" .

    $default  reduce using rule 101 (annotation_argument_name)


State 35

  102 annotation_argument_name: "in" .

    $default  reduce using rule 102 (annotation_argument_name)


State 36

  100 annotation_argument_name: "name" .

    $default  reduce using rule 100 (annotation_argument_name)


State 37

  103 annotation_argument: annotation_argument_name . '=' string_constant
  104                    | annotation_argument_name . '=' "name"
  105                    | annotation_argument_name . '=' "integer constant"
  106                    | annotation_argument_name . '=' "floating point constant"
  107                    | annotation_argument_name . '=' "true"
  108                    | annotation_argument_name . '=' "false"
  109                    | annotation_argument_name .
  110                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 85

    $default  reduce using rule 109 (annotation_argument)


State 38

  111 annotation_argument_list: annotation_argument .

    $default  reduce using rule 111 (annotation_argument_list)


State 39

   44 options_declaration: "options" annotation_argument_list .
  112 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 86

    $default  reduce using rule 44 (options_declaration)


State 40

   60 expect_error: "integer constant" .
   61             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 87

    $default  reduce using rule 60 (expect_error)


State 41

   57 expect_declaration: "expect" expect_list .
   59 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 88

    $default  reduce using rule 57 (expect_declaration)


State 42

   58 expect_list: expect_error .

    $default  reduce using rule 58 (expect_list)


State 43

   46 keyword_or_name: "name" .

    $default  reduce using rule 46 (keyword_or_name)


State 44

   47 keyword_or_name: "keyword" .

    $default  reduce using rule 47 (keyword_or_name)


State 45

   48 keyword_or_name: "type function" .

    $default  reduce using rule 48 (keyword_or_name)


State 46

   50 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45
    '%'              shift, and go to state 46

    keyword_or_name      go to state 47
    require_module_name  go to state 89


State 47

   49 require_module_name: keyword_or_name .

    $default  reduce using rule 49 (require_module_name)


State 48

   51 require_module_name: require_module_name . '.' keyword_or_name
   52                    | require_module_name . '/' keyword_or_name
   53 require_module: require_module_name . is_public_module
   54               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 90
    "public"  shift, and go to state 91
    '/'       shift, and go to state 92
    '.'       shift, and go to state 93

    $default  reduce using rule 55 (is_public_module)

    is_public_module  go to state 94


State 49

   45 require_declaration: "require" require_module .

    $default  reduce using rule 45 (require_declaration)


State 50

  242 open_block: "new scope" .

    $default  reduce using rule 242 (open_block)


State 51

  241 open_block: "begin of code block" .

    $default  reduce using rule 241 (open_block)


State 52

  652 alias_declaration: "typedef" open_block . alias_list close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 645 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 96
    alias_list                        go to state 97


State 53

  654 alias_declaration: "typedef" $@41 . single_alias semicolon

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 645 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 98


State 54

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 55

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 56

   24 module_declaration: "module" module_name . optional_shared optional_public_or_private_module optional_not_required

    "shared"  shift, and go to state 83

    $default  reduce using rule 633 (optional_shared)

    optional_shared  go to state 99


State 57

  647 optional_public_or_private_alias: "public" .

    $default  reduce using rule 647 (optional_public_or_private_alias)


State 58

  646 optional_public_or_private_alias: "private" .

    $default  reduce using rule 646 (optional_public_or_private_alias)


State 59

  828 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@85 "name" $@86 bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 824 ($@85)

    $@85  go to state 100


State 60

  818 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 814 ($@77)

    $@77  go to state 101


State 61

  823 variant_alias_declaration: "variant" optional_public_or_private_alias . $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 819 ($@81)

    $@81  go to state 102


State 62

  296 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 103


State 63

  294 name_in_namespace: "name" .
  295                  | "name" . "::" "name"

    "::"  shift, and go to state 104

    "::"      [reduce using rule 294 (name_in_namespace)]
    $default  reduce using rule 294 (name_in_namespace)


State 64

   43 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 42 ($@2)

    $@2  go to state 105


State 65

  117 annotation_declaration_name: "require" .

    $default  reduce using rule 117 (annotation_declaration_name)


State 66

  118 annotation_declaration_name: "private" .

    $default  reduce using rule 118 (annotation_declaration_name)


State 67

  119 annotation_declaration_name: "template" .

    $default  reduce using rule 119 (annotation_declaration_name)


State 68

  128 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 106
    name_in_namespace             go to state 75


State 69

  123 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 107
    name_in_namespace             go to state 75


State 70

  127 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 108
    name_in_namespace             go to state 75


State 71

  120 annotation_declaration_basic: annotation_declaration_name .
  121                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 109

    $default  reduce using rule 120 (annotation_declaration_basic)


State 72

  122 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 122 (annotation_declaration)


State 73

  124 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  125                       | annotation_declaration . "||" annotation_declaration
  126                       | annotation_declaration . "^^" annotation_declaration
  129 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112

    $default  reduce using rule 129 (annotation_list)


State 74

  130 annotation_list: annotation_list . ',' annotation_declaration
  132 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 113
    ']'  shift, and go to state 114


State 75

  116 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 116 (annotation_declaration_name)


State 76

   16 top_level_reader_macro: expr_reader semicolon .

    $default  reduce using rule 16 (top_level_reader_macro)


State 77

  671 class_or_struct: "struct" .

    $default  reduce using rule 671 (class_or_struct)


State 78

  670 class_or_struct: "class" .

    $default  reduce using rule 670 (class_or_struct)


State 79

  234 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 235 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 117
    function_declaration                 go to state 118


State 80

  661 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block
  664                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 655 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 121


State 81

  672 class_or_struct: "template" . "class"
  673                | "template" . "struct"

    "struct"  shift, and go to state 122
    "class"   shift, and go to state 123


State 82

  681 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

    "public"   shift, and go to state 124
    "private"  shift, and go to state 125

    $default  reduce using rule 674 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 126


State 83

  634 optional_shared: "shared" .

    $default  reduce using rule 634 (optional_shared)


State 84

  638 global_let: kwd_let optional_shared . optional_public_or_private_variable open_block global_variable_declaration_list close_block
  640           | kwd_let optional_shared . optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 127
    "private"  shift, and go to state 128

    $default  reduce using rule 635 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 129


State 85

  103 annotation_argument: annotation_argument_name '=' . string_constant
  104                    | annotation_argument_name '=' . "name"
  105                    | annotation_argument_name '=' . "integer constant"
  106                    | annotation_argument_name '=' . "floating point constant"
  107                    | annotation_argument_name '=' . "true"
  108                    | annotation_argument_name '=' . "false"
  110                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 130
    "false"                    shift, and go to state 131
    "integer constant"         shift, and go to state 132
    "floating point constant"  shift, and go to state 133
    "name"                     shift, and go to state 134
    "start of the string"      shift, and go to state 135
    '('                        shift, and go to state 136

    string_constant  go to state 137


State 86

  112 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 138


State 87

   61 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 139


State 88

   59 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 140


State 89

   50 require_module_name: '%' require_module_name .
   51                    | require_module_name . '.' keyword_or_name
   52                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 93

    $default  reduce using rule 50 (require_module_name)


State 90

   54 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 141


State 91

   56 is_public_module: "public" .

    $default  reduce using rule 56 (is_public_module)


State 92

   52 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45

    keyword_or_name  go to state 142


State 93

   51 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45

    keyword_or_name  go to state 143


State 94

   53 require_module: require_module_name is_public_module .

    $default  reduce using rule 53 (require_module)


State 95

  649 single_alias: optional_public_or_private_alias . "name" $@40 '=' type_declaration

    "name"  shift, and go to state 144


State 96

  650 alias_list: single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 145


State 97

  651 alias_list: alias_list . single_alias semicolon
  652 alias_declaration: "typedef" open_block alias_list . close_block

    "public"             shift, and go to state 57
    "private"            shift, and go to state 58
    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    $default  reduce using rule 645 (optional_public_or_private_alias)

    close_block                       go to state 148
    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 149


State 98

  654 alias_declaration: "typedef" $@41 single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 150


State 99

   24 module_declaration: "module" module_name optional_shared . optional_public_or_private_module optional_not_required

    "public"   shift, and go to state 151
    "private"  shift, and go to state 152

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 153


State 100

  828 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 . "name" $@86 bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits $@88 close_block

    "name"  shift, and go to state 154


State 101

  818 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 . "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    "name"  shift, and go to state 155


State 102

  823 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 . "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    "name"  shift, and go to state 156


State 103

  296 name_in_namespace: "::" "name" .

    $default  reduce using rule 296 (name_in_namespace)


State 104

  295 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 157


State 105

   43 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 158

    reader_character_sequence  go to state 159


State 106

  124 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  125                       | annotation_declaration . "||" annotation_declaration
  126                       | annotation_declaration . "^^" annotation_declaration
  128                       | "|>" annotation_declaration .

    $default  reduce using rule 128 (annotation_declaration)


State 107

  123 annotation_declaration: '!' annotation_declaration .
  124                       | annotation_declaration . "&&" annotation_declaration
  125                       | annotation_declaration . "||" annotation_declaration
  126                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 123 (annotation_declaration)


State 108

  124 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  125                       | annotation_declaration . "||" annotation_declaration
  126                       | annotation_declaration . "^^" annotation_declaration
  127                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112
    ')'   shift, and go to state 160


State 109

  121 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 161


State 110

  124 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 162
    name_in_namespace             go to state 75


State 111

  125 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 163
    name_in_namespace             go to state 75


State 112

  126 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 164
    name_in_namespace             go to state 75


State 113

  130 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 165
    name_in_namespace             go to state 75


State 114

  132 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 132 (optional_annotation_list)


State 115

  237 optional_public_or_private_function: "public" .

    $default  reduce using rule 237 (optional_public_or_private_function)


State 116

  236 optional_public_or_private_function: "private" .

    $default  reduce using rule 236 (optional_public_or_private_function)


State 117

  240 function_declaration: optional_public_or_private_function . $@7 function_declaration_header expression_block

    $default  reduce using rule 239 ($@7)

    $@7  go to state 166


State 118

  234 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 234 (global_function_declaration)


State 119

  657 optional_public_or_private_enum: "public" .

    $default  reduce using rule 657 (optional_public_or_private_enum)


State 120

  656 optional_public_or_private_enum: "private" .

    $default  reduce using rule 656 (optional_public_or_private_enum)


State 121

  661 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name open_block $@42 enum_list $@43 close_block
  664                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "name"  shift, and go to state 167

    enum_name  go to state 168


State 122

  673 class_or_struct: "template" "struct" .

    $default  reduce using rule 673 (class_or_struct)


State 123

  672 class_or_struct: "template" "class" .

    $default  reduce using rule 672 (class_or_struct)


State 124

  676 optional_public_or_private_structure: "public" .

    $default  reduce using rule 676 (optional_public_or_private_structure)


State 125

  675 optional_public_or_private_structure: "private" .

    $default  reduce using rule 675 (optional_public_or_private_structure)


State 126

  681 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@46 structure_name $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 679 ($@46)

    $@46  go to state 169


State 127

  637 optional_public_or_private_variable: "public" .

    $default  reduce using rule 637 (optional_public_or_private_variable)


State 128

  636 optional_public_or_private_variable: "private" .

    $default  reduce using rule 636 (optional_public_or_private_variable)


State 129

  638 global_let: kwd_let optional_shared optional_public_or_private_variable . open_block global_variable_declaration_list close_block
  640           | kwd_let optional_shared optional_public_or_private_variable . $@39 optional_field_annotation let_variable_declaration

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 639 ($@39)

    open_block  go to state 170
    $@39        go to state 171


State 130

  107 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 107 (annotation_argument)


State 131

  108 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 108 (annotation_argument)


State 132

  105 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 105 (annotation_argument)


State 133

  106 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 106 (annotation_argument)


State 134

  104 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 104 (annotation_argument)


State 135

   29 string_constant: "start of the string" . character_sequence "end of the string"
   30                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 172
    STRING_CHARACTER_ESC  shift, and go to state 173
    "end of the string"   shift, and go to state 174

    character_sequence  go to state 175


State 136

  110 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 176
    "false"                    shift, and go to state 177
    "integer constant"         shift, and go to state 178
    "floating point constant"  shift, and go to state 179
    "name"                     shift, and go to state 180
    "start of the string"      shift, and go to state 135

    string_constant                 go to state 181
    annotation_argument_value       go to state 182
    annotation_argument_value_list  go to state 183


State 137

  103 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 103 (annotation_argument)


State 138

  112 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 112 (annotation_argument_list)


State 139

   61 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 61 (expect_error)


State 140

   59 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 59 (expect_list)


State 141

   54 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 91

    $default  reduce using rule 55 (is_public_module)

    is_public_module  go to state 184


State 142

   52 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 52 (require_module_name)


State 143

   51 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 51 (require_module_name)


State 144

  649 single_alias: optional_public_or_private_alias "name" . $@40 '=' type_declaration

    $default  reduce using rule 648 ($@40)

    $@40  go to state 185


State 145

  650 alias_list: single_alias semicolon .

    $default  reduce using rule 650 (alias_list)


State 146

  244 close_block: "close scope" .

    $default  reduce using rule 244 (close_block)


State 147

  243 close_block: "end of code block" .

    $default  reduce using rule 243 (close_block)


State 148

  652 alias_declaration: "typedef" open_block alias_list close_block .

    $default  reduce using rule 652 (alias_declaration)


State 149

  651 alias_list: alias_list single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 186


State 150

  654 alias_declaration: "typedef" $@41 single_alias semicolon .

    $default  reduce using rule 654 (alias_declaration)


State 151

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 152

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 153

   24 module_declaration: "module" module_name optional_shared optional_public_or_private_module . optional_not_required

    '!'  shift, and go to state 187

    $default  reduce using rule 22 (optional_not_required)

    optional_not_required  go to state 188


State 154

  828 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" . $@86 bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 825 ($@86)

    $@86  go to state 189


State 155

  818 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" . $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 815 ($@78)

    $@78  go to state 190


State 156

  823 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" . $@82 open_block $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 820 ($@82)

    $@82  go to state 191


State 157

  295 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 295 (name_in_namespace)


State 158

   40 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 40 (reader_character_sequence)


State 159

   41 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   43 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 192

    $default  reduce using rule 43 (expr_reader)


State 160

  127 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 127 (annotation_declaration)


State 161

  112 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  121 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 86
    ')'  shift, and go to state 193


State 162

  124 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  124                       | annotation_declaration "&&" annotation_declaration .
  125                       | annotation_declaration . "||" annotation_declaration
  126                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 124 (annotation_declaration)


State 163

  124 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  125                       | annotation_declaration . "||" annotation_declaration
  125                       | annotation_declaration "||" annotation_declaration .
  126                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 110
    "^^"  shift, and go to state 112

    $default  reduce using rule 125 (annotation_declaration)


State 164

  124 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  125                       | annotation_declaration . "||" annotation_declaration
  126                       | annotation_declaration . "^^" annotation_declaration
  126                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 110

    $default  reduce using rule 126 (annotation_declaration)


State 165

  124 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  125                       | annotation_declaration . "||" annotation_declaration
  126                       | annotation_declaration . "^^" annotation_declaration
  130 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112

    $default  reduce using rule 130 (annotation_list)


State 166

  240 function_declaration: optional_public_or_private_function $@7 . function_declaration_header expression_block

    "operator"  shift, and go to state 194
    "bool"      shift, and go to state 195
    "string"    shift, and go to state 196
    "int"       shift, and go to state 197
    "int2"      shift, and go to state 198
    "int3"      shift, and go to state 199
    "int4"      shift, and go to state 200
    "uint"      shift, and go to state 201
    "uint2"     shift, and go to state 202
    "uint3"     shift, and go to state 203
    "uint4"     shift, and go to state 204
    "float"     shift, and go to state 205
    "float2"    shift, and go to state 206
    "float3"    shift, and go to state 207
    "float4"    shift, and go to state 208
    "range"     shift, and go to state 209
    "urange"    shift, and go to state 210
    "range64"   shift, and go to state 211
    "urange64"  shift, and go to state 212
    "int64"     shift, and go to state 213
    "uint64"    shift, and go to state 214
    "double"    shift, and go to state 215
    "int8"      shift, and go to state 216
    "uint8"     shift, and go to state 217
    "int16"     shift, and go to state 218
    "uint16"    shift, and go to state 219
    "++"        shift, and go to state 220
    "--"        shift, and go to state 221
    "name"      shift, and go to state 222

    function_name                go to state 223
    function_declaration_header  go to state 224


State 167

  658 enum_name: "name" .

    $default  reduce using rule 658 (enum_name)


State 168

  661 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . open_block $@42 enum_list $@43 close_block
  664                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    ':'                    shift, and go to state 225

    open_block  go to state 226


State 169

  681 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 . structure_name $@47 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 227

    $default  reduce using rule 667 (optional_sealed)

    optional_sealed  go to state 228
    structure_name   go to state 229


State 170

  638 global_let: kwd_let optional_shared optional_public_or_private_variable open_block . global_variable_declaration_list close_block

    $default  reduce using rule 629 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 230


State 171

  640 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 561 (optional_field_annotation)

    metadata_argument_list     go to state 233
    optional_field_annotation  go to state 234


State 172

   25 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 173

   26 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 174

   30 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 30 (string_constant)


State 175

   27 character_sequence: character_sequence . STRING_CHARACTER
   28                   | character_sequence . STRING_CHARACTER_ESC
   29 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 235
    STRING_CHARACTER_ESC  shift, and go to state 236
    "end of the string"   shift, and go to state 237


State 176

   96 annotation_argument_value: "true" .

    $default  reduce using rule 96 (annotation_argument_value)


State 177

   97 annotation_argument_value: "false" .

    $default  reduce using rule 97 (annotation_argument_value)


State 178

   94 annotation_argument_value: "integer constant" .

    $default  reduce using rule 94 (annotation_argument_value)


State 179

   95 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 95 (annotation_argument_value)


State 180

   93 annotation_argument_value: "name" .

    $default  reduce using rule 93 (annotation_argument_value)


State 181

   92 annotation_argument_value: string_constant .

    $default  reduce using rule 92 (annotation_argument_value)


State 182

   98 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 98 (annotation_argument_value_list)


State 183

   99 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  110 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 238
    ')'  shift, and go to state 239


State 184

   54 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 54 (require_module)


State 185

  649 single_alias: optional_public_or_private_alias "name" $@40 . '=' type_declaration

    '='  shift, and go to state 240


State 186

  651 alias_list: alias_list single_alias semicolon .

    $default  reduce using rule 651 (alias_list)


State 187

   23 optional_not_required: '!' . "inscope"

    "inscope"  shift, and go to state 241


State 188

   24 module_declaration: "module" module_name optional_shared optional_public_or_private_module optional_not_required .

    $default  reduce using rule 24 (module_declaration)


State 189

  828 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 . bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits $@88 close_block

    ':'  shift, and go to state 242

    $default  reduce using rule 732 (bitfield_basic_type_declaration)

    bitfield_basic_type_declaration  go to state 243


State 190

  818 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 . open_block $@79 tuple_alias_type_list $@80 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 244


State 191

  823 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 . open_block $@83 variant_alias_type_list $@84 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 245


State 192

   41 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 41 (reader_character_sequence)


State 193

  121 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 121 (annotation_declaration_basic)


State 194

  139 function_name: "operator" . '!'
  140              | "operator" . '~'
  141              | "operator" . "+="
  142              | "operator" . "-="
  143              | "operator" . "*="
  144              | "operator" . "/="
  145              | "operator" . "%="
  146              | "operator" . "&="
  147              | "operator" . "|="
  148              | "operator" . "^="
  149              | "operator" . "&&="
  150              | "operator" . "||="
  151              | "operator" . "^^="
  152              | "operator" . "&&"
  153              | "operator" . "||"
  154              | "operator" . "^^"
  155              | "operator" . '+'
  156              | "operator" . '-'
  157              | "operator" . '*'
  158              | "operator" . '/'
  159              | "operator" . '%'
  160              | "operator" . '<'
  161              | "operator" . '>'
  162              | "operator" . ".."
  163              | "operator" . "=="
  164              | "operator" . "!="
  165              | "operator" . "<="
  166              | "operator" . ">="
  167              | "operator" . '&'
  168              | "operator" . '|'
  169              | "operator" . '^'
  172              | "operator" . "++"
  173              | "operator" . "--"
  174              | "operator" . "<<"
  175              | "operator" . ">>"
  176              | "operator" . "<<="
  177              | "operator" . ">>="
  178              | "operator" . "<<<"
  179              | "operator" . ">>>"
  180              | "operator" . "<<<="
  181              | "operator" . ">>>="
  182              | "operator" . '[' ']'
  183              | "operator" . "?[" ']'
  184              | "operator" . '.'
  185              | "operator" . "?."
  186              | "operator" . '.' "name"
  187              | "operator" . '.' "name" ":="
  188              | "operator" . '.' "name" "+="
  189              | "operator" . '.' "name" "-="
  190              | "operator" . '.' "name" "*="
  191              | "operator" . '.' "name" "/="
  192              | "operator" . '.' "name" "%="
  193              | "operator" . '.' "name" "&="
  194              | "operator" . '.' "name" "|="
  195              | "operator" . '.' "name" "^="
  196              | "operator" . '.' "name" "&&="
  197              | "operator" . '.' "name" "||="
  198              | "operator" . '.' "name" "^^="
  199              | "operator" . "?." "name"
  200              | "operator" . ":="
  201              | "operator" . "delete"
  202              | "operator" . "??"
  203              | "operator" . "is"
  204              | "operator" . "as"
  205              | "operator" . "is" "name"
  206              | "operator" . "as" "name"
  207              | "operator" . '?' "as"
  208              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 246
    "as"      shift, and go to state 247
    "delete"  shift, and go to state 248
    "+="      shift, and go to state 249
    "-="      shift, and go to state 250
    "/="      shift, and go to state 251
    "*="      shift, and go to state 252
    "%="      shift, and go to state 253
    "&="      shift, and go to state 254
    "|="      shift, and go to state 255
    "^="      shift, and go to state 256
    "<<"      shift, and go to state 257
    ">>"      shift, and go to state 258
    "++"      shift, and go to state 259
    "--"      shift, and go to state 260
    "<="      shift, and go to state 261
    "<<="     shift, and go to state 262
    ">>="     shift, and go to state 263
    ">="      shift, and go to state 264
    "=="      shift, and go to state 265
    "!="      shift, and go to state 266
    "??"      shift, and go to state 267
    "?."      shift, and go to state 268
    "?["      shift, and go to state 269
    ":="      shift, and go to state 270
    "<<<"     shift, and go to state 271
    ">>>"     shift, and go to state 272
    "<<<="    shift, and go to state 273
    ">>>="    shift, and go to state 274
    "&&"      shift, and go to state 275
    "||"      shift, and go to state 276
    "^^"      shift, and go to state 277
    "&&="     shift, and go to state 278
    "||="     shift, and go to state 279
    "^^="     shift, and go to state 280
    ".."      shift, and go to state 281
    '?'       shift, and go to state 282
    '|'       shift, and go to state 283
    '^'       shift, and go to state 284
    '&'       shift, and go to state 285
    '<'       shift, and go to state 286
    '>'       shift, and go to state 287
    '-'       shift, and go to state 288
    '+'       shift, and go to state 289
    '*'       shift, and go to state 290
    '/'       shift, and go to state 291
    '%'       shift, and go to state 292
    '~'       shift, and go to state 293
    '!'       shift, and go to state 294
    '.'       shift, and go to state 295
    '['       shift, and go to state 296


State 195

  209 function_name: "bool" .

    $default  reduce using rule 209 (function_name)


State 196

  210 function_name: "string" .

    $default  reduce using rule 210 (function_name)


State 197

  211 function_name: "int" .

    $default  reduce using rule 211 (function_name)


State 198

  212 function_name: "int2" .

    $default  reduce using rule 212 (function_name)


State 199

  213 function_name: "int3" .

    $default  reduce using rule 213 (function_name)


State 200

  214 function_name: "int4" .

    $default  reduce using rule 214 (function_name)


State 201

  215 function_name: "uint" .

    $default  reduce using rule 215 (function_name)


State 202

  216 function_name: "uint2" .

    $default  reduce using rule 216 (function_name)


State 203

  217 function_name: "uint3" .

    $default  reduce using rule 217 (function_name)


State 204

  218 function_name: "uint4" .

    $default  reduce using rule 218 (function_name)


State 205

  219 function_name: "float" .

    $default  reduce using rule 219 (function_name)


State 206

  220 function_name: "float2" .

    $default  reduce using rule 220 (function_name)


State 207

  221 function_name: "float3" .

    $default  reduce using rule 221 (function_name)


State 208

  222 function_name: "float4" .

    $default  reduce using rule 222 (function_name)


State 209

  223 function_name: "range" .

    $default  reduce using rule 223 (function_name)


State 210

  224 function_name: "urange" .

    $default  reduce using rule 224 (function_name)


State 211

  225 function_name: "range64" .

    $default  reduce using rule 225 (function_name)


State 212

  226 function_name: "urange64" .

    $default  reduce using rule 226 (function_name)


State 213

  227 function_name: "int64" .

    $default  reduce using rule 227 (function_name)


State 214

  228 function_name: "uint64" .

    $default  reduce using rule 228 (function_name)


State 215

  229 function_name: "double" .

    $default  reduce using rule 229 (function_name)


State 216

  230 function_name: "int8" .

    $default  reduce using rule 230 (function_name)


State 217

  231 function_name: "uint8" .

    $default  reduce using rule 231 (function_name)


State 218

  232 function_name: "int16" .

    $default  reduce using rule 232 (function_name)


State 219

  233 function_name: "uint16" .

    $default  reduce using rule 233 (function_name)


State 220

  170 function_name: "++" . "operator"

    "operator"  shift, and go to state 297


State 221

  171 function_name: "--" . "operator"

    "operator"  shift, and go to state 298


State 222

  138 function_name: "name" .

    $default  reduce using rule 138 (function_name)


State 223

  238 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 299

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 300


State 224

  240 function_declaration: optional_public_or_private_function $@7 function_declaration_header . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 302


State 225

  664 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "int"     shift, and go to state 303
    "uint"    shift, and go to state 304
    "int64"   shift, and go to state 305
    "uint64"  shift, and go to state 306
    "int8"    shift, and go to state 307
    "uint8"   shift, and go to state 308
    "int16"   shift, and go to state 309
    "uint16"  shift, and go to state 310

    enum_basic_type_declaration  go to state 311


State 226

  661 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block . $@42 enum_list $@43 close_block

    $default  reduce using rule 659 ($@42)

    $@42  go to state 312


State 227

  668 optional_sealed: "sealed" .

    $default  reduce using rule 668 (optional_sealed)


State 228

  669 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 313


State 229

  681 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name . $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 680 ($@47)

    $@47  go to state 314


State 230

  630 global_variable_declaration_list: global_variable_declaration_list . "end of line"
  632                                 | global_variable_declaration_list . $@38 optional_field_annotation let_variable_declaration
  638 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list . close_block

    "close scope"        shift, and go to state 146
    "end of line"        shift, and go to state 315
    "end of code block"  shift, and go to state 147

    $default  reduce using rule 631 ($@38)

    close_block  go to state 316
    $@38         go to state 317


State 231

  562 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 318


State 232

  113 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 319


State 233

  114 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  115                       | metadata_argument_list . semicolon
  563 optional_field_annotation: metadata_argument_list .

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '@'                  shift, and go to state 320

    $default  reduce using rule 563 (optional_field_annotation)

    semicolon  go to state 321


State 234

  640 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 322
    "name"  shift, and go to state 323

    let_variable_name_with_pos_list  go to state 324
    let_variable_declaration         go to state 325


State 235

   27 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 27 (character_sequence)


State 236

   28 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 28 (character_sequence)


State 237

   29 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 29 (string_constant)


State 238

   99 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 176
    "false"                    shift, and go to state 177
    "integer constant"         shift, and go to state 178
    "floating point constant"  shift, and go to state 179
    "name"                     shift, and go to state 180
    "start of the string"      shift, and go to state 135

    string_constant            go to state 181
    annotation_argument_value  go to state 326


State 239

  110 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 110 (annotation_argument)


State 240

  649 single_alias: optional_public_or_private_alias "name" $@40 '=' . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 374


State 241

   23 optional_not_required: '!' "inscope" .

    $default  reduce using rule 23 (optional_not_required)


State 242

  733 bitfield_basic_type_declaration: ':' . "uint8"
  734                                | ':' . "uint16"
  735                                | ':' . "uint"
  736                                | ':' . "uint64"

    "uint"    shift, and go to state 375
    "uint64"  shift, and go to state 376
    "uint8"   shift, and go to state 377
    "uint16"  shift, and go to state 378


State 243

  828 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 bitfield_basic_type_declaration . open_block $@87 bitfield_alias_bits $@88 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 379


State 244

  818 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block . $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 816 ($@79)

    $@79  go to state 380


State 245

  823 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block . $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 821 ($@83)

    $@83  go to state 381


State 246

  203 function_name: "operator" "is" .
  205              | "operator" "is" . "name"

    "name"  shift, and go to state 382

    $default  reduce using rule 203 (function_name)


State 247

  204 function_name: "operator" "as" .
  206              | "operator" "as" . "name"

    "name"  shift, and go to state 383

    $default  reduce using rule 204 (function_name)


State 248

  201 function_name: "operator" "delete" .

    $default  reduce using rule 201 (function_name)


State 249

  141 function_name: "operator" "+=" .

    $default  reduce using rule 141 (function_name)


State 250

  142 function_name: "operator" "-=" .

    $default  reduce using rule 142 (function_name)


State 251

  144 function_name: "operator" "/=" .

    $default  reduce using rule 144 (function_name)


State 252

  143 function_name: "operator" "*=" .

    $default  reduce using rule 143 (function_name)


State 253

  145 function_name: "operator" "%=" .

    $default  reduce using rule 145 (function_name)


State 254

  146 function_name: "operator" "&=" .

    $default  reduce using rule 146 (function_name)


State 255

  147 function_name: "operator" "|=" .

    $default  reduce using rule 147 (function_name)


State 256

  148 function_name: "operator" "^=" .

    $default  reduce using rule 148 (function_name)


State 257

  174 function_name: "operator" "<<" .

    $default  reduce using rule 174 (function_name)


State 258

  175 function_name: "operator" ">>" .

    $default  reduce using rule 175 (function_name)


State 259

  172 function_name: "operator" "++" .

    $default  reduce using rule 172 (function_name)


State 260

  173 function_name: "operator" "--" .

    $default  reduce using rule 173 (function_name)


State 261

  165 function_name: "operator" "<=" .

    $default  reduce using rule 165 (function_name)


State 262

  176 function_name: "operator" "<<=" .

    $default  reduce using rule 176 (function_name)


State 263

  177 function_name: "operator" ">>=" .

    $default  reduce using rule 177 (function_name)


State 264

  166 function_name: "operator" ">=" .

    $default  reduce using rule 166 (function_name)


State 265

  163 function_name: "operator" "==" .

    $default  reduce using rule 163 (function_name)


State 266

  164 function_name: "operator" "!=" .

    $default  reduce using rule 164 (function_name)


State 267

  202 function_name: "operator" "??" .

    $default  reduce using rule 202 (function_name)


State 268

  185 function_name: "operator" "?." .
  199              | "operator" "?." . "name"

    "name"  shift, and go to state 384

    $default  reduce using rule 185 (function_name)


State 269

  183 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 385


State 270

  200 function_name: "operator" ":=" .

    $default  reduce using rule 200 (function_name)


State 271

  178 function_name: "operator" "<<<" .

    $default  reduce using rule 178 (function_name)


State 272

  179 function_name: "operator" ">>>" .

    $default  reduce using rule 179 (function_name)


State 273

  180 function_name: "operator" "<<<=" .

    $default  reduce using rule 180 (function_name)


State 274

  181 function_name: "operator" ">>>=" .

    $default  reduce using rule 181 (function_name)


State 275

  152 function_name: "operator" "&&" .

    $default  reduce using rule 152 (function_name)


State 276

  153 function_name: "operator" "||" .

    $default  reduce using rule 153 (function_name)


State 277

  154 function_name: "operator" "^^" .

    $default  reduce using rule 154 (function_name)


State 278

  149 function_name: "operator" "&&=" .

    $default  reduce using rule 149 (function_name)


State 279

  150 function_name: "operator" "||=" .

    $default  reduce using rule 150 (function_name)


State 280

  151 function_name: "operator" "^^=" .

    $default  reduce using rule 151 (function_name)


State 281

  162 function_name: "operator" ".." .

    $default  reduce using rule 162 (function_name)


State 282

  207 function_name: "operator" '?' . "as"
  208              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 386


State 283

  168 function_name: "operator" '|' .

    $default  reduce using rule 168 (function_name)


State 284

  169 function_name: "operator" '^' .

    $default  reduce using rule 169 (function_name)


State 285

  167 function_name: "operator" '&' .

    $default  reduce using rule 167 (function_name)


State 286

  160 function_name: "operator" '<' .

    $default  reduce using rule 160 (function_name)


State 287

  161 function_name: "operator" '>' .

    $default  reduce using rule 161 (function_name)


State 288

  156 function_name: "operator" '-' .

    $default  reduce using rule 156 (function_name)


State 289

  155 function_name: "operator" '+' .

    $default  reduce using rule 155 (function_name)


State 290

  157 function_name: "operator" '*' .

    $default  reduce using rule 157 (function_name)


State 291

  158 function_name: "operator" '/' .

    $default  reduce using rule 158 (function_name)


State 292

  159 function_name: "operator" '%' .

    $default  reduce using rule 159 (function_name)


State 293

  140 function_name: "operator" '~' .

    $default  reduce using rule 140 (function_name)


State 294

  139 function_name: "operator" '!' .

    $default  reduce using rule 139 (function_name)


State 295

  184 function_name: "operator" '.' .
  186              | "operator" '.' . "name"
  187              | "operator" '.' . "name" ":="
  188              | "operator" '.' . "name" "+="
  189              | "operator" '.' . "name" "-="
  190              | "operator" '.' . "name" "*="
  191              | "operator" '.' . "name" "/="
  192              | "operator" '.' . "name" "%="
  193              | "operator" '.' . "name" "&="
  194              | "operator" '.' . "name" "|="
  195              | "operator" '.' . "name" "^="
  196              | "operator" '.' . "name" "&&="
  197              | "operator" '.' . "name" "||="
  198              | "operator" '.' . "name" "^^="

    "name"  shift, and go to state 387

    $default  reduce using rule 184 (function_name)


State 296

  182 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 388


State 297

  170 function_name: "++" "operator" .

    $default  reduce using rule 170 (function_name)


State 298

  171 function_name: "--" "operator" .

    $default  reduce using rule 171 (function_name)


State 299

  134 optional_function_argument_list: '(' . ')'
  135                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 389
    "[["  shift, and go to state 231
    ')'   shift, and go to state 390
    '@'   shift, and go to state 232

    $default  reduce using rule 561 (optional_field_annotation)

    metadata_argument_list                 go to state 233
    optional_field_annotation              go to state 391
    function_argument_declaration_no_type  go to state 392
    function_argument_declaration_type     go to state 393
    function_argument_list                 go to state 394


State 300

  238 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 395

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 396


State 301

  245 expression_block: open_block . expressions close_block
  246                 | open_block . expressions close_block "finally" open_block expressions close_block

    $default  reduce using rule 271 (expressions)

    expressions  go to state 397


State 302

  240 function_declaration: optional_public_or_private_function $@7 function_declaration_header expression_block .

    $default  reduce using rule 240 (function_declaration)


State 303

  714 enum_basic_type_declaration: "int" .

    $default  reduce using rule 714 (enum_basic_type_declaration)


State 304

  717 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 717 (enum_basic_type_declaration)


State 305

  720 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 720 (enum_basic_type_declaration)


State 306

  721 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 721 (enum_basic_type_declaration)


State 307

  715 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 715 (enum_basic_type_declaration)


State 308

  718 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 718 (enum_basic_type_declaration)


State 309

  716 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 716 (enum_basic_type_declaration)


State 310

  719 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 719 (enum_basic_type_declaration)


State 311

  664 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . open_block $@44 enum_list $@45 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 398


State 312

  661 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 . enum_list $@43 close_block

    $default  reduce using rule 641 (enum_list)

    enum_list  go to state 399


State 313

  669 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 400

    $default  reduce using rule 665 (optional_structure_parent)

    optional_structure_parent  go to state 401


State 314

  681 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 . optional_struct_variable_declaration_list

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 677 (optional_struct_variable_declaration_list)

    open_block                                 go to state 402
    optional_struct_variable_declaration_list  go to state 403


State 315

  630 global_variable_declaration_list: global_variable_declaration_list "end of line" .

    $default  reduce using rule 630 (global_variable_declaration_list)


State 316

  638 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block .

    $default  reduce using rule 638 (global_let)


State 317

  632 global_variable_declaration_list: global_variable_declaration_list $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 561 (optional_field_annotation)

    metadata_argument_list     go to state 233
    optional_field_annotation  go to state 404


State 318

  112 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  562 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 86
    ']'  shift, and go to state 405


State 319

  113 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 113 (metadata_argument_list)


State 320

  114 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 406


State 321

  115 metadata_argument_list: metadata_argument_list semicolon .

    $default  reduce using rule 115 (metadata_argument_list)


State 322

  620 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 407


State 323

  619 let_variable_name_with_pos_list: "name" .
  621                                | "name" . "aka" "name"

    "aka"  shift, and go to state 408

    $default  reduce using rule 619 (let_variable_name_with_pos_list)


State 324

  622 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  623                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  624 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options semicolon
  625                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  626                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  627                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr semicolon
  628                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 409
    ':'  shift, and go to state 410
    '&'  shift, and go to state 411

    $default  reduce using rule 617 (optional_ref)

    optional_ref  go to state 412


State 325

  640 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 640 (global_let)


State 326

   99 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 99 (annotation_argument_value_list)


State 327

  754 type_declaration_no_options: "type" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 413


State 328

  777 type_declaration_no_options: "array" . '<' $@55 type_declaration '>' $@56

    '<'  shift, and go to state 414


State 329

  780 type_declaration_no_options: "table" . '<' $@57 table_type_pair '>' $@58

    '<'  shift, and go to state 415


State 330

  755 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 416


State 331

  783 type_declaration_no_options: "iterator" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 417


State 332

  773 type_declaration_no_options: "smart_ptr" . '<' $@53 type_declaration '>' $@54

    '<'  shift, and go to state 418


State 333

  687 basic_type_declaration: "bool" .

    $default  reduce using rule 687 (basic_type_declaration)


State 334

  707 basic_type_declaration: "void" .

    $default  reduce using rule 707 (basic_type_declaration)


State 335

  688 basic_type_declaration: "string" .

    $default  reduce using rule 688 (basic_type_declaration)


State 336

  723 auto_type_declaration: "auto" .
  724                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 419

    '('       [reduce using rule 723 (auto_type_declaration)]
    $default  reduce using rule 723 (auto_type_declaration)


State 337

  689 basic_type_declaration: "int" .

    $default  reduce using rule 689 (basic_type_declaration)


State 338

  693 basic_type_declaration: "int2" .

    $default  reduce using rule 693 (basic_type_declaration)


State 339

  694 basic_type_declaration: "int3" .

    $default  reduce using rule 694 (basic_type_declaration)


State 340

  695 basic_type_declaration: "int4" .

    $default  reduce using rule 695 (basic_type_declaration)


State 341

  696 basic_type_declaration: "uint" .

    $default  reduce using rule 696 (basic_type_declaration)


State 342

  713 basic_type_declaration: "bitfield" .
  739 bitfield_type_declaration: "bitfield" . bitfield_basic_type_declaration '<' $@48 bitfield_bits '>' $@49

    ':'  shift, and go to state 242

    '<'       reduce using rule 732 (bitfield_basic_type_declaration)
    $default  reduce using rule 713 (basic_type_declaration)

    bitfield_basic_type_declaration  go to state 420


State 343

  700 basic_type_declaration: "uint2" .

    $default  reduce using rule 700 (basic_type_declaration)


State 344

  701 basic_type_declaration: "uint3" .

    $default  reduce using rule 701 (basic_type_declaration)


State 345

  702 basic_type_declaration: "uint4" .

    $default  reduce using rule 702 (basic_type_declaration)


State 346

  703 basic_type_declaration: "float" .

    $default  reduce using rule 703 (basic_type_declaration)


State 347

  704 basic_type_declaration: "float2" .

    $default  reduce using rule 704 (basic_type_declaration)


State 348

  705 basic_type_declaration: "float3" .

    $default  reduce using rule 705 (basic_type_declaration)


State 349

  706 basic_type_declaration: "float4" .

    $default  reduce using rule 706 (basic_type_declaration)


State 350

  708 basic_type_declaration: "range" .

    $default  reduce using rule 708 (basic_type_declaration)


State 351

  709 basic_type_declaration: "urange" .

    $default  reduce using rule 709 (basic_type_declaration)


State 352

  710 basic_type_declaration: "range64" .

    $default  reduce using rule 710 (basic_type_declaration)


State 353

  711 basic_type_declaration: "urange64" .

    $default  reduce using rule 711 (basic_type_declaration)


State 354

  784 type_declaration_no_options: "block" .
  787                            | "block" . '<' $@61 type_declaration '>' $@62
  790                            | "block" . '<' $@63 optional_function_argument_list optional_function_type '>' $@64

    '<'  shift, and go to state 421

    $default  reduce using rule 784 (type_declaration_no_options)


State 355

  692 basic_type_declaration: "int64" .

    $default  reduce using rule 692 (basic_type_declaration)


State 356

  699 basic_type_declaration: "uint64" .

    $default  reduce using rule 699 (basic_type_declaration)


State 357

  712 basic_type_declaration: "double" .

    $default  reduce using rule 712 (basic_type_declaration)


State 358

  791 type_declaration_no_options: "function" .
  794                            | "function" . '<' $@65 type_declaration '>' $@66
  797                            | "function" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 422

    $default  reduce using rule 791 (type_declaration_no_options)


State 359

  798 type_declaration_no_options: "lambda" .
  801                            | "lambda" . '<' $@69 type_declaration '>' $@70
  804                            | "lambda" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 423

    $default  reduce using rule 798 (type_declaration_no_options)


State 360

  690 basic_type_declaration: "int8" .

    $default  reduce using rule 690 (basic_type_declaration)


State 361

  697 basic_type_declaration: "uint8" .

    $default  reduce using rule 697 (basic_type_declaration)


State 362

  691 basic_type_declaration: "int16" .

    $default  reduce using rule 691 (basic_type_declaration)


State 363

  698 basic_type_declaration: "uint16" .

    $default  reduce using rule 698 (basic_type_declaration)


State 364

  807 type_declaration_no_options: "tuple" . '<' $@73 tuple_type_list '>' $@74

    '<'  shift, and go to state 424


State 365

  810 type_declaration_no_options: "variant" . '<' $@75 variant_type_list '>' $@76

    '<'  shift, and go to state 425


State 366

  725 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 426


State 367

  756 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  758                            | '$' . name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 427


State 368

  722 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 722 (structure_type_declaration)


State 369

  746 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 746 (type_declaration_no_options)


State 370

  749 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 749 (type_declaration_no_options)


State 371

  747 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 747 (type_declaration_no_options)


State 372

  748 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 748 (type_declaration_no_options)


State 373

  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"
  811 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    $default  reduce using rule 811 (type_declaration)

    dim_list  go to state 438


State 374

  649 single_alias: optional_public_or_private_alias "name" $@40 '=' type_declaration .
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 649 (single_alias)


State 375

  735 bitfield_basic_type_declaration: ':' "uint" .

    $default  reduce using rule 735 (bitfield_basic_type_declaration)


State 376

  736 bitfield_basic_type_declaration: ':' "uint64" .

    $default  reduce using rule 736 (bitfield_basic_type_declaration)


State 377

  733 bitfield_basic_type_declaration: ':' "uint8" .

    $default  reduce using rule 733 (bitfield_basic_type_declaration)


State 378

  734 bitfield_basic_type_declaration: ':' "uint16" .

    $default  reduce using rule 734 (bitfield_basic_type_declaration)


State 379

  828 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 bitfield_basic_type_declaration open_block . $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 826 ($@87)

    $@87  go to state 440


State 380

  818 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 . tuple_alias_type_list $@80 close_block

    $default  reduce using rule 596 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 441


State 381

  823 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 . variant_alias_type_list $@84 close_block

    $default  reduce using rule 602 (variant_alias_type_list)

    variant_alias_type_list  go to state 442


State 382

  205 function_name: "operator" "is" "name" .

    $default  reduce using rule 205 (function_name)


State 383

  206 function_name: "operator" "as" "name" .

    $default  reduce using rule 206 (function_name)


State 384

  199 function_name: "operator" "?." "name" .

    $default  reduce using rule 199 (function_name)


State 385

  183 function_name: "operator" "?[" ']' .

    $default  reduce using rule 183 (function_name)


State 386

  207 function_name: "operator" '?' "as" .
  208              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 443

    $default  reduce using rule 207 (function_name)


State 387

  186 function_name: "operator" '.' "name" .
  187              | "operator" '.' "name" . ":="
  188              | "operator" '.' "name" . "+="
  189              | "operator" '.' "name" . "-="
  190              | "operator" '.' "name" . "*="
  191              | "operator" '.' "name" . "/="
  192              | "operator" '.' "name" . "%="
  193              | "operator" '.' "name" . "&="
  194              | "operator" '.' "name" . "|="
  195              | "operator" '.' "name" . "^="
  196              | "operator" '.' "name" . "&&="
  197              | "operator" '.' "name" . "||="
  198              | "operator" '.' "name" . "^^="

    "+="   shift, and go to state 444
    "-="   shift, and go to state 445
    "/="   shift, and go to state 446
    "*="   shift, and go to state 447
    "%="   shift, and go to state 448
    "&="   shift, and go to state 449
    "|="   shift, and go to state 450
    "^="   shift, and go to state 451
    ":="   shift, and go to state 452
    "&&="  shift, and go to state 453
    "||="  shift, and go to state 454
    "^^="  shift, and go to state 455

    $default  reduce using rule 186 (function_name)


State 388

  182 function_name: "operator" '[' ']' .

    $default  reduce using rule 182 (function_name)


State 389

  586 function_argument_declaration_type: "$a" . '(' expr ')'

    '('  shift, and go to state 456


State 390

  134 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 134 (optional_function_argument_list)


State 391

  584 function_argument_declaration_no_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_no_type
  585 function_argument_declaration_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_type

    "let"  shift, and go to state 457
    "var"  shift, and go to state 458

    $default  reduce using rule 325 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 459


State 392

  587 function_argument_list: function_argument_declaration_no_type .
  589                       | function_argument_declaration_no_type . semicolon function_argument_list

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 587 (function_argument_list)

    semicolon  go to state 460


State 393

  588 function_argument_list: function_argument_declaration_type .
  590                       | function_argument_declaration_type . semicolon function_argument_list
  591                       | function_argument_declaration_type . ',' function_argument_list

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 461

    $default  reduce using rule 588 (function_argument_list)

    semicolon  go to state 462


State 394

  135 optional_function_argument_list: '(' function_argument_list . ')'

    ')'  shift, and go to state 463


State 395

  137 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 464


State 396

  238 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 238 (function_declaration_header)


State 397

  245 expression_block: open_block expressions . close_block
  246                 | open_block expressions . close_block "finally" open_block expressions close_block
  272 expressions: expressions . expression_any
  273            | expressions . error

    error                             shift, and go to state 465
    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 468
    "if"                              shift, and go to state 469
    "static_if"                       shift, and go to state 470
    "for"                             shift, and go to state 471
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "return"                          shift, and go to state 478
    "null"                            shift, and go to state 479
    "break"                           shift, and go to state 480
    "try"                             shift, and go to state 481
    "table"                           shift, and go to state 482
    "delete"                          shift, and go to state 483
    "deref"                           shift, and go to state 484
    "with"                            shift, and go to state 485
    "assume"                          shift, and go to state 486
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 489
    "continue"                        shift, and go to state 490
    "pass"                            shift, and go to state 491
    "reinterpret"                     shift, and go to state 492
    "label"                           shift, and go to state 493
    "goto"                            shift, and go to state 494
    "unsafe"                          shift, and go to state 495
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "yield"                           shift, and go to state 502
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "close scope"                     shift, and go to state 146
    "end of line"                     shift, and go to state 13
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 525
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    "end of code block"               shift, and go to state 147
    "end of expression"               shift, and go to state 14
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder             go to state 538
    expr_reader                go to state 539
    expression_label           go to state 540
    expression_goto            go to state 541
    semicolon                  go to state 542
    if_or_static_if            go to state 543
    expression_if_one_liner    go to state 544
    expression_if_then_else    go to state 545
    expression_for_loop        go to state 546
    expression_unsafe          go to state 547
    expression_while_loop      go to state 548
    expression_with            go to state 549
    expression_with_alias      go to state 550
    close_block                go to state 551
    expr_call_pipe             go to state 552
    expression_any             go to state 553
    expr_keyword               go to state 554
    expression_keyword         go to state 555
    expr_pipe                  go to state 556
    name_in_namespace          go to state 557
    expression_delete          go to state 558
    expr_new                   go to state 559
    expression_break           go to state 560
    expression_continue        go to state 561
    expression_return_no_pipe  go to state 562
    expression_return          go to state 563
    expression_yield_no_pipe   go to state 564
    expression_yield           go to state 565
    expression_try_catch       go to state 566
    kwd_let                    go to state 567
    expression_let             go to state 568
    expr_cast                  go to state 569
    expr_type_decl             go to state 570
    expr_type_info             go to state 571
    block_or_lambda            go to state 572
    expr_full_block            go to state 573
    expr_numeric_const         go to state 574
    expr_assign                go to state 575
    expr_assign_pipe           go to state 576
    expr_named_call            go to state 577
    expr_method_call           go to state 578
    func_addr_expr             go to state 579
    expr_field                 go to state 580
    expr_call                  go to state 581
    expr                       go to state 582
    expr_mtag                  go to state 583
    basic_type_declaration     go to state 584
    make_decl                  go to state 585
    make_struct_decl           go to state 586
    make_tuple_call            go to state 587
    make_dim_decl              go to state 588
    make_table_decl            go to state 589
    array_comprehension        go to state 590


State 398

  664 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block . $@44 enum_list $@45 close_block

    $default  reduce using rule 662 ($@44)

    $@44  go to state 591


State 399

  642 enum_list: enum_list . semicolon
  643          | enum_list . "name" semicolon
  644          | enum_list . "name" '=' expr semicolon
  661 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list . $@43 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 592
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 660 ($@43)

    semicolon  go to state 593
    $@43       go to state 594


State 400

  666 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 595


State 401

  669 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 669 (structure_name)


State 402

  678 optional_struct_variable_declaration_list: open_block . struct_variable_declaration_list close_block

    $default  reduce using rule 575 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 596


State 403

  681 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list .

    $default  reduce using rule 681 (structure_declaration)


State 404

  632 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 322
    "name"  shift, and go to state 323

    let_variable_name_with_pos_list  go to state 324
    let_variable_declaration         go to state 597


State 405

  562 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 598


State 406

  114 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 114 (metadata_argument_list)


State 407

  620 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 603
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 408

  621 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 604


State 409

  622 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  623                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 605


State 410

  624 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options semicolon
  625                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  626                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 606


State 411

  618 optional_ref: '&' .

    $default  reduce using rule 618 (optional_ref)


State 412

  627 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr semicolon
  628                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 607
    ":="  shift, and go to state 608
    '='   shift, and go to state 609

    copy_or_move_or_clone  go to state 610


State 413

  754 type_declaration_no_options: "type" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 752 ($@50)

    $@50  go to state 611


State 414

  777 type_declaration_no_options: "array" '<' . $@55 type_declaration '>' $@56

    $default  reduce using rule 775 ($@55)

    $@55  go to state 612


State 415

  780 type_declaration_no_options: "table" '<' . $@57 table_type_pair '>' $@58

    $default  reduce using rule 778 ($@57)

    $@57  go to state 613


State 416

  755 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 614
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 417

  783 type_declaration_no_options: "iterator" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 781 ($@59)

    $@59  go to state 615


State 418

  773 type_declaration_no_options: "smart_ptr" '<' . $@53 type_declaration '>' $@54

    $default  reduce using rule 771 ($@53)

    $@53  go to state 616


State 419

  724 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 617


State 420

  739 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration . '<' $@48 bitfield_bits '>' $@49

    '<'  shift, and go to state 618


State 421

  787 type_declaration_no_options: "block" '<' . $@61 type_declaration '>' $@62
  790                            | "block" '<' . $@63 optional_function_argument_list optional_function_type '>' $@64

    ':'       reduce using rule 788 ($@63)
    '>'       reduce using rule 788 ($@63)
    '('       reduce using rule 788 ($@63)
    $default  reduce using rule 785 ($@61)

    $@61  go to state 619
    $@63  go to state 620


State 422

  794 type_declaration_no_options: "function" '<' . $@65 type_declaration '>' $@66
  797                            | "function" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 795 ($@67)
    '>'       reduce using rule 795 ($@67)
    '('       reduce using rule 795 ($@67)
    $default  reduce using rule 792 ($@65)

    $@65  go to state 621
    $@67  go to state 622


State 423

  801 type_declaration_no_options: "lambda" '<' . $@69 type_declaration '>' $@70
  804                            | "lambda" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 802 ($@71)
    '>'       reduce using rule 802 ($@71)
    '('       reduce using rule 802 ($@71)
    $default  reduce using rule 799 ($@69)

    $@69  go to state 623
    $@71  go to state 624


State 424

  807 type_declaration_no_options: "tuple" '<' . $@73 tuple_type_list '>' $@74

    $default  reduce using rule 805 ($@73)

    $@73  go to state 625


State 425

  810 type_declaration_no_options: "variant" '<' . $@75 variant_type_list '>' $@76

    $default  reduce using rule 808 ($@75)

    $@75  go to state 626


State 426

  725 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 627
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 427

  756 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  758                            | '$' name_in_namespace . '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 628
    '('  shift, and go to state 629


State 428

  761 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 761 (type_declaration_no_options)


State 429

  766 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 766 (type_declaration_no_options)


State 430

  760 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 760 (type_declaration_no_options)


State 431

  768 type_declaration_no_options: type_declaration_no_options "==" . "const"
  769                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 630
    '&'      shift, and go to state 631


State 432

  774 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 774 (type_declaration_no_options)


State 433

  770 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 770 (type_declaration_no_options)


State 434

  763 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 763 (type_declaration_no_options)


State 435

  759 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  762                            | type_declaration_no_options '-' . "const"
  764                            | type_declaration_no_options '-' . '&'
  767                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 632
    '&'      shift, and go to state 633
    '['      shift, and go to state 634
    '#'      shift, and go to state 635


State 436

  744 dim_list: '[' . expr ']'
  751 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    ']'                               shift, and go to state 636
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 637
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 437

  765 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 765 (type_declaration_no_options)


State 438

  745 dim_list: dim_list . '[' expr ']'
  750 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 638

    '['       [reduce using rule 750 (type_declaration_no_options)]
    $default  reduce using rule 750 (type_declaration_no_options)


State 439

  812 type_declaration: type_declaration '|' . type_declaration_no_options
  813                 | type_declaration '|' . '#'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367
    '#'          shift, and go to state 639

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 640


State 440

  828 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 bitfield_basic_type_declaration open_block $@87 . bitfield_alias_bits $@88 close_block

    $default  reduce using rule 728 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 641


State 441

  597 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  598                      | tuple_alias_type_list . tuple_type c_or_s
  818 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list . $@80 close_block

    "type"               shift, and go to state 327
    "array"              shift, and go to state 328
    "table"              shift, and go to state 329
    "typedecl"           shift, and go to state 330
    "iterator"           shift, and go to state 331
    "smart_ptr"          shift, and go to state 332
    "bool"               shift, and go to state 333
    "void"               shift, and go to state 334
    "string"             shift, and go to state 335
    "auto"               shift, and go to state 336
    "int"                shift, and go to state 337
    "int2"               shift, and go to state 338
    "int3"               shift, and go to state 339
    "int4"               shift, and go to state 340
    "uint"               shift, and go to state 341
    "bitfield"           shift, and go to state 342
    "uint2"              shift, and go to state 343
    "uint3"              shift, and go to state 344
    "uint4"              shift, and go to state 345
    "float"              shift, and go to state 346
    "float2"             shift, and go to state 347
    "float3"             shift, and go to state 348
    "float4"             shift, and go to state 349
    "range"              shift, and go to state 350
    "urange"             shift, and go to state 351
    "range64"            shift, and go to state 352
    "urange64"           shift, and go to state 353
    "block"              shift, and go to state 354
    "int64"              shift, and go to state 355
    "uint64"             shift, and go to state 356
    "double"             shift, and go to state 357
    "function"           shift, and go to state 358
    "lambda"             shift, and go to state 359
    "int8"               shift, and go to state 360
    "uint8"              shift, and go to state 361
    "int16"              shift, and go to state 362
    "uint16"             shift, and go to state 363
    "tuple"              shift, and go to state 364
    "variant"            shift, and go to state 365
    "::"                 shift, and go to state 62
    "$t"                 shift, and go to state 366
    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 642
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '$'                  shift, and go to state 367

    $default  reduce using rule 817 ($@80)

    semicolon                    go to state 644
    name_in_namespace            go to state 368
    tuple_type                   go to state 645
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    c_or_s                       go to state 646
    type_declaration_no_options  go to state 373
    type_declaration             go to state 647
    $@80                         go to state 648


State 442

  603 variant_alias_type_list: variant_alias_type_list . c_or_s
  604                        | variant_alias_type_list . variant_type c_or_s
  823 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list . $@84 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 649
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643

    $default  reduce using rule 822 ($@84)

    semicolon     go to state 644
    variant_type  go to state 650
    c_or_s        go to state 651
    $@84          go to state 652


State 443

  208 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 208 (function_name)


State 444

  188 function_name: "operator" '.' "name" "+=" .

    $default  reduce using rule 188 (function_name)


State 445

  189 function_name: "operator" '.' "name" "-=" .

    $default  reduce using rule 189 (function_name)


State 446

  191 function_name: "operator" '.' "name" "/=" .

    $default  reduce using rule 191 (function_name)


State 447

  190 function_name: "operator" '.' "name" "*=" .

    $default  reduce using rule 190 (function_name)


State 448

  192 function_name: "operator" '.' "name" "%=" .

    $default  reduce using rule 192 (function_name)


State 449

  193 function_name: "operator" '.' "name" "&=" .

    $default  reduce using rule 193 (function_name)


State 450

  194 function_name: "operator" '.' "name" "|=" .

    $default  reduce using rule 194 (function_name)


State 451

  195 function_name: "operator" '.' "name" "^=" .

    $default  reduce using rule 195 (function_name)


State 452

  187 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 187 (function_name)


State 453

  196 function_name: "operator" '.' "name" "&&=" .

    $default  reduce using rule 196 (function_name)


State 454

  197 function_name: "operator" '.' "name" "||=" .

    $default  reduce using rule 197 (function_name)


State 455

  198 function_name: "operator" '.' "name" "^^=" .

    $default  reduce using rule 198 (function_name)


State 456

  586 function_argument_declaration_type: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 653
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 457

  323 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 323 (kwd_let_var_or_nothing)


State 458

  324 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 324 (kwd_let_var_or_nothing)


State 459

  584 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_no_type
  585 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_type

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_declaration_no_type  go to state 656
    variable_declaration_type     go to state 657
    variable_name_with_pos_list   go to state 658


State 460

  589 function_argument_list: function_argument_declaration_no_type semicolon . function_argument_list

    "$a"  shift, and go to state 389
    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 561 (optional_field_annotation)

    metadata_argument_list                 go to state 233
    optional_field_annotation              go to state 391
    function_argument_declaration_no_type  go to state 392
    function_argument_declaration_type     go to state 393
    function_argument_list                 go to state 659


State 461

  591 function_argument_list: function_argument_declaration_type ',' . function_argument_list

    "$a"  shift, and go to state 389
    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 561 (optional_field_annotation)

    metadata_argument_list                 go to state 233
    optional_field_annotation              go to state 391
    function_argument_declaration_no_type  go to state 392
    function_argument_declaration_type     go to state 393
    function_argument_list                 go to state 660


State 462

  590 function_argument_list: function_argument_declaration_type semicolon . function_argument_list

    "$a"  shift, and go to state 389
    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 561 (optional_field_annotation)

    metadata_argument_list                 go to state 233
    optional_field_annotation              go to state 391
    function_argument_declaration_no_type  go to state 392
    function_argument_declaration_type     go to state 393
    function_argument_list                 go to state 661


State 463

  135 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 135 (optional_function_argument_list)


State 464

  137 optional_function_type: ':' type_declaration .
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 137 (optional_function_type)


State 465

  273 expressions: expressions error .

    $default  reduce using rule 273 (expressions)


State 466

  877 make_struct_decl: "struct" . '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 662


State 467

  880 make_struct_decl: "class" . '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 663


State 468

   88 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 664
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 469

   72 if_or_static_if: "if" .

    $default  reduce using rule 72 (if_or_static_if)


State 470

   73 if_or_static_if: "static_if" .

    $default  reduce using rule 73 (if_or_static_if)


State 471

   86 expression_for_loop: "for" . $@5 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 85 ($@5)

    $@5  go to state 665


State 472

  466 expr: "true" .

    $default  reduce using rule 466 (expr)


State 473

  467 expr: "false" .

    $default  reduce using rule 467 (expr)


State 474

  303 expr_new: "new" . new_type_declaration
  304         | "new" . new_type_declaration '(' use_initializer ')'
  305         | "new" . new_type_declaration '(' expr_list ')'
  306         | "new" . new_type_declaration '(' make_struct_single ')'
  307         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  308         | "new" . make_decl

    "struct"               shift, and go to state 466
    "class"                shift, and go to state 467
    "array"                shift, and go to state 477
    "table"                shift, and go to state 482
    "fixed_array"          shift, and go to state 496
    "default"              shift, and go to state 497
    "tuple"                shift, and go to state 499
    "variant"              shift, and go to state 500
    "::"                   shift, and go to state 62
    "[["                   shift, and go to state 515
    "[{"                   shift, and go to state 516
    "{{"                   shift, and go to state 517
    "name"                 shift, and go to state 63
    "begin of code block"  shift, and go to state 528
    '<'                    shift, and go to state 666
    '['                    shift, and go to state 534

    name_in_namespace           go to state 368
    new_type_declaration        go to state 667
    structure_type_declaration  go to state 668
    make_decl                   go to state 669
    make_struct_decl            go to state 586
    make_tuple_call             go to state 587
    make_dim_decl               go to state 588
    make_table_decl             go to state 589
    array_comprehension         go to state 590


State 475

  354 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  355               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  356               | "typeinfo" . '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  357               | "typeinfo" . name_in_namespace '(' expr ')'
  358               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  359               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63
    '('     shift, and go to state 670

    name_in_namespace  go to state 671


State 476

  353 expr_type_decl: "type" . '<' $@20 type_declaration '>' $@21

    '<'  shift, and go to state 672


State 477

  903 make_dim_decl: "array" . "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'
  906              | "array" . "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'
  909              | "array" . "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'
  910              | "array" . '(' expr_list optional_comma ')'
  913              | "array" . '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "struct"   shift, and go to state 673
    "tuple"    shift, and go to state 674
    "variant"  shift, and go to state 675
    '<'        shift, and go to state 676
    '('        shift, and go to state 677


State 478

  311 expression_return_no_pipe: "return" .
  312                          | "return" . expr_list
  313                          | "return" . "<-" expr_list
  315 expression_return: "return" . expr_pipe
  316                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "<-"                              shift, and go to state 678
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 311 (expression_return_no_pipe)

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 679
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 680
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 682
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 479

  460 expr: "null" .

    $default  reduce using rule 460 (expr)


State 480

  309 expression_break: "break" .

    $default  reduce using rule 309 (expression_break)


State 481

  322 expression_try_catch: "try" . expression_block "recover" expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 683


State 482

  924 make_table_decl: "table" . '(' optional_expr_map_tuple_list ')'
  925                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  926                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 684
    '('  shift, and go to state 685


State 483

  297 expression_delete: "delete" . expr
  298                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "explicit"                        shift, and go to state 686
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 687
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 484

  511 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 688


State 485

   89 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 689
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 486

   91 expression_with_alias: "assume" . "name" '=' $@6 expr

    "name"  shift, and go to state 690


State 487

  344 expr_cast: "cast" . '<' $@14 type_declaration_no_options '>' $@15 expr

    '<'  shift, and go to state 691


State 488

  347 expr_cast: "upcast" . '<' $@16 type_declaration_no_options '>' $@17 expr

    '<'  shift, and go to state 692


State 489

  512 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 693


State 490

  310 expression_continue: "continue" .

    $default  reduce using rule 310 (expression_continue)


State 491

  270 expression_any: "pass" . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 694


State 492

  350 expr_cast: "reinterpret" . '<' $@18 type_declaration_no_options '>' $@19 expr

    '<'  shift, and go to state 695


State 493

   62 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 696


State 494

   63 expression_goto: "goto" . "label" "integer constant"
   64                | "goto" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "label"                           shift, and go to state 697
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 698
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 495

   87 expression_unsafe: "unsafe" . expression_block
  543 expr: "unsafe" . '(' expr ')'

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '('                    shift, and go to state 699

    open_block        go to state 301
    expression_block  go to state 700


State 496

  914 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  917              | "fixed_array" . '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 701
    '('  shift, and go to state 702


State 497

  886 make_struct_decl: "default" . '<' $@95 type_declaration_no_options '>' $@96 use_initializer

    '<'  shift, and go to state 703


State 498

  713 basic_type_declaration: "bitfield" .

    $default  reduce using rule 713 (basic_type_declaration)


State 499

  892 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  895                | "tuple" . '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 704
    '('  shift, and go to state 705


State 500

  883 make_struct_decl: "variant" . '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 706


State 501

  249 expr_call_pipe: "generator" . '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  513 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  514     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 707


State 502

  317 expression_yield_no_pipe: "yield" . expr
  318                         | "yield" . "<-" expr
  320 expression_yield: "yield" . expr_pipe
  321                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "<-"                              shift, and go to state 708
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 709
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 710
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 503

  496 expr: "++" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 711
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 504

  497 expr: "--" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 712
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 505

  292 expr_pipe: "$ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 536
    '@'                    shift, and go to state 713

    open_block        go to state 301
    expression_block  go to state 714
    block_or_lambda   go to state 715
    expr_block        go to state 716


State 506

  290 expr_pipe: "@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 536
    '@'                    shift, and go to state 713

    open_block        go to state 301
    expression_block  go to state 714
    block_or_lambda   go to state 715
    expr_block        go to state 717


State 507

  291 expr_pipe: "@@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 536
    '@'                    shift, and go to state 713

    open_block        go to state 301
    expression_block  go to state 714
    block_or_lambda   go to state 715
    expr_block        go to state 718


State 508

  545 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 719


State 509

  546 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 720


State 510

  547 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 721


State 511

  548 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 722


State 512

  549 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 723


State 513

  551 expr_mtag: "$c" . '(' expr ')' '(' ')'
  552          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 724


State 514

  550 expr_mtag: "..." .

    $default  reduce using rule 550 (expr_mtag)


State 515

  869 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  870                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  871                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  872                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  899 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  933 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 725
    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 726


State 516

  873 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  874                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  900 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  934 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 727
    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 728


State 517

  923 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  936 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 729
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 730
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_map_tuple          go to state 731
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table              go to state 732
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 518

  383 expr_numeric_const: "integer constant" .

    $default  reduce using rule 383 (expr_numeric_const)


State 519

  385 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 385 (expr_numeric_const)


State 520

  384 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 384 (expr_numeric_const)


State 521

  386 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 386 (expr_numeric_const)


State 522

  387 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 387 (expr_numeric_const)


State 523

  388 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 388 (expr_numeric_const)


State 524

  389 expr_numeric_const: "double constant" .

    $default  reduce using rule 389 (expr_numeric_const)


State 525

  274 expr_keyword: "keyword" . expr expression_block
  285 expression_keyword: "keyword" . '<' $@8 type_declaration_no_options_list '>' $@9 expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '<'                               shift, and go to state 733
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 734
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 526

  288 expression_keyword: "type function" . '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    '<'  shift, and go to state 735


State 527

   39 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 36 (string_builder_body)

    string_builder_body  go to state 736


State 528

  922 make_table_decl: "begin of code block" . optional_expr_map_tuple_list "end of code block"
  935 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 737
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 279 (optional_expr_map_tuple_list)

    string_builder                go to state 538
    expr_reader                   go to state 539
    optional_expr_map_tuple_list  go to state 738
    expression_keyword            go to state 602
    name_in_namespace             go to state 557
    expr_new                      go to state 559
    expr_cast                     go to state 569
    expr_type_decl                go to state 570
    expr_type_info                go to state 571
    block_or_lambda               go to state 572
    expr_full_block               go to state 573
    expr_numeric_const            go to state 574
    expr_named_call               go to state 577
    expr_method_call              go to state 578
    func_addr_expr                go to state 579
    expr_field                    go to state 580
    expr_call                     go to state 581
    expr                          go to state 730
    expr_mtag                     go to state 583
    basic_type_declaration        go to state 584
    make_decl                     go to state 585
    make_struct_decl              go to state 586
    make_map_tuple                go to state 739
    make_tuple_call               go to state 587
    make_dim_decl                 go to state 588
    expr_map_tuple_list           go to state 740
    make_table_decl               go to state 589
    array_comprehension           go to state 590


State 529

  473 expr: '-' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 741
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 530

  472 expr: '+' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 742
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 531

  510 expr: '*' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 743
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 532

  471 expr: '~' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 744
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 533

  470 expr: '!' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 745
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 534

  898 make_dim_decl: '[' . optional_expr_list ']'
  931 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  932                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 746
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "iterator"                        shift, and go to state 747
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 275 (optional_expr_list)

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 748
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 749
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 535

  500 expr: '(' . expr_list optional_comma ')'
  501     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 751
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 752
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 753
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_fields      go to state 754
    make_struct_single      go to state 755
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 536

  365 block_or_lambda: '$' .

    $default  reduce using rule 365 (block_or_lambda)


State 537

  366 block_or_lambda: '@' .
  367                | '@' . '@'
  436 func_addr_expr: '@' . '@' func_addr_name
  439               | '@' . '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name
  442               | '@' . '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name
  560 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 756

    $default  reduce using rule 366 (block_or_lambda)


State 538

  464 expr: string_builder .

    $default  reduce using rule 464 (expr)


State 539

  463 expr: expr_reader .

    $default  reduce using rule 463 (expr)


State 540

  268 expression_any: expression_label . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 757


State 541

  269 expression_any: expression_goto . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 758


State 542

  250 expression_any: semicolon .

    $default  reduce using rule 250 (expression_any)


State 543

   82 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 759
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 544

   84 expression_if_then_else: expression_if_one_liner . "if" $@4 expr expression_else_one_liner semicolon

    "if"  shift, and go to state 760


State 545

  266 expression_any: expression_if_then_else .

    $default  reduce using rule 266 (expression_any)


State 546

  261 expression_any: expression_for_loop .

    $default  reduce using rule 261 (expression_any)


State 547

  258 expression_any: expression_unsafe .

    $default  reduce using rule 258 (expression_any)


State 548

  257 expression_any: expression_while_loop .

    $default  reduce using rule 257 (expression_any)


State 549

  259 expression_any: expression_with .

    $default  reduce using rule 259 (expression_any)


State 550

  260 expression_any: expression_with_alias .

    $default  reduce using rule 260 (expression_any)


State 551

  245 expression_block: open_block expressions close_block .
  246                 | open_block expressions close_block . "finally" open_block expressions close_block

    "finally"  shift, and go to state 761

    $default  reduce using rule 245 (expression_block)


State 552

  293 expr_pipe: expr_call_pipe .

    $default  reduce using rule 293 (expr_pipe)


State 553

  272 expressions: expressions expression_any .

    $default  reduce using rule 272 (expressions)


State 554

  252 expression_any: expr_keyword .

    $default  reduce using rule 252 (expression_any)


State 555

  248 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  544 expr: expression_keyword .

    '$'  shift, and go to state 536
    '@'  shift, and go to state 713

    '$'       [reduce using rule 544 (expr)]
    '@'       [reduce using rule 544 (expr)]
    $default  reduce using rule 544 (expr)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 763


State 556

  251 expression_any: expr_pipe .

    $default  reduce using rule 251 (expression_any)


State 557

  430 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  431                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  453 expr_call: name_in_namespace . '(' ')'
  454          | name_in_namespace . '(' "uninitialized" ')'
  455          | name_in_namespace . '(' make_struct_single ')'
  456          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  457          | name_in_namespace . '(' expr_list ')'
  461 expr: name_in_namespace .
  542     | name_in_namespace . "name"

    "name"  shift, and go to state 764
    '('     shift, and go to state 765

    "name"    [reduce using rule 461 (expr)]
    '('       [reduce using rule 461 (expr)]
    $default  reduce using rule 461 (expr)


State 558

  255 expression_any: expression_delete . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 766


State 559

  535 expr: expr_new .

    $default  reduce using rule 535 (expr)


State 560

   80 expression_if_one_liner: expression_break .
  262 expression_any: expression_break . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 80 (expression_if_one_liner)

    semicolon  go to state 767


State 561

   81 expression_if_one_liner: expression_continue .
  263 expression_any: expression_continue . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 81 (expression_if_one_liner)

    semicolon  go to state 768


State 562

   78 expression_if_one_liner: expression_return_no_pipe .
  314 expression_return: expression_return_no_pipe . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 78 (expression_if_one_liner)

    semicolon  go to state 769


State 563

  264 expression_any: expression_return .

    $default  reduce using rule 264 (expression_any)


State 564

   79 expression_if_one_liner: expression_yield_no_pipe .
  319 expression_yield: expression_yield_no_pipe . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 79 (expression_if_one_liner)

    semicolon  go to state 770


State 565

  265 expression_any: expression_yield .

    $default  reduce using rule 265 (expression_any)


State 566

  267 expression_any: expression_try_catch .

    $default  reduce using rule 267 (expression_any)


State 567

  340 expression_let: kwd_let . optional_in_scope let_variable_declaration
  341               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 771

    $default  reduce using rule 329 (optional_in_scope)

    optional_in_scope  go to state 772


State 568

  256 expression_any: expression_let .

    $default  reduce using rule 256 (expression_any)


State 569

  534 expr: expr_cast .

    $default  reduce using rule 534 (expr)


State 570

  533 expr: expr_type_decl .

    $default  reduce using rule 533 (expr)


State 571

  532 expr: expr_type_info .

    $default  reduce using rule 532 (expr)


State 572

  380 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 16

    $default  reduce using rule 131 (optional_annotation_list)

    optional_annotation_list  go to state 773


State 573

  538 expr: expr_full_block .

    $default  reduce using rule 538 (expr)


State 574

  462 expr: expr_numeric_const .

    $default  reduce using rule 462 (expr)


State 575

  254 expression_any: expr_assign . semicolon
  289 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 774
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 775


State 576

  253 expression_any: expr_assign_pipe .

    $default  reduce using rule 253 (expression_any)


State 577

  537 expr: expr_named_call .

    $default  reduce using rule 537 (expr)


State 578

  536 expr: expr_method_call .

    $default  reduce using rule 536 (expr)


State 579

  508 expr: func_addr_expr .

    $default  reduce using rule 508 (expr)


State 580

  468 expr: expr_field .

    $default  reduce using rule 468 (expr)


State 581

  509 expr: expr_call .

    $default  reduce using rule 509 (expr)


State 582

   77 expression_if_one_liner: expr .
  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  390 expr_assign: expr .
  391            | expr . '=' expr
  392            | expr . "<-" expr
  393            | expr . ":=" expr
  394            | expr . "&=" expr
  395            | expr . "|=" expr
  396            | expr . "^=" expr
  397            | expr . "&&=" expr
  398            | expr . "||=" expr
  399            | expr . "^^=" expr
  400            | expr . "+=" expr
  401            | expr . "-=" expr
  402            | expr . "*=" expr
  403            | expr . "/=" expr
  404            | expr . "%=" expr
  405            | expr . "<<=" expr
  406            | expr . ">>=" expr
  407            | expr . "<<<=" expr
  408            | expr . ">>>=" expr
  413 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  414                 | expr . "<-" expr_assign_pipe_right
  415                 | expr . "&=" expr_assign_pipe_right
  416                 | expr . "|=" expr_assign_pipe_right
  417                 | expr . "^=" expr_assign_pipe_right
  418                 | expr . "&&=" expr_assign_pipe_right
  419                 | expr . "||=" expr_assign_pipe_right
  420                 | expr . "^^=" expr_assign_pipe_right
  421                 | expr . "+=" expr_assign_pipe_right
  422                 | expr . "-=" expr_assign_pipe_right
  423                 | expr . "*=" expr_assign_pipe_right
  424                 | expr . "/=" expr_assign_pipe_right
  425                 | expr . "%=" expr_assign_pipe_right
  426                 | expr . "<<=" expr_assign_pipe_right
  427                 | expr . ">>=" expr_assign_pipe_right
  428                 | expr . "<<<=" expr_assign_pipe_right
  429                 | expr . ">>>=" expr_assign_pipe_right
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 776
    "as"    shift, and go to state 777
    "+="    shift, and go to state 778
    "-="    shift, and go to state 779
    "/="    shift, and go to state 780
    "*="    shift, and go to state 781
    "%="    shift, and go to state 782
    "&="    shift, and go to state 783
    "|="    shift, and go to state 784
    "^="    shift, and go to state 785
    "<<"    shift, and go to state 786
    ">>"    shift, and go to state 787
    "++"    shift, and go to state 788
    "--"    shift, and go to state 789
    "<="    shift, and go to state 790
    "<<="   shift, and go to state 791
    ">>="   shift, and go to state 792
    ">="    shift, and go to state 793
    "=="    shift, and go to state 794
    "!="    shift, and go to state 795
    "->"    shift, and go to state 796
    "<-"    shift, and go to state 797
    "??"    shift, and go to state 798
    "?."    shift, and go to state 799
    "?["    shift, and go to state 800
    "<|"    shift, and go to state 801
    "|>"    shift, and go to state 802
    ":="    shift, and go to state 803
    "<<<"   shift, and go to state 804
    ">>>"   shift, and go to state 805
    "<<<="  shift, and go to state 806
    ">>>="  shift, and go to state 807
    "&&"    shift, and go to state 808
    "||"    shift, and go to state 809
    "^^"    shift, and go to state 810
    "&&="   shift, and go to state 811
    "||="   shift, and go to state 812
    "^^="   shift, and go to state 813
    ".."    shift, and go to state 814
    '='     shift, and go to state 815
    '?'     shift, and go to state 816
    '|'     shift, and go to state 817
    '^'     shift, and go to state 818
    '&'     shift, and go to state 819
    '<'     shift, and go to state 820
    '>'     shift, and go to state 821
    '-'     shift, and go to state 822
    '+'     shift, and go to state 823
    '*'     shift, and go to state 824
    '/'     shift, and go to state 825
    '%'     shift, and go to state 826
    '.'     shift, and go to state 827
    '['     shift, and go to state 828
    '$'     shift, and go to state 536
    '@'     shift, and go to state 713

    "if"      reduce using rule 77 (expression_if_one_liner)
    $default  reduce using rule 390 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 583

  469 expr: expr_mtag .

    $default  reduce using rule 469 (expr)


State 584

  458 expr_call: basic_type_declaration . '(' ')'
  459          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 830


State 585

  465 expr: make_decl .

    $default  reduce using rule 465 (expr)


State 586

  829 make_decl: make_struct_decl .

    $default  reduce using rule 829 (make_decl)


State 587

  833 make_decl: make_tuple_call .

    $default  reduce using rule 833 (make_decl)


State 588

  830 make_decl: make_dim_decl .

    $default  reduce using rule 830 (make_decl)


State 589

  831 make_decl: make_table_decl .

    $default  reduce using rule 831 (make_decl)


State 590

  832 make_decl: array_comprehension .

    $default  reduce using rule 832 (make_decl)


State 591

  664 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 . enum_list $@45 close_block

    $default  reduce using rule 641 (enum_list)

    enum_list  go to state 831


State 592

  643 enum_list: enum_list "name" . semicolon
  644          | enum_list "name" . '=' expr semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 832

    semicolon  go to state 833


State 593

  642 enum_list: enum_list semicolon .

    $default  reduce using rule 642 (enum_list)


State 594

  661 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 834


State 595

  666 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 666 (optional_structure_parent)


State 596

  576 struct_variable_declaration_list: struct_variable_declaration_list . semicolon
  578                                 | struct_variable_declaration_list . $@35 structure_variable_declaration semicolon
  580                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  582                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block
  583                                 | struct_variable_declaration_list . '[' annotation_list ']' semicolon
  678 optional_struct_variable_declaration_list: open_block struct_variable_declaration_list . close_block

    "close scope"        shift, and go to state 146
    "end of line"        shift, and go to state 13
    "end of code block"  shift, and go to state 147
    "end of expression"  shift, and go to state 14
    '['                  shift, and go to state 835

    "def"     reduce using rule 131 (optional_annotation_list)
    $default  reduce using rule 577 ($@35)

    semicolon                 go to state 836
    optional_annotation_list  go to state 837
    close_block               go to state 838
    $@35                      go to state 839


State 597

  632 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 632 (global_variable_declaration_list)


State 598

  562 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 562 (optional_field_annotation)


State 599

  543 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 699


State 600

  513 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  514     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 840


State 601

  285 expression_keyword: "keyword" . '<' $@8 type_declaration_no_options_list '>' $@9 expr

    '<'  shift, and go to state 733


State 602

  544 expr: expression_keyword .

    $default  reduce using rule 544 (expr)


State 603

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  620 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 841


State 604

  621 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 621 (let_variable_name_with_pos_list)


State 605

  622 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  623                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 842

    $default  reduce using rule 622 (let_variable_name_with_pos_list)


State 606

  624 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . semicolon
  625                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  626                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 428
    "implicit"           shift, and go to state 429
    "explicit"           shift, and go to state 430
    "=="                 shift, and go to state 431
    "<-"                 shift, and go to state 607
    "??"                 shift, and go to state 432
    ":="                 shift, and go to state 608
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 609
    '?'                  shift, and go to state 433
    '&'                  shift, and go to state 434
    '-'                  shift, and go to state 435
    '['                  shift, and go to state 436
    '#'                  shift, and go to state 437

    semicolon              go to state 843
    copy_or_move_or_clone  go to state 844
    dim_list               go to state 438


State 607

  615 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 615 (copy_or_move_or_clone)


State 608

  616 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 616 (copy_or_move_or_clone)


State 609

  614 copy_or_move_or_clone: '=' .

    $default  reduce using rule 614 (copy_or_move_or_clone)


State 610

  627 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr semicolon
  628                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 845
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 846
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 611

  754 type_declaration_no_options: "type" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 847


State 612

  777 type_declaration_no_options: "array" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 848


State 613

  780 type_declaration_no_options: "table" '<' $@57 . table_type_pair '>' $@58

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    table_type_pair              go to state 849
    type_declaration_no_options  go to state 373
    type_declaration             go to state 850


State 614

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  755 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 851


State 615

  783 type_declaration_no_options: "iterator" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 852


State 616

  773 type_declaration_no_options: "smart_ptr" '<' $@53 . type_declaration '>' $@54

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 853


State 617

  724 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 854


State 618

  739 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' . $@48 bitfield_bits '>' $@49

    $default  reduce using rule 737 ($@48)

    $@48  go to state 855


State 619

  787 type_declaration_no_options: "block" '<' $@61 . type_declaration '>' $@62

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 856


State 620

  790 type_declaration_no_options: "block" '<' $@63 . optional_function_argument_list optional_function_type '>' $@64

    '('  shift, and go to state 299

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 857


State 621

  794 type_declaration_no_options: "function" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 858


State 622

  797 type_declaration_no_options: "function" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 299

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 859


State 623

  801 type_declaration_no_options: "lambda" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 860


State 624

  804 type_declaration_no_options: "lambda" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 299

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 861


State 625

  807 type_declaration_no_options: "tuple" '<' $@73 . tuple_type_list '>' $@74

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 642
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    tuple_type                   go to state 862
    tuple_type_list              go to state 863
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 647


State 626

  810 type_declaration_no_options: "variant" '<' $@75 . variant_type_list '>' $@76

    "name"  shift, and go to state 649

    variant_type       go to state 864
    variant_type_list  go to state 865


State 627

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  725 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 866


State 628

  758 type_declaration_no_options: '$' name_in_namespace '<' . $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 757 ($@52)

    $@52  go to state 867


State 629

  756 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 275 (optional_expr_list)

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 868
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 749
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 630

  768 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 768 (type_declaration_no_options)


State 631

  769 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 769 (type_declaration_no_options)


State 632

  762 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 762 (type_declaration_no_options)


State 633

  764 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 764 (type_declaration_no_options)


State 634

  759 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 869


State 635

  767 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 767 (type_declaration_no_options)


State 636

  751 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 751 (type_declaration_no_options)


State 637

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  744 dim_list: '[' expr . ']'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ']'    shift, and go to state 870


State 638

  745 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 871
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 639

  813 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 813 (type_declaration)


State 640

  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"
  812 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    $default  reduce using rule 812 (type_declaration)

    dim_list  go to state 438


State 641

  729 bitfield_alias_bits: bitfield_alias_bits . semicolon
  730                    | bitfield_alias_bits . "name" semicolon
  731                    | bitfield_alias_bits . "name" '=' expr semicolon
  828 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits . $@88 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 872
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 827 ($@88)

    semicolon  go to state 873
    $@88       go to state 874


State 642

  294 name_in_namespace: "name" .
  295                  | "name" . "::" "name"
  593 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 104
    ':'   shift, and go to state 875

    $default  reduce using rule 294 (name_in_namespace)


State 643

  740 c_or_s: ',' .

    $default  reduce using rule 740 (c_or_s)


State 644

  741 c_or_s: semicolon .

    $default  reduce using rule 741 (c_or_s)


State 645

  598 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643

    semicolon  go to state 644
    c_or_s     go to state 876


State 646

  597 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 597 (tuple_alias_type_list)


State 647

  592 tuple_type: type_declaration .
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 592 (tuple_type)


State 648

  818 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 877


State 649

  599 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 878


State 650

  604 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643

    semicolon  go to state 644
    c_or_s     go to state 879


State 651

  603 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 603 (variant_alias_type_list)


State 652

  823 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 880


State 653

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  586 function_argument_declaration_type: "$a" '(' expr . ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 881


State 654

  683 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 882


State 655

  682 variable_name_with_pos_list: "name" .
  684                            | "name" . "aka" "name"

    "aka"  shift, and go to state 883

    $default  reduce using rule 682 (variable_name_with_pos_list)


State 656

  584 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type .

    $default  reduce using rule 584 (function_argument_declaration_no_type)


State 657

  585 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type .

    $default  reduce using rule 585 (function_argument_declaration_type)


State 658

  607 variable_declaration_no_type: variable_name_with_pos_list .
  608                             | variable_name_with_pos_list . '&'
  609                             | variable_name_with_pos_list . copy_or_move expr
  610 variable_declaration_type: variable_name_with_pos_list . ':' type_declaration
  611                          | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  685 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  686                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 884
    ','   shift, and go to state 885
    '='   shift, and go to state 886
    ':'   shift, and go to state 887
    '&'   shift, and go to state 888

    $default  reduce using rule 607 (variable_declaration_no_type)

    copy_or_move  go to state 889


State 659

  589 function_argument_list: function_argument_declaration_no_type semicolon function_argument_list .

    $default  reduce using rule 589 (function_argument_list)


State 660

  591 function_argument_list: function_argument_declaration_type ',' function_argument_list .

    $default  reduce using rule 591 (function_argument_list)


State 661

  590 function_argument_list: function_argument_declaration_type semicolon function_argument_list .

    $default  reduce using rule 590 (function_argument_list)


State 662

  877 make_struct_decl: "struct" '<' . $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 875 ($@89)

    $@89  go to state 890


State 663

  880 make_struct_decl: "class" '<' . $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 878 ($@91)

    $@91  go to state 891


State 664

   88 expression_while_loop: "while" expr . expression_block
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 776
    "as"                   shift, and go to state 777
    "<<"                   shift, and go to state 786
    ">>"                   shift, and go to state 787
    "++"                   shift, and go to state 788
    "--"                   shift, and go to state 789
    "<="                   shift, and go to state 790
    ">="                   shift, and go to state 793
    "=="                   shift, and go to state 794
    "!="                   shift, and go to state 795
    "->"                   shift, and go to state 796
    "??"                   shift, and go to state 798
    "?."                   shift, and go to state 799
    "?["                   shift, and go to state 800
    "<|"                   shift, and go to state 801
    "|>"                   shift, and go to state 802
    "<<<"                  shift, and go to state 804
    ">>>"                  shift, and go to state 805
    "&&"                   shift, and go to state 808
    "||"                   shift, and go to state 809
    "^^"                   shift, and go to state 810
    ".."                   shift, and go to state 814
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 816
    '|'                    shift, and go to state 817
    '^'                    shift, and go to state 818
    '&'                    shift, and go to state 819
    '<'                    shift, and go to state 820
    '>'                    shift, and go to state 821
    '-'                    shift, and go to state 822
    '+'                    shift, and go to state 823
    '*'                    shift, and go to state 824
    '/'                    shift, and go to state 825
    '%'                    shift, and go to state 826
    '.'                    shift, and go to state 827
    '['                    shift, and go to state 828

    open_block        go to state 301
    expression_block  go to state 892


State 665

   86 expression_for_loop: "for" $@5 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_name_with_pos_list  go to state 893


State 666

  301 new_type_declaration: '<' . $@12 type_declaration '>' $@13

    $default  reduce using rule 299 ($@12)

    $@12  go to state 894


State 667

  303 expr_new: "new" new_type_declaration .
  304         | "new" new_type_declaration . '(' use_initializer ')'
  305         | "new" new_type_declaration . '(' expr_list ')'
  306         | "new" new_type_declaration . '(' make_struct_single ')'
  307         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 895

    '('       [reduce using rule 303 (expr_new)]
    $default  reduce using rule 303 (expr_new)


State 668

  302 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 302 (new_type_declaration)


State 669

  308 expr_new: "new" make_decl .

    $default  reduce using rule 308 (expr_new)


State 670

  354 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  355               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  356               | "typeinfo" '(' . name_in_namespace '<' "name" c_or_s "name" '>' expr ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 896


State 671

  357 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  358               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  359               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 897
    '('  shift, and go to state 898


State 672

  353 expr_type_decl: "type" '<' . $@20 type_declaration '>' $@21

    $default  reduce using rule 351 ($@20)

    $@20  go to state 899


State 673

  903 make_dim_decl: "array" "struct" . '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 900


State 674

  906 make_dim_decl: "array" "tuple" . '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 901


State 675

  909 make_dim_decl: "array" "variant" . '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'

    '<'  shift, and go to state 902


State 676

  913 make_dim_decl: "array" '<' . $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    $default  reduce using rule 911 ($@105)

    $@105  go to state 903


State 677

  910 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 904
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 678

  313 expression_return_no_pipe: "return" "<-" . expr_list
  316 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 905
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 906
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 682
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 679

  315 expression_return: "return" expr_pipe .

    $default  reduce using rule 315 (expression_return)


State 680

  312 expression_return_no_pipe: "return" expr_list .
  361 expr_list: expr_list . ',' expr

    ','  shift, and go to state 907

    $default  reduce using rule 312 (expression_return_no_pipe)


State 681

  289 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 774


State 682

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_list: expr .
  390 expr_assign: expr .
  391            | expr . '=' expr
  392            | expr . "<-" expr
  393            | expr . ":=" expr
  394            | expr . "&=" expr
  395            | expr . "|=" expr
  396            | expr . "^=" expr
  397            | expr . "&&=" expr
  398            | expr . "||=" expr
  399            | expr . "^^=" expr
  400            | expr . "+=" expr
  401            | expr . "-=" expr
  402            | expr . "*=" expr
  403            | expr . "/=" expr
  404            | expr . "%=" expr
  405            | expr . "<<=" expr
  406            | expr . ">>=" expr
  407            | expr . "<<<=" expr
  408            | expr . ">>>=" expr
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 776
    "as"    shift, and go to state 777
    "+="    shift, and go to state 908
    "-="    shift, and go to state 909
    "/="    shift, and go to state 910
    "*="    shift, and go to state 911
    "%="    shift, and go to state 912
    "&="    shift, and go to state 913
    "|="    shift, and go to state 914
    "^="    shift, and go to state 915
    "<<"    shift, and go to state 786
    ">>"    shift, and go to state 787
    "++"    shift, and go to state 788
    "--"    shift, and go to state 789
    "<="    shift, and go to state 790
    "<<="   shift, and go to state 916
    ">>="   shift, and go to state 917
    ">="    shift, and go to state 793
    "=="    shift, and go to state 794
    "!="    shift, and go to state 795
    "->"    shift, and go to state 796
    "<-"    shift, and go to state 918
    "??"    shift, and go to state 798
    "?."    shift, and go to state 799
    "?["    shift, and go to state 800
    "<|"    shift, and go to state 801
    "|>"    shift, and go to state 802
    ":="    shift, and go to state 803
    "<<<"   shift, and go to state 804
    ">>>"   shift, and go to state 805
    "<<<="  shift, and go to state 919
    ">>>="  shift, and go to state 920
    "&&"    shift, and go to state 808
    "||"    shift, and go to state 809
    "^^"    shift, and go to state 810
    "&&="   shift, and go to state 921
    "||="   shift, and go to state 922
    "^^="   shift, and go to state 923
    ".."    shift, and go to state 814
    '='     shift, and go to state 924
    '?'     shift, and go to state 816
    '|'     shift, and go to state 817
    '^'     shift, and go to state 818
    '&'     shift, and go to state 819
    '<'     shift, and go to state 820
    '>'     shift, and go to state 821
    '-'     shift, and go to state 822
    '+'     shift, and go to state 823
    '*'     shift, and go to state 824
    '/'     shift, and go to state 825
    '%'     shift, and go to state 826
    '.'     shift, and go to state 827
    '['     shift, and go to state 828
    '$'     shift, and go to state 536
    '@'     shift, and go to state 713

    " <|"     reduce using rule 390 (expr_assign)
    $default  reduce using rule 360 (expr_list)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 683

  322 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 925


State 684

  925 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  926                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 926


State 685

  924 make_table_decl: "table" '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 279 (optional_expr_map_tuple_list)

    string_builder                go to state 538
    expr_reader                   go to state 539
    optional_expr_map_tuple_list  go to state 927
    expression_keyword            go to state 602
    name_in_namespace             go to state 557
    expr_new                      go to state 559
    expr_cast                     go to state 569
    expr_type_decl                go to state 570
    expr_type_info                go to state 571
    block_or_lambda               go to state 572
    expr_full_block               go to state 573
    expr_numeric_const            go to state 574
    expr_named_call               go to state 577
    expr_method_call              go to state 578
    func_addr_expr                go to state 579
    expr_field                    go to state 580
    expr_call                     go to state 581
    expr                          go to state 730
    expr_mtag                     go to state 583
    basic_type_declaration        go to state 584
    make_decl                     go to state 585
    make_struct_decl              go to state 586
    make_map_tuple                go to state 739
    make_tuple_call               go to state 587
    make_dim_decl                 go to state 588
    expr_map_tuple_list           go to state 740
    make_table_decl               go to state 589
    array_comprehension           go to state 590


State 686

  298 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 928
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 687

  297 expression_delete: "delete" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 297 (expression_delete)


State 688

  511 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 929
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 689

   89 expression_with: "with" expr . expression_block
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 776
    "as"                   shift, and go to state 777
    "<<"                   shift, and go to state 786
    ">>"                   shift, and go to state 787
    "++"                   shift, and go to state 788
    "--"                   shift, and go to state 789
    "<="                   shift, and go to state 790
    ">="                   shift, and go to state 793
    "=="                   shift, and go to state 794
    "!="                   shift, and go to state 795
    "->"                   shift, and go to state 796
    "??"                   shift, and go to state 798
    "?."                   shift, and go to state 799
    "?["                   shift, and go to state 800
    "<|"                   shift, and go to state 801
    "|>"                   shift, and go to state 802
    "<<<"                  shift, and go to state 804
    ">>>"                  shift, and go to state 805
    "&&"                   shift, and go to state 808
    "||"                   shift, and go to state 809
    "^^"                   shift, and go to state 810
    ".."                   shift, and go to state 814
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 816
    '|'                    shift, and go to state 817
    '^'                    shift, and go to state 818
    '&'                    shift, and go to state 819
    '<'                    shift, and go to state 820
    '>'                    shift, and go to state 821
    '-'                    shift, and go to state 822
    '+'                    shift, and go to state 823
    '*'                    shift, and go to state 824
    '/'                    shift, and go to state 825
    '%'                    shift, and go to state 826
    '.'                    shift, and go to state 827
    '['                    shift, and go to state 828

    open_block        go to state 301
    expression_block  go to state 930


State 690

   91 expression_with_alias: "assume" "name" . '=' $@6 expr

    '='  shift, and go to state 931


State 691

  344 expr_cast: "cast" '<' . $@14 type_declaration_no_options '>' $@15 expr

    $default  reduce using rule 342 ($@14)

    $@14  go to state 932


State 692

  347 expr_cast: "upcast" '<' . $@16 type_declaration_no_options '>' $@17 expr

    $default  reduce using rule 345 ($@16)

    $@16  go to state 933


State 693

  512 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 934
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 694

  270 expression_any: "pass" semicolon .

    $default  reduce using rule 270 (expression_any)


State 695

  350 expr_cast: "reinterpret" '<' . $@18 type_declaration_no_options '>' $@19 expr

    $default  reduce using rule 348 ($@18)

    $@18  go to state 935


State 696

   62 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 936


State 697

   63 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 937


State 698

   64 expression_goto: "goto" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 64 (expression_goto)


State 699

  543 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 938
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 700

   87 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 87 (expression_unsafe)


State 701

  917 make_dim_decl: "fixed_array" '<' . $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 915 ($@107)

    $@107  go to state 939


State 702

  914 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 940
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 703

  886 make_struct_decl: "default" '<' . $@95 type_declaration_no_options '>' $@96 use_initializer

    $default  reduce using rule 884 ($@95)

    $@95  go to state 941


State 704

  895 make_tuple_call: "tuple" '<' . $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 893 ($@97)

    $@97  go to state 942


State 705

  892 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 943
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 706

  883 make_struct_decl: "variant" '<' . $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 881 ($@93)

    $@93  go to state 944


State 707

  249 expr_call_pipe: "generator" '<' . type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  513 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  514     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 945


State 708

  318 expression_yield_no_pipe: "yield" "<-" . expr
  321 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 946
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 947
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 709

  320 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 320 (expression_yield)


State 710

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  317 expression_yield_no_pipe: "yield" expr .
  390 expr_assign: expr .
  391            | expr . '=' expr
  392            | expr . "<-" expr
  393            | expr . ":=" expr
  394            | expr . "&=" expr
  395            | expr . "|=" expr
  396            | expr . "^=" expr
  397            | expr . "&&=" expr
  398            | expr . "||=" expr
  399            | expr . "^^=" expr
  400            | expr . "+=" expr
  401            | expr . "-=" expr
  402            | expr . "*=" expr
  403            | expr . "/=" expr
  404            | expr . "%=" expr
  405            | expr . "<<=" expr
  406            | expr . ">>=" expr
  407            | expr . "<<<=" expr
  408            | expr . ">>>=" expr
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 776
    "as"    shift, and go to state 777
    "+="    shift, and go to state 908
    "-="    shift, and go to state 909
    "/="    shift, and go to state 910
    "*="    shift, and go to state 911
    "%="    shift, and go to state 912
    "&="    shift, and go to state 913
    "|="    shift, and go to state 914
    "^="    shift, and go to state 915
    "<<"    shift, and go to state 786
    ">>"    shift, and go to state 787
    "++"    shift, and go to state 788
    "--"    shift, and go to state 789
    "<="    shift, and go to state 790
    "<<="   shift, and go to state 916
    ">>="   shift, and go to state 917
    ">="    shift, and go to state 793
    "=="    shift, and go to state 794
    "!="    shift, and go to state 795
    "->"    shift, and go to state 796
    "<-"    shift, and go to state 918
    "??"    shift, and go to state 798
    "?."    shift, and go to state 799
    "?["    shift, and go to state 800
    "<|"    shift, and go to state 801
    "|>"    shift, and go to state 802
    ":="    shift, and go to state 803
    "<<<"   shift, and go to state 804
    ">>>"   shift, and go to state 805
    "<<<="  shift, and go to state 919
    ">>>="  shift, and go to state 920
    "&&"    shift, and go to state 808
    "||"    shift, and go to state 809
    "^^"    shift, and go to state 810
    "&&="   shift, and go to state 921
    "||="   shift, and go to state 922
    "^^="   shift, and go to state 923
    ".."    shift, and go to state 814
    '='     shift, and go to state 924
    '?'     shift, and go to state 816
    '|'     shift, and go to state 817
    '^'     shift, and go to state 818
    '&'     shift, and go to state 819
    '<'     shift, and go to state 820
    '>'     shift, and go to state 821
    '-'     shift, and go to state 822
    '+'     shift, and go to state 823
    '*'     shift, and go to state 824
    '/'     shift, and go to state 825
    '%'     shift, and go to state 826
    '.'     shift, and go to state 827
    '['     shift, and go to state 828
    '$'     shift, and go to state 536
    '@'     shift, and go to state 713

    " <|"     reduce using rule 390 (expr_assign)
    $default  reduce using rule 317 (expression_yield_no_pipe)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 711

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  496     | "++" expr .
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 776
    "as"  shift, and go to state 777
    "++"  shift, and go to state 788
    "--"  shift, and go to state 789
    "->"  shift, and go to state 796
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    "<|"  shift, and go to state 801
    "|>"  shift, and go to state 802
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 496 (expr)


State 712

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  497     | "--" expr .
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 776
    "as"  shift, and go to state 777
    "++"  shift, and go to state 788
    "--"  shift, and go to state 789
    "->"  shift, and go to state 796
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    "<|"  shift, and go to state 801
    "|>"  shift, and go to state 802
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 497 (expr)


State 713

  366 block_or_lambda: '@' .
  367                | '@' . '@'

    '@'  shift, and go to state 948

    $default  reduce using rule 366 (block_or_lambda)


State 714

  378 expr_block: expression_block .

    $default  reduce using rule 378 (expr_block)


State 715

  379 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 16

    $default  reduce using rule 131 (optional_annotation_list)

    optional_annotation_list  go to state 949


State 716

  292 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 292 (expr_pipe)


State 717

  290 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 290 (expr_pipe)


State 718

  291 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 291 (expr_pipe)


State 719

  545 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 950
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 720

  546 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 951
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 721

  547 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 952
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 722

  548 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 953
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 723

  549 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 954
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 724

  551 expr_mtag: "$c" '(' . expr ')' '(' ')'
  552          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 955
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 725

  933 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_name_with_pos_list  go to state 956


State 726

  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"
  869 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  870                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  871                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  872                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  899 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "const"                           shift, and go to state 428
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "where"                           shift, and go to state 957
    "reinterpret"                     shift, and go to state 492
    "implicit"                        shift, and go to state 429
    "explicit"                        shift, and go to state 430
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "=="                              shift, and go to state 431
    "??"                              shift, and go to state 432
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 751
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 752
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '?'                               shift, and go to state 433
    '&'                               shift, and go to state 434
    '-'                               shift, and go to state 958
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 959
    '('                               shift, and go to state 960
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537
    '#'                               shift, and go to state 437

    $default  reduce using rule 853 (optional_block)

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 961
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    dim_list                go to state 438
    make_decl               go to state 585
    make_struct_fields      go to state 962
    make_struct_dim         go to state 963
    optional_block          go to state 964
    make_struct_decl        go to state 586
    make_tuple              go to state 965
    make_tuple_call         go to state 587
    make_dim                go to state 966
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 727

  934 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_name_with_pos_list  go to state 967


State 728

  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"
  873 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  874                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  900 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "const"                           shift, and go to state 428
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "implicit"                        shift, and go to state 429
    "explicit"                        shift, and go to state 430
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "=="                              shift, and go to state 431
    "??"                              shift, and go to state 432
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 751
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 752
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '?'                               shift, and go to state 433
    '&'                               shift, and go to state 434
    '-'                               shift, and go to state 958
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 959
    '('                               shift, and go to state 968
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537
    '#'                               shift, and go to state 437

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 961
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    dim_list                go to state 438
    make_decl               go to state 585
    make_struct_fields      go to state 962
    make_struct_dim         go to state 969
    make_struct_decl        go to state 586
    make_tuple              go to state 965
    make_tuple_call         go to state 587
    make_dim                go to state 970
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 729

  936 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_name_with_pos_list  go to state 971


State 730

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  890 make_map_tuple: expr . "=>" expr
  891               | expr .

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "=>"   shift, and go to state 972
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 891 (make_map_tuple)


State 731

  918 make_table: make_map_tuple .

    $default  reduce using rule 918 (make_table)


State 732

  919 make_table: make_table . "end of expression" make_map_tuple
  923 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 973
    "end of expression"  shift, and go to state 974
    ";}}"                shift, and go to state 975

    optional_trailing_semicolon_cur_cur  go to state 976


State 733

  285 expression_keyword: "keyword" '<' . $@8 type_declaration_no_options_list '>' $@9 expr

    $default  reduce using rule 283 ($@8)

    $@8  go to state 977


State 734

  274 expr_keyword: "keyword" expr . expression_block
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 776
    "as"                   shift, and go to state 777
    "<<"                   shift, and go to state 786
    ">>"                   shift, and go to state 787
    "++"                   shift, and go to state 788
    "--"                   shift, and go to state 789
    "<="                   shift, and go to state 790
    ">="                   shift, and go to state 793
    "=="                   shift, and go to state 794
    "!="                   shift, and go to state 795
    "->"                   shift, and go to state 796
    "??"                   shift, and go to state 798
    "?."                   shift, and go to state 799
    "?["                   shift, and go to state 800
    "<|"                   shift, and go to state 801
    "|>"                   shift, and go to state 802
    "<<<"                  shift, and go to state 804
    ">>>"                  shift, and go to state 805
    "&&"                   shift, and go to state 808
    "||"                   shift, and go to state 809
    "^^"                   shift, and go to state 810
    ".."                   shift, and go to state 814
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 816
    '|'                    shift, and go to state 817
    '^'                    shift, and go to state 818
    '&'                    shift, and go to state 819
    '<'                    shift, and go to state 820
    '>'                    shift, and go to state 821
    '-'                    shift, and go to state 822
    '+'                    shift, and go to state 823
    '*'                    shift, and go to state 824
    '/'                    shift, and go to state 825
    '%'                    shift, and go to state 826
    '.'                    shift, and go to state 827
    '['                    shift, and go to state 828

    open_block        go to state 301
    expression_block  go to state 978


State 735

  288 expression_keyword: "type function" '<' . $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    $default  reduce using rule 286 ($@10)

    $@10  go to state 979


State 736

   37 string_builder_body: string_builder_body . character_sequence
   38                    | string_builder_body . "{" expr optional_format_string "}"
   39 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 172
    STRING_CHARACTER_ESC  shift, and go to state 173
    "end of the string"   shift, and go to state 980
    "{"                   shift, and go to state 981

    character_sequence  go to state 982


State 737

  935 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_name_with_pos_list  go to state 983


State 738

  922 make_table_decl: "begin of code block" optional_expr_map_tuple_list . "end of code block"

    "end of code block"  shift, and go to state 984


State 739

  920 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 920 (expr_map_tuple_list)


State 740

  280 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  921 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 985

    $default  reduce using rule 929 (optional_comma)

    optional_comma  go to state 986


State 741

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  473 expr: '-' expr .
  474     | expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 776
    "as"  shift, and go to state 777
    "++"  shift, and go to state 788
    "--"  shift, and go to state 789
    "->"  shift, and go to state 796
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    "<|"  shift, and go to state 801
    "|>"  shift, and go to state 802
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 473 (expr)


State 742

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  472 expr: '+' expr .
  474     | expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 776
    "as"  shift, and go to state 777
    "++"  shift, and go to state 788
    "--"  shift, and go to state 789
    "->"  shift, and go to state 796
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    "<|"  shift, and go to state 801
    "|>"  shift, and go to state 802
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 472 (expr)


State 743

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  510     | '*' expr .
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 510 (expr)


State 744

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  471 expr: '~' expr .
  474     | expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 776
    "as"  shift, and go to state 777
    "++"  shift, and go to state 788
    "--"  shift, and go to state 789
    "->"  shift, and go to state 796
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    "<|"  shift, and go to state 801
    "|>"  shift, and go to state 802
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 471 (expr)


State 745

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  470 expr: '!' expr .
  474     | expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 776
    "as"  shift, and go to state 777
    "++"  shift, and go to state 788
    "--"  shift, and go to state 789
    "->"  shift, and go to state 796
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    "<|"  shift, and go to state 801
    "|>"  shift, and go to state 802
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 470 (expr)


State 746

  931 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_name_with_pos_list  go to state 987


State 747

  932 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 988


State 748

  898 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 989


State 749

  276 optional_expr_list: expr_list . optional_comma
  361 expr_list: expr_list . ',' expr

    ','  shift, and go to state 990

    ','       [reduce using rule 929 (optional_comma)]
    $default  reduce using rule 929 (optional_comma)

    optional_comma  go to state 991


State 750

  360 expr_list: expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 360 (expr_list)


State 751

  838 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  839                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 992


State 752

  294 name_in_namespace: "name" .
  295                  | "name" . "::" "name"
  834 make_struct_fields: "name" . copy_or_move expr
  835                   | "name" . ":=" expr

    "<-"  shift, and go to state 884
    ":="  shift, and go to state 993
    "::"  shift, and go to state 104
    '='   shift, and go to state 886

    $default  reduce using rule 294 (name_in_namespace)

    copy_or_move  go to state 994


State 753

  361 expr_list: expr_list . ',' expr
  500 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 990

    $default  reduce using rule 929 (optional_comma)

    optional_comma  go to state 995


State 754

  836 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  837                   | make_struct_fields . ',' "name" ":=" expr
  840                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  844 make_struct_single: make_struct_fields . optional_comma

    ','  shift, and go to state 996

    $default  reduce using rule 929 (optional_comma)

    optional_comma  go to state 997


State 755

  501 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 998


State 756

  367 block_or_lambda: '@' '@' .
  436 func_addr_expr: '@' '@' . func_addr_name
  439               | '@' '@' . '<' $@23 type_declaration_no_options '>' $@24 func_addr_name
  442               | '@' '@' . '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name
  560 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 999
    "$c"    shift, and go to state 1000
    "name"  shift, and go to state 63
    '<'     shift, and go to state 1001

    $default  reduce using rule 367 (block_or_lambda)

    name_in_namespace  go to state 1002
    func_addr_name     go to state 1003


State 757

  268 expression_any: expression_label semicolon .

    $default  reduce using rule 268 (expression_any)


State 758

  269 expression_any: expression_goto semicolon .

    $default  reduce using rule 269 (expression_any)


State 759

   82 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 776
    "as"                   shift, and go to state 777
    "<<"                   shift, and go to state 786
    ">>"                   shift, and go to state 787
    "++"                   shift, and go to state 788
    "--"                   shift, and go to state 789
    "<="                   shift, and go to state 790
    ">="                   shift, and go to state 793
    "=="                   shift, and go to state 794
    "!="                   shift, and go to state 795
    "->"                   shift, and go to state 796
    "??"                   shift, and go to state 798
    "?."                   shift, and go to state 799
    "?["                   shift, and go to state 800
    "<|"                   shift, and go to state 801
    "|>"                   shift, and go to state 802
    "<<<"                  shift, and go to state 804
    ">>>"                  shift, and go to state 805
    "&&"                   shift, and go to state 808
    "||"                   shift, and go to state 809
    "^^"                   shift, and go to state 810
    ".."                   shift, and go to state 814
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 816
    '|'                    shift, and go to state 817
    '^'                    shift, and go to state 818
    '&'                    shift, and go to state 819
    '<'                    shift, and go to state 820
    '>'                    shift, and go to state 821
    '-'                    shift, and go to state 822
    '+'                    shift, and go to state 823
    '*'                    shift, and go to state 824
    '/'                    shift, and go to state 825
    '%'                    shift, and go to state 826
    '.'                    shift, and go to state 827
    '['                    shift, and go to state 828

    open_block        go to state 301
    expression_block  go to state 1004


State 760

   84 expression_if_then_else: expression_if_one_liner "if" . $@4 expr expression_else_one_liner semicolon

    $default  reduce using rule 83 ($@4)

    $@4  go to state 1005


State 761

  246 expression_block: open_block expressions close_block "finally" . open_block expressions close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 1006


State 762

  382 expr_full_block_assumed_piped: block_or_lambda . $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 381 ($@22)

    $@22  go to state 1007


State 763

  248 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 248 (expr_call_pipe)


State 764

  542 expr: name_in_namespace "name" .

    $default  reduce using rule 542 (expr)


State 765

  430 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  431                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  453 expr_call: name_in_namespace '(' . ')'
  454          | name_in_namespace '(' . "uninitialized" ')'
  455          | name_in_namespace '(' . make_struct_single ')'
  456          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  457          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "uninitialized"                   shift, and go to state 1008
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 751
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 752
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 1009
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1010
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1011
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_fields      go to state 754
    make_struct_single      go to state 1012
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 766

  255 expression_any: expression_delete semicolon .

    $default  reduce using rule 255 (expression_any)


State 767

  262 expression_any: expression_break semicolon .

    $default  reduce using rule 262 (expression_any)


State 768

  263 expression_any: expression_continue semicolon .

    $default  reduce using rule 263 (expression_any)


State 769

  314 expression_return: expression_return_no_pipe semicolon .

    $default  reduce using rule 314 (expression_return)


State 770

  319 expression_yield: expression_yield_no_pipe semicolon .

    $default  reduce using rule 319 (expression_yield)


State 771

  328 optional_in_scope: "inscope" .

    $default  reduce using rule 328 (optional_in_scope)


State 772

  340 expression_let: kwd_let optional_in_scope . let_variable_declaration
  341               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 322
    "[["    shift, and go to state 1013
    "name"  shift, and go to state 323
    '('     shift, and go to state 1014

    tuple_expansion_variable_declaration  go to state 1015
    let_variable_name_with_pos_list       go to state 324
    let_variable_declaration              go to state 1016


State 773

  380 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 1017
    "[["       shift, and go to state 1018

    $default  reduce using rule 375 (optional_capture_list)

    optional_capture_list  go to state 1019


State 774

  289 expr_pipe: expr_assign " <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 536
    '@'                    shift, and go to state 713

    open_block        go to state 301
    expression_block  go to state 714
    block_or_lambda   go to state 715
    expr_block        go to state 1020


State 775

  254 expression_any: expr_assign semicolon .

    $default  reduce using rule 254 (expression_any)


State 776

  519 expr: expr "is" . "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr "is" . basic_type_declaration
  521     | expr "is" . "name"
  559 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 1021
    "bool"      shift, and go to state 333
    "void"      shift, and go to state 334
    "string"    shift, and go to state 335
    "int"       shift, and go to state 337
    "int2"      shift, and go to state 338
    "int3"      shift, and go to state 339
    "int4"      shift, and go to state 340
    "uint"      shift, and go to state 341
    "bitfield"  shift, and go to state 498
    "uint2"     shift, and go to state 343
    "uint3"     shift, and go to state 344
    "uint4"     shift, and go to state 345
    "float"     shift, and go to state 346
    "float2"    shift, and go to state 347
    "float3"    shift, and go to state 348
    "float4"    shift, and go to state 349
    "range"     shift, and go to state 350
    "urange"    shift, and go to state 351
    "range64"   shift, and go to state 352
    "urange64"  shift, and go to state 353
    "int64"     shift, and go to state 355
    "uint64"    shift, and go to state 356
    "double"    shift, and go to state 357
    "int8"      shift, and go to state 360
    "uint8"     shift, and go to state 361
    "int16"     shift, and go to state 362
    "uint16"    shift, and go to state 363
    "$f"        shift, and go to state 1022
    "name"      shift, and go to state 1023

    basic_type_declaration  go to state 1024


State 777

  522 expr: expr "as" . "name"
  525     | expr "as" . "type" '<' $@31 type_declaration '>' $@32
  526     | expr "as" . basic_type_declaration
  557 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1025
    "bool"      shift, and go to state 333
    "void"      shift, and go to state 334
    "string"    shift, and go to state 335
    "int"       shift, and go to state 337
    "int2"      shift, and go to state 338
    "int3"      shift, and go to state 339
    "int4"      shift, and go to state 340
    "uint"      shift, and go to state 341
    "bitfield"  shift, and go to state 498
    "uint2"     shift, and go to state 343
    "uint3"     shift, and go to state 344
    "uint4"     shift, and go to state 345
    "float"     shift, and go to state 346
    "float2"    shift, and go to state 347
    "float3"    shift, and go to state 348
    "float4"    shift, and go to state 349
    "range"     shift, and go to state 350
    "urange"    shift, and go to state 351
    "range64"   shift, and go to state 352
    "urange64"  shift, and go to state 353
    "int64"     shift, and go to state 355
    "uint64"    shift, and go to state 356
    "double"    shift, and go to state 357
    "int8"      shift, and go to state 360
    "uint8"     shift, and go to state 361
    "int16"     shift, and go to state 362
    "uint16"    shift, and go to state 363
    "$f"        shift, and go to state 1026
    "name"      shift, and go to state 1027

    basic_type_declaration  go to state 1028


State 778

  400 expr_assign: expr "+=" . expr
  421 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1033
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1034
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 779

  401 expr_assign: expr "-=" . expr
  422 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1035
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1036
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 780

  403 expr_assign: expr "/=" . expr
  424 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1037
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1038
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 781

  402 expr_assign: expr "*=" . expr
  423 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1039
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1040
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 782

  404 expr_assign: expr "%=" . expr
  425 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1041
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1042
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 783

  394 expr_assign: expr "&=" . expr
  415 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1043
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1044
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 784

  395 expr_assign: expr "|=" . expr
  416 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1045
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1046
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 785

  396 expr_assign: expr "^=" . expr
  417 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1047
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1048
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 786

  474 expr: expr "<<" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1049
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 787

  475 expr: expr ">>" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1050
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 788

  498 expr: expr "++" .

    $default  reduce using rule 498 (expr)


State 789

  499 expr: expr "--" .

    $default  reduce using rule 499 (expr)


State 790

  487 expr: expr "<=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1051
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 791

  405 expr_assign: expr "<<=" . expr
  426 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1052
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1053
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 792

  406 expr_assign: expr ">>=" . expr
  427 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1054
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1055
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 793

  488 expr: expr ">=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1056
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 794

  485 expr: expr "==" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1057
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 795

  486 expr: expr "!=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1058
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 796

  432 expr_method_call: expr "->" . "name" '(' ')'
  433                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1059


State 797

  392 expr_assign: expr "<-" . expr
  414 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1060
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1061
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 798

  515 expr: expr "??" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1062
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 799

  506 expr: expr "?." . "name"
  554 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1063
    "name"  shift, and go to state 1064


State 800

  504 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1065
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 801

  539 expr: expr "<|" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1066
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 802

  540 expr: expr "|>" . expr
  541     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1067
    expr_mtag               go to state 583
    basic_type_declaration  go to state 1068
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 803

  393 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1069
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 804

  476 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1070
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 805

  477 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1071
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 806

  407 expr_assign: expr "<<<=" . expr
  428 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1072
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1073
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 807

  408 expr_assign: expr ">>>=" . expr
  429 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1074
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1075
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 808

  492 expr: expr "&&" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1076
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 809

  493 expr: expr "||" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1077
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 810

  494 expr: expr "^^" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1078
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 811

  397 expr_assign: expr "&&=" . expr
  418 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1079
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1080
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 812

  398 expr_assign: expr "||=" . expr
  419 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1081
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1082
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 813

  399 expr_assign: expr "^^=" . expr
  420 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1083
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1084
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 814

  495 expr: expr ".." . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1085
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 815

  391 expr_assign: expr '=' . expr
  413 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1029
    "@ <|"                            shift, and go to state 1030
    "@@ <|"                           shift, and go to state 1031
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1032
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1086
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1087
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 816

  516 expr: expr '?' . expr ':' expr
  527     | expr '?' . "as" "name"
  530     | expr '?' . "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr '?' . "as" basic_type_declaration
  558 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "as"                              shift, and go to state 1088
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1089
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 817

  490 expr: expr '|' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1090
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 818

  491 expr: expr '^' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1091
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 819

  489 expr: expr '&' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1092
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 820

  483 expr: expr '<' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1093
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 821

  484 expr: expr '>' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1094
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 822

  479 expr: expr '-' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1095
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 823

  478 expr: expr '+' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1096
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 824

  480 expr: expr '*' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1097
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 825

  481 expr: expr '/' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1098
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 826

  482 expr: expr '%' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1099
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 827

  443 expr_field: expr '.' . "name"
  444           | expr '.' . '.' "name"
  445           | expr '.' . "name" '(' ')'
  446           | expr '.' . "name" '(' expr_list ')'
  447           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  448           | expr '.' . basic_type_declaration '(' ')'
  449           | expr '.' . basic_type_declaration '(' expr_list ')'
  452           | expr '.' . $@27 error $@28
  503 expr: expr '.' . '[' expr ']'
  505     | expr '.' . "?[" expr ']'
  507     | expr '.' . "?." "name"
  553 expr_mtag: expr '.' . "$f" '(' expr ')'
  555          | expr '.' . '.' "$f" '(' expr ')'
  556          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 333
    "void"      shift, and go to state 334
    "string"    shift, and go to state 335
    "int"       shift, and go to state 337
    "int2"      shift, and go to state 338
    "int3"      shift, and go to state 339
    "int4"      shift, and go to state 340
    "uint"      shift, and go to state 341
    "bitfield"  shift, and go to state 498
    "uint2"     shift, and go to state 343
    "uint3"     shift, and go to state 344
    "uint4"     shift, and go to state 345
    "float"     shift, and go to state 346
    "float2"    shift, and go to state 347
    "float3"    shift, and go to state 348
    "float4"    shift, and go to state 349
    "range"     shift, and go to state 350
    "urange"    shift, and go to state 351
    "range64"   shift, and go to state 352
    "urange64"  shift, and go to state 353
    "int64"     shift, and go to state 355
    "uint64"    shift, and go to state 356
    "double"    shift, and go to state 357
    "int8"      shift, and go to state 360
    "uint8"     shift, and go to state 361
    "int16"     shift, and go to state 362
    "uint16"    shift, and go to state 363
    "?."        shift, and go to state 1100
    "?["        shift, and go to state 1101
    "$f"        shift, and go to state 1102
    "name"      shift, and go to state 1103
    '.'         shift, and go to state 1104
    '['         shift, and go to state 1105

    $default  reduce using rule 450 ($@27)

    $@27                    go to state 1106
    basic_type_declaration  go to state 1107


State 828

  502 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1108
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 829

  247 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 247 (expr_call_pipe)


State 830

  458 expr_call: basic_type_declaration '(' . ')'
  459          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1109
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1110
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 831

  642 enum_list: enum_list . semicolon
  643          | enum_list . "name" semicolon
  644          | enum_list . "name" '=' expr semicolon
  664 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list . $@45 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 592
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 663 ($@45)

    semicolon  go to state 593
    $@45       go to state 1111


State 832

  644 enum_list: enum_list "name" '=' . expr semicolon

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1112
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 833

  643 enum_list: enum_list "name" semicolon .

    $default  reduce using rule 643 (enum_list)


State 834

  661 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block .

    $default  reduce using rule 661 (enum_declaration)


State 835

  132 optional_annotation_list: '[' . annotation_list ']'
  583 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' semicolon

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 73
    annotation_list               go to state 1113
    name_in_namespace             go to state 75


State 836

  576 struct_variable_declaration_list: struct_variable_declaration_list semicolon .

    $default  reduce using rule 576 (struct_variable_declaration_list)


State 837

  580 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  582                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "def"  shift, and go to state 1114


State 838

  678 optional_struct_variable_declaration_list: open_block struct_variable_declaration_list close_block .

    $default  reduce using rule 678 (optional_struct_variable_declaration_list)


State 839

  578 struct_variable_declaration_list: struct_variable_declaration_list $@35 . structure_variable_declaration semicolon

    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 561 (optional_field_annotation)

    metadata_argument_list          go to state 233
    optional_field_annotation       go to state 1115
    structure_variable_declaration  go to state 1116


State 840

  513 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  514     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1117


State 841

  620 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 620 (let_variable_name_with_pos_list)


State 842

  623 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1118


State 843

  624 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options semicolon .

    $default  reduce using rule 624 (let_variable_declaration)


State 844

  625 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  626                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 1119
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1120
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 845

  628 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 628 (let_variable_declaration)


State 846

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  390 expr_assign: expr .
  391            | expr . '=' expr
  392            | expr . "<-" expr
  393            | expr . ":=" expr
  394            | expr . "&=" expr
  395            | expr . "|=" expr
  396            | expr . "^=" expr
  397            | expr . "&&=" expr
  398            | expr . "||=" expr
  399            | expr . "^^=" expr
  400            | expr . "+=" expr
  401            | expr . "-=" expr
  402            | expr . "*=" expr
  403            | expr . "/=" expr
  404            | expr . "%=" expr
  405            | expr . "<<=" expr
  406            | expr . ">>=" expr
  407            | expr . "<<<=" expr
  408            | expr . ">>>=" expr
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  627 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . semicolon

    "is"                 shift, and go to state 776
    "as"                 shift, and go to state 777
    "+="                 shift, and go to state 908
    "-="                 shift, and go to state 909
    "/="                 shift, and go to state 910
    "*="                 shift, and go to state 911
    "%="                 shift, and go to state 912
    "&="                 shift, and go to state 913
    "|="                 shift, and go to state 914
    "^="                 shift, and go to state 915
    "<<"                 shift, and go to state 786
    ">>"                 shift, and go to state 787
    "++"                 shift, and go to state 788
    "--"                 shift, and go to state 789
    "<="                 shift, and go to state 790
    "<<="                shift, and go to state 916
    ">>="                shift, and go to state 917
    ">="                 shift, and go to state 793
    "=="                 shift, and go to state 794
    "!="                 shift, and go to state 795
    "->"                 shift, and go to state 796
    "<-"                 shift, and go to state 918
    "??"                 shift, and go to state 798
    "?."                 shift, and go to state 799
    "?["                 shift, and go to state 800
    "<|"                 shift, and go to state 801
    "|>"                 shift, and go to state 802
    ":="                 shift, and go to state 803
    "<<<"                shift, and go to state 804
    ">>>"                shift, and go to state 805
    "<<<="               shift, and go to state 919
    ">>>="               shift, and go to state 920
    "&&"                 shift, and go to state 808
    "||"                 shift, and go to state 809
    "^^"                 shift, and go to state 810
    "&&="                shift, and go to state 921
    "||="                shift, and go to state 922
    "^^="                shift, and go to state 923
    ".."                 shift, and go to state 814
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 924
    '?'                  shift, and go to state 816
    '|'                  shift, and go to state 817
    '^'                  shift, and go to state 818
    '&'                  shift, and go to state 819
    '<'                  shift, and go to state 820
    '>'                  shift, and go to state 821
    '-'                  shift, and go to state 822
    '+'                  shift, and go to state 823
    '*'                  shift, and go to state 824
    '/'                  shift, and go to state 825
    '%'                  shift, and go to state 826
    '.'                  shift, and go to state 827
    '['                  shift, and go to state 828
    '$'                  shift, and go to state 536
    '@'                  shift, and go to state 713

    $default  reduce using rule 390 (expr_assign)

    semicolon                      go to state 1121
    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 847

  754 type_declaration_no_options: "type" '<' $@50 type_declaration . '>' $@51
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1122


State 848

  777 type_declaration_no_options: "array" '<' $@55 type_declaration . '>' $@56
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1123


State 849

  780 type_declaration_no_options: "table" '<' $@57 table_type_pair . '>' $@58

    '>'  shift, and go to state 1124


State 850

  742 table_type_pair: type_declaration .
  743                | type_declaration . c_or_s type_declaration
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '|'                  shift, and go to state 439

    $default  reduce using rule 742 (table_type_pair)

    semicolon  go to state 644
    c_or_s     go to state 1125


State 851

  755 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 755 (type_declaration_no_options)


State 852

  783 type_declaration_no_options: "iterator" '<' $@59 type_declaration . '>' $@60
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1126


State 853

  773 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration . '>' $@54
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1127


State 854

  724 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 724 (auto_type_declaration)


State 855

  739 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@48 . bitfield_bits '>' $@49

    "name"  shift, and go to state 1128

    bitfield_bits  go to state 1129


State 856

  787 type_declaration_no_options: "block" '<' $@61 type_declaration . '>' $@62
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1130


State 857

  790 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list . optional_function_type '>' $@64

    ':'  shift, and go to state 395

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1131


State 858

  794 type_declaration_no_options: "function" '<' $@65 type_declaration . '>' $@66
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1132


State 859

  797 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 395

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1133


State 860

  801 type_declaration_no_options: "lambda" '<' $@69 type_declaration . '>' $@70
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1134


State 861

  804 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 395

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1135


State 862

  594 tuple_type_list: tuple_type .

    $default  reduce using rule 594 (tuple_type_list)


State 863

  595 tuple_type_list: tuple_type_list . c_or_s tuple_type
  807 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list . '>' $@74

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1136

    semicolon  go to state 644
    c_or_s     go to state 1137


State 864

  600 variant_type_list: variant_type .

    $default  reduce using rule 600 (variant_type_list)


State 865

  601 variant_type_list: variant_type_list . c_or_s variant_type
  810 type_declaration_no_options: "variant" '<' $@75 variant_type_list . '>' $@76

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1138

    semicolon  go to state 644
    c_or_s     go to state 1139


State 866

  725 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 725 (auto_type_declaration)


State 867

  758 type_declaration_no_options: '$' name_in_namespace '<' $@52 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    type_declaration_no_options_list  go to state 1140
    name_in_namespace                 go to state 368
    basic_type_declaration            go to state 369
    structure_type_declaration        go to state 370
    auto_type_declaration             go to state 371
    bitfield_type_declaration         go to state 372
    type_declaration_no_options       go to state 373
    type_declaration                  go to state 1141


State 868

  756 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1142


State 869

  759 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 759 (type_declaration_no_options)


State 870

  744 dim_list: '[' expr ']' .

    $default  reduce using rule 744 (dim_list)


State 871

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  745 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ']'    shift, and go to state 1143


State 872

  730 bitfield_alias_bits: bitfield_alias_bits "name" . semicolon
  731                    | bitfield_alias_bits "name" . '=' expr semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 1144

    semicolon  go to state 1145


State 873

  729 bitfield_alias_bits: bitfield_alias_bits semicolon .

    $default  reduce using rule 729 (bitfield_alias_bits)


State 874

  828 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits $@88 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 1146


State 875

  593 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1147


State 876

  598 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 598 (tuple_alias_type_list)


State 877

  818 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block .

    $default  reduce using rule 818 (tuple_alias_declaration)


State 878

  599 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1148


State 879

  604 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 604 (variant_alias_type_list)


State 880

  823 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block .

    $default  reduce using rule 823 (variant_alias_declaration)


State 881

  586 function_argument_declaration_type: "$a" '(' expr ')' .

    $default  reduce using rule 586 (function_argument_declaration_type)


State 882

  683 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1149
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 883

  684 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1150


State 884

  606 copy_or_move: "<-" .

    $default  reduce using rule 606 (copy_or_move)


State 885

  685 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  686                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1151


State 886

  605 copy_or_move: '=' .

    $default  reduce using rule 605 (copy_or_move)


State 887

  610 variable_declaration_type: variable_name_with_pos_list ':' . type_declaration
  611                          | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1152


State 888

  608 variable_declaration_no_type: variable_name_with_pos_list '&' .

    $default  reduce using rule 608 (variable_declaration_no_type)


State 889

  609 variable_declaration_no_type: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1153
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 890

  877 make_struct_decl: "struct" '<' $@89 . type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1154


State 891

  880 make_struct_decl: "class" '<' $@91 . type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1155


State 892

   88 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 88 (expression_while_loop)


State 893

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list . "in" expr_list expression_block
  685 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  686                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1156
    ','   shift, and go to state 885


State 894

  301 new_type_declaration: '<' $@12 . type_declaration '>' $@13

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1157


State 895

  304 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  305         | "new" new_type_declaration '(' . expr_list ')'
  306         | "new" new_type_declaration '(' . make_struct_single ')'
  307         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "uninitialized"                   shift, and go to state 1158
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 751
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 752
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 867 (use_initializer)

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1159
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_fields      go to state 754
    make_struct_single      go to state 1160
    use_initializer         go to state 1161
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 896

  354 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  355               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  356               | "typeinfo" '(' name_in_namespace . '<' "name" c_or_s "name" '>' expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '<'                               shift, and go to state 1162
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1163
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 897

  358 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  359               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 1164


State 898

  357 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1165
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 899

  353 expr_type_decl: "type" '<' $@20 . type_declaration '>' $@21

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1166


State 900

  903 make_dim_decl: "array" "struct" '<' . $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 901 ($@99)

    $@99  go to state 1167


State 901

  906 make_dim_decl: "array" "tuple" '<' . $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 904 ($@101)

    $@101  go to state 1168


State 902

  909 make_dim_decl: "array" "variant" '<' . $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'

    $default  reduce using rule 907 ($@103)

    $@103  go to state 1169


State 903

  913 make_dim_decl: "array" '<' $@105 . type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1170


State 904

  361 expr_list: expr_list . ',' expr
  910 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 990

    $default  reduce using rule 929 (optional_comma)

    optional_comma  go to state 1171


State 905

  316 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 316 (expression_return)


State 906

  313 expression_return_no_pipe: "return" "<-" expr_list .
  361 expr_list: expr_list . ',' expr

    ','  shift, and go to state 907

    $default  reduce using rule 313 (expression_return_no_pipe)


State 907

  361 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1172
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 908

  400 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1173
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 909

  401 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1174
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 910

  403 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1175
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 911

  402 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1176
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 912

  404 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1177
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 913

  394 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1178
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 914

  395 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1179
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 915

  396 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1180
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 916

  405 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1181
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 917

  406 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1182
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 918

  392 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1183
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 919

  407 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1184
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 920

  408 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1185
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 921

  397 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1186
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 922

  398 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1187
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 923

  399 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1188
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 924

  391 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1189
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 925

  322 expression_try_catch: "try" expression_block "recover" . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 1190


State 926

  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"
  925 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  926                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"              shift, and go to state 428
    "implicit"           shift, and go to state 429
    "explicit"           shift, and go to state 430
    "=="                 shift, and go to state 431
    "??"                 shift, and go to state 432
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '?'                  shift, and go to state 433
    '&'                  shift, and go to state 434
    '>'                  shift, and go to state 1191
    '-'                  shift, and go to state 435
    '['                  shift, and go to state 436
    '#'                  shift, and go to state 437

    semicolon  go to state 644
    c_or_s     go to state 1192
    dim_list   go to state 438


State 927

  924 make_table_decl: "table" '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1193


State 928

  298 expression_delete: "delete" "explicit" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 298 (expression_delete)


State 929

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  511     | "deref" '(' expr . ')'
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1194


State 930

   89 expression_with: "with" expr expression_block .

    $default  reduce using rule 89 (expression_with)


State 931

   91 expression_with_alias: "assume" "name" '=' . $@6 expr

    $default  reduce using rule 90 ($@6)

    $@6  go to state 1195


State 932

  344 expr_cast: "cast" '<' $@14 . type_declaration_no_options '>' $@15 expr

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1196


State 933

  347 expr_cast: "upcast" '<' $@16 . type_declaration_no_options '>' $@17 expr

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1197


State 934

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  512     | "addr" '(' expr . ')'
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1198


State 935

  350 expr_cast: "reinterpret" '<' $@18 . type_declaration_no_options '>' $@19 expr

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1199


State 936

   62 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 62 (expression_label)


State 937

   63 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 63 (expression_goto)


State 938

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  543     | "unsafe" '(' expr . ')'
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1200


State 939

  917 make_dim_decl: "fixed_array" '<' $@107 . type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1201


State 940

  361 expr_list: expr_list . ',' expr
  914 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 990

    $default  reduce using rule 929 (optional_comma)

    optional_comma  go to state 1202


State 941

  886 make_struct_decl: "default" '<' $@95 . type_declaration_no_options '>' $@96 use_initializer

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1203


State 942

  895 make_tuple_call: "tuple" '<' $@97 . tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 642
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    tuple_type                   go to state 862
    tuple_type_list              go to state 1204
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 647


State 943

  361 expr_list: expr_list . ',' expr
  892 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 990

    $default  reduce using rule 929 (optional_comma)

    optional_comma  go to state 1205


State 944

  883 make_struct_decl: "variant" '<' $@93 . variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 649

    variant_type       go to state 864
    variant_type_list  go to state 1206


State 945

  249 expr_call_pipe: "generator" '<' type_declaration_no_options . '>' optional_capture_list expr_full_block_assumed_piped
  513 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  514     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1207
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 946

  321 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 321 (expression_yield)


State 947

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  318 expression_yield_no_pipe: "yield" "<-" expr .
  390 expr_assign: expr .
  391            | expr . '=' expr
  392            | expr . "<-" expr
  393            | expr . ":=" expr
  394            | expr . "&=" expr
  395            | expr . "|=" expr
  396            | expr . "^=" expr
  397            | expr . "&&=" expr
  398            | expr . "||=" expr
  399            | expr . "^^=" expr
  400            | expr . "+=" expr
  401            | expr . "-=" expr
  402            | expr . "*=" expr
  403            | expr . "/=" expr
  404            | expr . "%=" expr
  405            | expr . "<<=" expr
  406            | expr . ">>=" expr
  407            | expr . "<<<=" expr
  408            | expr . ">>>=" expr
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 776
    "as"    shift, and go to state 777
    "+="    shift, and go to state 908
    "-="    shift, and go to state 909
    "/="    shift, and go to state 910
    "*="    shift, and go to state 911
    "%="    shift, and go to state 912
    "&="    shift, and go to state 913
    "|="    shift, and go to state 914
    "^="    shift, and go to state 915
    "<<"    shift, and go to state 786
    ">>"    shift, and go to state 787
    "++"    shift, and go to state 788
    "--"    shift, and go to state 789
    "<="    shift, and go to state 790
    "<<="   shift, and go to state 916
    ">>="   shift, and go to state 917
    ">="    shift, and go to state 793
    "=="    shift, and go to state 794
    "!="    shift, and go to state 795
    "->"    shift, and go to state 796
    "<-"    shift, and go to state 918
    "??"    shift, and go to state 798
    "?."    shift, and go to state 799
    "?["    shift, and go to state 800
    "<|"    shift, and go to state 801
    "|>"    shift, and go to state 802
    ":="    shift, and go to state 803
    "<<<"   shift, and go to state 804
    ">>>"   shift, and go to state 805
    "<<<="  shift, and go to state 919
    ">>>="  shift, and go to state 920
    "&&"    shift, and go to state 808
    "||"    shift, and go to state 809
    "^^"    shift, and go to state 810
    "&&="   shift, and go to state 921
    "||="   shift, and go to state 922
    "^^="   shift, and go to state 923
    ".."    shift, and go to state 814
    '='     shift, and go to state 924
    '?'     shift, and go to state 816
    '|'     shift, and go to state 817
    '^'     shift, and go to state 818
    '&'     shift, and go to state 819
    '<'     shift, and go to state 820
    '>'     shift, and go to state 821
    '-'     shift, and go to state 822
    '+'     shift, and go to state 823
    '*'     shift, and go to state 824
    '/'     shift, and go to state 825
    '%'     shift, and go to state 826
    '.'     shift, and go to state 827
    '['     shift, and go to state 828
    '$'     shift, and go to state 536
    '@'     shift, and go to state 713

    " <|"     reduce using rule 390 (expr_assign)
    $default  reduce using rule 318 (expression_yield_no_pipe)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 948

  367 block_or_lambda: '@' '@' .

    $default  reduce using rule 367 (block_or_lambda)


State 949

  379 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 1017
    "[["       shift, and go to state 1018

    $default  reduce using rule 375 (optional_capture_list)

    optional_capture_list  go to state 1208


State 950

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  545 expr_mtag: "$$" '(' expr . ')'
  553          | expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1209


State 951

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  546 expr_mtag: "$i" '(' expr . ')'
  553          | expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1210


State 952

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  547 expr_mtag: "$v" '(' expr . ')'
  553          | expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1211


State 953

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  548 expr_mtag: "$b" '(' expr . ')'
  553          | expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1212


State 954

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  549 expr_mtag: "$a" '(' expr . ')'
  553          | expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1213


State 955

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  551 expr_mtag: "$c" '(' expr . ')' '(' ')'
  552          | "$c" '(' expr . ')' '(' expr_list ')'
  553          | expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1214


State 956

  685 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  686                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  933 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1215
    ','   shift, and go to state 885


State 957

  854 optional_block: "where" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 536
    '@'                    shift, and go to state 713

    open_block        go to state 301
    expression_block  go to state 714
    block_or_lambda   go to state 715
    expr_block        go to state 1216


State 958

  473 expr: '-' . expr
  759 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  762                            | type_declaration_no_options '-' . "const"
  764                            | type_declaration_no_options '-' . '&'
  767                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "const"                           shift, and go to state 632
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '&'                               shift, and go to state 633
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 1217
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537
    '#'                               shift, and go to state 635

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 741
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 959

  744 dim_list: '[' . expr ']'
  751 type_declaration_no_options: type_declaration_no_options '[' . ']'
  898 make_dim_decl: '[' . optional_expr_list ']'
  931 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  932                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 746
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "iterator"                        shift, and go to state 747
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    ']'                               shift, and go to state 636
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    ']'  [reduce using rule 275 (optional_expr_list)]

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 748
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 749
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1218
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 960

  500 expr: '(' . expr_list optional_comma ')'
  501     | '(' . make_struct_single ')'
  871 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  872                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 751
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 752
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1219
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 753
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_fields      go to state 754
    make_struct_single      go to state 755
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 961

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  887 make_tuple: expr .
  888           | expr . "=>" expr

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "=>"   shift, and go to state 1220
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 887 (make_tuple)


State 962

  836 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  837                   | make_struct_fields . ',' "name" ":=" expr
  840                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  845 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1221

    $default  reduce using rule 845 (make_struct_dim)


State 963

  846 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  869 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 957
    "end of expression"  shift, and go to state 1222

    $default  reduce using rule 853 (optional_block)

    optional_block  go to state 1223


State 964

  870 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1224
    ",]]"  shift, and go to state 1225
    ']'    shift, and go to state 1226

    optional_trailing_delim_sqr_sqr  go to state 1227


State 965

  889 make_tuple: make_tuple . ',' expr
  896 make_dim: make_tuple .

    ','  shift, and go to state 1228

    $default  reduce using rule 896 (make_dim)


State 966

  897 make_dim: make_dim . "end of expression" make_tuple
  899 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1229
    ";]]"                shift, and go to state 1230
    ']'                  shift, and go to state 1231

    optional_trailing_semicolon_sqr_sqr  go to state 1232


State 967

  685 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  686                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  934 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1233
    ','   shift, and go to state 885


State 968

  500 expr: '(' . expr_list optional_comma ')'
  501     | '(' . make_struct_single ')'
  874 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 751
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 752
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1234
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 753
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_fields      go to state 754
    make_struct_single      go to state 755
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 969

  846 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  873 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 957
    "end of expression"  shift, and go to state 1222

    $default  reduce using rule 853 (optional_block)

    optional_block  go to state 1235


State 970

  897 make_dim: make_dim . "end of expression" make_tuple
  900 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1236
    "end of expression"  shift, and go to state 1229
    ";}]"                shift, and go to state 1237

    optional_trailing_semicolon_cur_sqr  go to state 1238


State 971

  685 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  686                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  936 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1239
    ','   shift, and go to state 885


State 972

  890 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1240
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 973

  855 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1241


State 974

  919 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 730
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_map_tuple          go to state 1242
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 975

  856 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 856 (optional_trailing_semicolon_cur_cur)


State 976

  923 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 923 (make_table_decl)


State 977

  285 expression_keyword: "keyword" '<' $@8 . type_declaration_no_options_list '>' $@9 expr

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    type_declaration_no_options_list  go to state 1243
    name_in_namespace                 go to state 368
    basic_type_declaration            go to state 369
    structure_type_declaration        go to state 370
    auto_type_declaration             go to state 371
    bitfield_type_declaration         go to state 372
    type_declaration_no_options       go to state 373
    type_declaration                  go to state 1141


State 978

  274 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 274 (expr_keyword)


State 979

  288 expression_keyword: "type function" '<' $@10 . type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    type_declaration_no_options_list  go to state 1244
    name_in_namespace                 go to state 368
    basic_type_declaration            go to state 369
    structure_type_declaration        go to state 370
    auto_type_declaration             go to state 371
    bitfield_type_declaration         go to state 372
    type_declaration_no_options       go to state 373
    type_declaration                  go to state 1141


State 980

   39 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 39 (string_builder)


State 981

   38 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1245
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 982

   27 character_sequence: character_sequence . STRING_CHARACTER
   28                   | character_sequence . STRING_CHARACTER_ESC
   37 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 235
    STRING_CHARACTER_ESC  shift, and go to state 236

    $default  reduce using rule 37 (string_builder_body)


State 983

  685 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  686                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  935 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1246
    ','   shift, and go to state 885


State 984

  922 make_table_decl: "begin of code block" optional_expr_map_tuple_list "end of code block" .

    $default  reduce using rule 922 (make_table_decl)


State 985

  921 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  930 optional_comma: ',' .

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 930 (optional_comma)

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 730
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_map_tuple          go to state 1247
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 986

  280 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 280 (optional_expr_map_tuple_list)


State 987

  685 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  686                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  931 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1248
    ','   shift, and go to state 885


State 988

  932 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_name_with_pos_list  go to state 1249


State 989

  898 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 898 (make_dim_decl)


State 990

  361 expr_list: expr_list ',' . expr
  930 optional_comma: ',' .

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 930 (optional_comma)

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1172
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 991

  276 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 276 (optional_expr_list)


State 992

  838 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  839                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1250
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 993

  835 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1251
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 994

  834 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1252
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 995

  500 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1253


State 996

  836 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  837                   | make_struct_fields ',' . "name" ":=" expr
  840                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  841                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr
  930 optional_comma: ',' .

    "$f"    shift, and go to state 1254
    "name"  shift, and go to state 1255

    $default  reduce using rule 930 (optional_comma)


State 997

  844 make_struct_single: make_struct_fields optional_comma .

    $default  reduce using rule 844 (make_struct_single)


State 998

  501 expr: '(' make_struct_single ')' .

    $default  reduce using rule 501 (expr)


State 999

  435 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1256


State 1000

  560 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1257


State 1001

  439 func_addr_expr: '@' '@' '<' . $@23 type_declaration_no_options '>' $@24 func_addr_name
  442               | '@' '@' '<' . $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name

    ':'       reduce using rule 440 ($@25)
    '>'       reduce using rule 440 ($@25)
    '('       reduce using rule 440 ($@25)
    $default  reduce using rule 437 ($@23)

    $@23  go to state 1258
    $@25  go to state 1259


State 1002

  434 func_addr_name: name_in_namespace .

    $default  reduce using rule 434 (func_addr_name)


State 1003

  436 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 436 (func_addr_expr)


State 1004

   82 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1260
    "elif"         shift, and go to state 1261
    "static_elif"  shift, and go to state 1262

    $default  reduce using rule 67 (expression_else)

    elif_or_static_elif  go to state 1263
    expression_else      go to state 1264


State 1005

   84 expression_if_then_else: expression_if_one_liner "if" $@4 . expr expression_else_one_liner semicolon

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1265
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1006

  246 expression_block: open_block expressions close_block "finally" open_block . expressions close_block

    $default  reduce using rule 271 (expressions)

    expressions  go to state 1266


State 1007

  382 expr_full_block_assumed_piped: block_or_lambda $@22 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 16

    $default  reduce using rule 131 (optional_annotation_list)

    optional_annotation_list  go to state 1267


State 1008

  454 expr_call: name_in_namespace '(' "uninitialized" . ')'
  456          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 751
    "name"  shift, and go to state 1268
    ')'     shift, and go to state 1269

    make_struct_fields  go to state 754
    make_struct_single  go to state 1270


State 1009

  430 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  898 make_dim_decl: '[' . optional_expr_list ']'
  931 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  932                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 746
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "iterator"                        shift, and go to state 747
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 751
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 752
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 275 (optional_expr_list)

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 748
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 749
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_fields      go to state 1271
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1010

  453 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 453 (expr_call)


State 1011

  361 expr_list: expr_list . ',' expr
  431 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  457 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1272
    ')'  shift, and go to state 1273


State 1012

  455 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1274


State 1013

  332 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  333                                     | "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  336                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  337                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1275

    tuple_expansion  go to state 1276


State 1014

  334 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  335                                     | '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  338                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon
  339                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1275

    tuple_expansion  go to state 1277


State 1015

  341 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 341 (expression_let)


State 1016

  340 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 340 (expression_let)


State 1017

  377 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1278


State 1018

  376 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"    shift, and go to state 1279
    ":="    shift, and go to state 1280
    "name"  shift, and go to state 1281
    '='     shift, and go to state 1282
    '&'     shift, and go to state 1283

    capture_entry  go to state 1284
    capture_list   go to state 1285


State 1019

  380 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 299

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 1286


State 1020

  289 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 289 (expr_pipe)


State 1021

  519 expr: expr "is" "type" . '<' $@29 type_declaration_no_options '>' $@30

    '<'  shift, and go to state 1287


State 1022

  559 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1288


State 1023

  521 expr: expr "is" "name" .

    $default  reduce using rule 521 (expr)


State 1024

  520 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 520 (expr)


State 1025

  525 expr: expr "as" "type" . '<' $@31 type_declaration '>' $@32

    '<'  shift, and go to state 1289


State 1026

  557 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1290


State 1027

  522 expr: expr "as" "name" .

    $default  reduce using rule 522 (expr)


State 1028

  526 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 526 (expr)


State 1029

  411 expr_assign_pipe_right: "$ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 536
    '@'                    shift, and go to state 713

    open_block        go to state 301
    expression_block  go to state 714
    block_or_lambda   go to state 715
    expr_block        go to state 1291


State 1030

  409 expr_assign_pipe_right: "@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 536
    '@'                    shift, and go to state 713

    open_block        go to state 301
    expression_block  go to state 714
    block_or_lambda   go to state 715
    expr_block        go to state 1292


State 1031

  410 expr_assign_pipe_right: "@@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 536
    '@'                    shift, and go to state 713

    open_block        go to state 301
    expression_block  go to state 714
    block_or_lambda   go to state 715
    expr_block        go to state 1293


State 1032

  412 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 412 (expr_assign_pipe_right)


State 1033

  421 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 421 (expr_assign_pipe)


State 1034

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  400 expr_assign: expr "+=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 400 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1035

  422 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 422 (expr_assign_pipe)


State 1036

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  401 expr_assign: expr "-=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 401 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1037

  424 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 424 (expr_assign_pipe)


State 1038

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  403 expr_assign: expr "/=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 403 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1039

  423 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 423 (expr_assign_pipe)


State 1040

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  402 expr_assign: expr "*=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 402 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1041

  425 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 425 (expr_assign_pipe)


State 1042

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  404 expr_assign: expr "%=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 404 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1043

  415 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 415 (expr_assign_pipe)


State 1044

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  394 expr_assign: expr "&=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 394 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1045

  416 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 416 (expr_assign_pipe)


State 1046

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  395 expr_assign: expr "|=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 395 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1047

  417 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 417 (expr_assign_pipe)


State 1048

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  396 expr_assign: expr "^=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 396 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1049

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  474     | expr "<<" expr .
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 776
    "as"  shift, and go to state 777
    "++"  shift, and go to state 788
    "--"  shift, and go to state 789
    "->"  shift, and go to state 796
    "??"  shift, and go to state 798
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    "<|"  shift, and go to state 801
    "|>"  shift, and go to state 802
    '-'   shift, and go to state 822
    '+'   shift, and go to state 823
    '*'   shift, and go to state 824
    '/'   shift, and go to state 825
    '%'   shift, and go to state 826
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 474 (expr)


State 1050

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  475     | expr ">>" expr .
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 776
    "as"  shift, and go to state 777
    "++"  shift, and go to state 788
    "--"  shift, and go to state 789
    "->"  shift, and go to state 796
    "??"  shift, and go to state 798
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    "<|"  shift, and go to state 801
    "|>"  shift, and go to state 802
    '-'   shift, and go to state 822
    '+'   shift, and go to state 823
    '*'   shift, and go to state 824
    '/'   shift, and go to state 825
    '%'   shift, and go to state 826
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 475 (expr)


State 1051

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  487     | expr "<=" expr .
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 487 (expr)


State 1052

  426 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 426 (expr_assign_pipe)


State 1053

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  405 expr_assign: expr "<<=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 405 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1054

  427 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 427 (expr_assign_pipe)


State 1055

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  406 expr_assign: expr ">>=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 406 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1056

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  488     | expr ">=" expr .
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 488 (expr)


State 1057

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  485     | expr "==" expr .
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 485 (expr)


State 1058

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  486     | expr "!=" expr .
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 486 (expr)


State 1059

  432 expr_method_call: expr "->" "name" . '(' ')'
  433                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1294


State 1060

  414 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 414 (expr_assign_pipe)


State 1061

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  392 expr_assign: expr "<-" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 392 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1062

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  515     | expr "??" expr .
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 776
    "as"  shift, and go to state 777
    "++"  shift, and go to state 788
    "--"  shift, and go to state 789
    "->"  shift, and go to state 796
    "??"  shift, and go to state 798
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    "<|"  shift, and go to state 801
    "|>"  shift, and go to state 802
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 515 (expr)


State 1063

  554 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1295


State 1064

  506 expr: expr "?." "name" .

    $default  reduce using rule 506 (expr)


State 1065

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  504     | expr "?[" expr . ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ']'    shift, and go to state 1296


State 1066

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  539     | expr "<|" expr .
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 796
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 539 (expr)


State 1067

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  540     | expr "|>" expr .
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 796
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 540 (expr)


State 1068

  458 expr_call: basic_type_declaration . '(' ')'
  459          | basic_type_declaration . '(' expr_list ')'
  541 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 830

    $default  reduce using rule 541 (expr)


State 1069

  393 expr_assign: expr ":=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 393 (expr_assign)


State 1070

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  476     | expr "<<<" expr .
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 776
    "as"  shift, and go to state 777
    "++"  shift, and go to state 788
    "--"  shift, and go to state 789
    "->"  shift, and go to state 796
    "??"  shift, and go to state 798
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    "<|"  shift, and go to state 801
    "|>"  shift, and go to state 802
    '-'   shift, and go to state 822
    '+'   shift, and go to state 823
    '*'   shift, and go to state 824
    '/'   shift, and go to state 825
    '%'   shift, and go to state 826
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 476 (expr)


State 1071

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  477     | expr ">>>" expr .
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 776
    "as"  shift, and go to state 777
    "++"  shift, and go to state 788
    "--"  shift, and go to state 789
    "->"  shift, and go to state 796
    "??"  shift, and go to state 798
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    "<|"  shift, and go to state 801
    "|>"  shift, and go to state 802
    '-'   shift, and go to state 822
    '+'   shift, and go to state 823
    '*'   shift, and go to state 824
    '/'   shift, and go to state 825
    '%'   shift, and go to state 826
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 477 (expr)


State 1072

  428 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 428 (expr_assign_pipe)


State 1073

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  407 expr_assign: expr "<<<=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 407 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1074

  429 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 429 (expr_assign_pipe)


State 1075

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  408 expr_assign: expr ">>>=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 408 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1076

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  492     | expr "&&" expr .
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 492 (expr)


State 1077

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  493     | expr "||" expr .
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "^^"   shift, and go to state 810
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 493 (expr)


State 1078

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  494     | expr "^^" expr .
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 494 (expr)


State 1079

  418 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 418 (expr_assign_pipe)


State 1080

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  397 expr_assign: expr "&&=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 397 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1081

  419 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 419 (expr_assign_pipe)


State 1082

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  398 expr_assign: expr "||=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 398 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1083

  420 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 420 (expr_assign_pipe)


State 1084

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  399 expr_assign: expr "^^=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 399 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1085

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  495     | expr ".." expr .
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    ".."  error (nonassociative)

    $default  reduce using rule 495 (expr)


State 1086

  413 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 413 (expr_assign_pipe)


State 1087

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  391 expr_assign: expr '=' expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    '$'    shift, and go to state 536
    '@'    shift, and go to state 713

    $default  reduce using rule 391 (expr_assign)

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1088

  527 expr: expr '?' "as" . "name"
  530     | expr '?' "as" . "type" '<' $@33 type_declaration '>' $@34
  531     | expr '?' "as" . basic_type_declaration
  558 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1297
    "bool"      shift, and go to state 333
    "void"      shift, and go to state 334
    "string"    shift, and go to state 335
    "int"       shift, and go to state 337
    "int2"      shift, and go to state 338
    "int3"      shift, and go to state 339
    "int4"      shift, and go to state 340
    "uint"      shift, and go to state 341
    "bitfield"  shift, and go to state 498
    "uint2"     shift, and go to state 343
    "uint3"     shift, and go to state 344
    "uint4"     shift, and go to state 345
    "float"     shift, and go to state 346
    "float2"    shift, and go to state 347
    "float3"    shift, and go to state 348
    "float4"    shift, and go to state 349
    "range"     shift, and go to state 350
    "urange"    shift, and go to state 351
    "range64"   shift, and go to state 352
    "urange64"  shift, and go to state 353
    "int64"     shift, and go to state 355
    "uint64"    shift, and go to state 356
    "double"    shift, and go to state 357
    "int8"      shift, and go to state 360
    "uint8"     shift, and go to state 361
    "int16"     shift, and go to state 362
    "uint16"    shift, and go to state 363
    "$f"        shift, and go to state 1298
    "name"      shift, and go to state 1299

    basic_type_declaration  go to state 1300


State 1089

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  516     | expr '?' expr . ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    ':'    shift, and go to state 1301
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828


State 1090

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  490     | expr '|' expr .
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 490 (expr)


State 1091

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  491     | expr '^' expr .
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 491 (expr)


State 1092

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  489     | expr '&' expr .
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 489 (expr)


State 1093

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  483     | expr '<' expr .
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 483 (expr)


State 1094

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  484     | expr '>' expr .
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 484 (expr)


State 1095

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  479     | expr '-' expr .
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 776
    "as"  shift, and go to state 777
    "++"  shift, and go to state 788
    "--"  shift, and go to state 789
    "->"  shift, and go to state 796
    "??"  shift, and go to state 798
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    "<|"  shift, and go to state 801
    "|>"  shift, and go to state 802
    '*'   shift, and go to state 824
    '/'   shift, and go to state 825
    '%'   shift, and go to state 826
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 479 (expr)


State 1096

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  478     | expr '+' expr .
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 776
    "as"  shift, and go to state 777
    "++"  shift, and go to state 788
    "--"  shift, and go to state 789
    "->"  shift, and go to state 796
    "??"  shift, and go to state 798
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    "<|"  shift, and go to state 801
    "|>"  shift, and go to state 802
    '*'   shift, and go to state 824
    '/'   shift, and go to state 825
    '%'   shift, and go to state 826
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 478 (expr)


State 1097

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  480     | expr '*' expr .
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 776
    "as"  shift, and go to state 777
    "++"  shift, and go to state 788
    "--"  shift, and go to state 789
    "->"  shift, and go to state 796
    "??"  shift, and go to state 798
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    "<|"  shift, and go to state 801
    "|>"  shift, and go to state 802
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 480 (expr)


State 1098

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  481     | expr '/' expr .
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 776
    "as"  shift, and go to state 777
    "++"  shift, and go to state 788
    "--"  shift, and go to state 789
    "->"  shift, and go to state 796
    "??"  shift, and go to state 798
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    "<|"  shift, and go to state 801
    "|>"  shift, and go to state 802
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 481 (expr)


State 1099

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  482     | expr '%' expr .
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 776
    "as"  shift, and go to state 777
    "++"  shift, and go to state 788
    "--"  shift, and go to state 789
    "->"  shift, and go to state 796
    "??"  shift, and go to state 798
    "?."  shift, and go to state 799
    "?["  shift, and go to state 800
    "<|"  shift, and go to state 801
    "|>"  shift, and go to state 802
    '.'   shift, and go to state 827
    '['   shift, and go to state 828

    $default  reduce using rule 482 (expr)


State 1100

  507 expr: expr '.' "?." . "name"
  556 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1302
    "name"  shift, and go to state 1303


State 1101

  505 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1304
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1102

  553 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1305


State 1103

  443 expr_field: expr '.' "name" .
  445           | expr '.' "name" . '(' ')'
  446           | expr '.' "name" . '(' expr_list ')'
  447           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1306

    '('       [reduce using rule 443 (expr_field)]
    $default  reduce using rule 443 (expr_field)


State 1104

  444 expr_field: expr '.' '.' . "name"
  555 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1307
    "name"  shift, and go to state 1308


State 1105

  503 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1309
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1106

  452 expr_field: expr '.' $@27 . error $@28

    error  shift, and go to state 1310


State 1107

  448 expr_field: expr '.' basic_type_declaration . '(' ')'
  449           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1311


State 1108

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  502     | expr '[' expr . ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ']'    shift, and go to state 1312


State 1109

  458 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 458 (expr_call)


State 1110

  361 expr_list: expr_list . ',' expr
  459 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 907
    ')'  shift, and go to state 1313


State 1111

  664 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 1314


State 1112

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  644 enum_list: enum_list "name" '=' expr . semicolon

    "is"                 shift, and go to state 776
    "as"                 shift, and go to state 777
    "<<"                 shift, and go to state 786
    ">>"                 shift, and go to state 787
    "++"                 shift, and go to state 788
    "--"                 shift, and go to state 789
    "<="                 shift, and go to state 790
    ">="                 shift, and go to state 793
    "=="                 shift, and go to state 794
    "!="                 shift, and go to state 795
    "->"                 shift, and go to state 796
    "??"                 shift, and go to state 798
    "?."                 shift, and go to state 799
    "?["                 shift, and go to state 800
    "<|"                 shift, and go to state 801
    "|>"                 shift, and go to state 802
    "<<<"                shift, and go to state 804
    ">>>"                shift, and go to state 805
    "&&"                 shift, and go to state 808
    "||"                 shift, and go to state 809
    "^^"                 shift, and go to state 810
    ".."                 shift, and go to state 814
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '?'                  shift, and go to state 816
    '|'                  shift, and go to state 817
    '^'                  shift, and go to state 818
    '&'                  shift, and go to state 819
    '<'                  shift, and go to state 820
    '>'                  shift, and go to state 821
    '-'                  shift, and go to state 822
    '+'                  shift, and go to state 823
    '*'                  shift, and go to state 824
    '/'                  shift, and go to state 825
    '%'                  shift, and go to state 826
    '.'                  shift, and go to state 827
    '['                  shift, and go to state 828

    semicolon  go to state 1315


State 1113

  130 annotation_list: annotation_list . ',' annotation_declaration
  132 optional_annotation_list: '[' annotation_list . ']'
  583 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' semicolon

    ','  shift, and go to state 113
    ']'  shift, and go to state 1316


State 1114

  580 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  582                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "public"   shift, and go to state 1317
    "private"  shift, and go to state 1318

    $default  reduce using rule 569 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1319


State 1115

  574 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1320

    $default  reduce using rule 572 (optional_static_member_variable)

    optional_static_member_variable  go to state 1321


State 1116

  578 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1322


State 1117

  513 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  514     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1323
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1118

  623 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 623 (let_variable_name_with_pos_list)


State 1119

  626 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 626 (let_variable_declaration)


State 1120

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  390 expr_assign: expr .
  391            | expr . '=' expr
  392            | expr . "<-" expr
  393            | expr . ":=" expr
  394            | expr . "&=" expr
  395            | expr . "|=" expr
  396            | expr . "^=" expr
  397            | expr . "&&=" expr
  398            | expr . "||=" expr
  399            | expr . "^^=" expr
  400            | expr . "+=" expr
  401            | expr . "-=" expr
  402            | expr . "*=" expr
  403            | expr . "/=" expr
  404            | expr . "%=" expr
  405            | expr . "<<=" expr
  406            | expr . ">>=" expr
  407            | expr . "<<<=" expr
  408            | expr . ">>>=" expr
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  625 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon

    "is"                 shift, and go to state 776
    "as"                 shift, and go to state 777
    "+="                 shift, and go to state 908
    "-="                 shift, and go to state 909
    "/="                 shift, and go to state 910
    "*="                 shift, and go to state 911
    "%="                 shift, and go to state 912
    "&="                 shift, and go to state 913
    "|="                 shift, and go to state 914
    "^="                 shift, and go to state 915
    "<<"                 shift, and go to state 786
    ">>"                 shift, and go to state 787
    "++"                 shift, and go to state 788
    "--"                 shift, and go to state 789
    "<="                 shift, and go to state 790
    "<<="                shift, and go to state 916
    ">>="                shift, and go to state 917
    ">="                 shift, and go to state 793
    "=="                 shift, and go to state 794
    "!="                 shift, and go to state 795
    "->"                 shift, and go to state 796
    "<-"                 shift, and go to state 918
    "??"                 shift, and go to state 798
    "?."                 shift, and go to state 799
    "?["                 shift, and go to state 800
    "<|"                 shift, and go to state 801
    "|>"                 shift, and go to state 802
    ":="                 shift, and go to state 803
    "<<<"                shift, and go to state 804
    ">>>"                shift, and go to state 805
    "<<<="               shift, and go to state 919
    ">>>="               shift, and go to state 920
    "&&"                 shift, and go to state 808
    "||"                 shift, and go to state 809
    "^^"                 shift, and go to state 810
    "&&="                shift, and go to state 921
    "||="                shift, and go to state 922
    "^^="                shift, and go to state 923
    ".."                 shift, and go to state 814
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 924
    '?'                  shift, and go to state 816
    '|'                  shift, and go to state 817
    '^'                  shift, and go to state 818
    '&'                  shift, and go to state 819
    '<'                  shift, and go to state 820
    '>'                  shift, and go to state 821
    '-'                  shift, and go to state 822
    '+'                  shift, and go to state 823
    '*'                  shift, and go to state 824
    '/'                  shift, and go to state 825
    '%'                  shift, and go to state 826
    '.'                  shift, and go to state 827
    '['                  shift, and go to state 828
    '$'                  shift, and go to state 536
    '@'                  shift, and go to state 713

    $default  reduce using rule 390 (expr_assign)

    semicolon                      go to state 1324
    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1121

  627 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 627 (let_variable_declaration)


State 1122

  754 type_declaration_no_options: "type" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 753 ($@51)

    $@51  go to state 1325


State 1123

  777 type_declaration_no_options: "array" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 776 ($@56)

    $@56  go to state 1326


State 1124

  780 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' . $@58

    $default  reduce using rule 779 ($@58)

    $@58  go to state 1327


State 1125

  743 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1328


State 1126

  783 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 782 ($@60)

    $@60  go to state 1329


State 1127

  773 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 772 ($@54)

    $@54  go to state 1330


State 1128

  726 bitfield_bits: "name" .

    $default  reduce using rule 726 (bitfield_bits)


State 1129

  727 bitfield_bits: bitfield_bits . semicolon "name"
  739 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@48 bitfield_bits . '>' $@49

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '>'                  shift, and go to state 1331

    semicolon  go to state 1332


State 1130

  787 type_declaration_no_options: "block" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 786 ($@62)

    $@62  go to state 1333


State 1131

  790 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type . '>' $@64

    '>'  shift, and go to state 1334


State 1132

  794 type_declaration_no_options: "function" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 793 ($@66)

    $@66  go to state 1335


State 1133

  797 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1336


State 1134

  801 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 800 ($@70)

    $@70  go to state 1337


State 1135

  804 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1338


State 1136

  807 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' . $@74

    $default  reduce using rule 806 ($@74)

    $@74  go to state 1339


State 1137

  595 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 642
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    tuple_type                   go to state 1340
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 647


State 1138

  810 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' . $@76

    $default  reduce using rule 809 ($@76)

    $@76  go to state 1341


State 1139

  601 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 649

    variant_type  go to state 1342


State 1140

  282 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  758 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1343

    semicolon  go to state 644
    c_or_s     go to state 1344


State 1141

  281 type_declaration_no_options_list: type_declaration .
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 281 (type_declaration_no_options_list)


State 1142

  756 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 756 (type_declaration_no_options)


State 1143

  745 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 745 (dim_list)


State 1144

  731 bitfield_alias_bits: bitfield_alias_bits "name" '=' . expr semicolon

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1345
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1145

  730 bitfield_alias_bits: bitfield_alias_bits "name" semicolon .

    $default  reduce using rule 730 (bitfield_alias_bits)


State 1146

  828 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits $@88 close_block .

    $default  reduce using rule 828 (bitfield_alias_declaration)


State 1147

  593 tuple_type: "name" ':' type_declaration .
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 593 (tuple_type)


State 1148

  599 variant_type: "name" ':' type_declaration .
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 599 (variant_type)


State 1149

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  683 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1346


State 1150

  684 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 684 (variable_name_with_pos_list)


State 1151

  685 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  686                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1347

    $default  reduce using rule 685 (variable_name_with_pos_list)


State 1152

  610 variable_declaration_type: variable_name_with_pos_list ':' type_declaration .
  611                          | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 884
    '='   shift, and go to state 886
    '|'   shift, and go to state 439

    $default  reduce using rule 610 (variable_declaration_type)

    copy_or_move  go to state 1348


State 1153

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  609 variable_declaration_no_type: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 609 (variable_declaration_no_type)


State 1154

  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"
  877 make_struct_decl: "struct" '<' $@89 type_declaration_no_options . '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1349
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1155

  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"
  880 make_struct_decl: "class" '<' $@91 type_declaration_no_options . '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1350
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1156

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1351
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1157

  301 new_type_declaration: '<' $@12 type_declaration . '>' $@13
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1352


State 1158

  307 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  868 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 751
    "name"  shift, and go to state 1268

    $default  reduce using rule 868 (use_initializer)

    make_struct_fields  go to state 754
    make_struct_single  go to state 1353


State 1159

  305 expr_new: "new" new_type_declaration '(' expr_list . ')'
  361 expr_list: expr_list . ',' expr

    ','  shift, and go to state 907
    ')'  shift, and go to state 1354


State 1160

  306 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1355


State 1161

  304 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1356


State 1162

  355 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  356               | "typeinfo" '(' name_in_namespace '<' . "name" c_or_s "name" '>' expr ')'

    "name"  shift, and go to state 1357


State 1163

  354 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1358


State 1164

  358 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  359               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1359
    '>'                  shift, and go to state 1360


State 1165

  357 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1361


State 1166

  353 expr_type_decl: "type" '<' $@20 type_declaration . '>' $@21
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1362


State 1167

  903 make_dim_decl: "array" "struct" '<' $@99 . type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1363


State 1168

  906 make_dim_decl: "array" "tuple" '<' $@101 . tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 642
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    tuple_type                   go to state 862
    tuple_type_list              go to state 1364
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 647


State 1169

  909 make_dim_decl: "array" "variant" '<' $@103 . variant_type_list '>' $@104 '(' make_variant_dim ')'

    "name"  shift, and go to state 649

    variant_type       go to state 864
    variant_type_list  go to state 1365


State 1170

  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"
  913 make_dim_decl: "array" '<' $@105 type_declaration_no_options . '>' $@106 '(' optional_expr_list ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1366
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1171

  910 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1367


State 1172

  361 expr_list: expr_list ',' expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 361 (expr_list)


State 1173

  400 expr_assign: expr "+=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 400 (expr_assign)


State 1174

  401 expr_assign: expr "-=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 401 (expr_assign)


State 1175

  403 expr_assign: expr "/=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 403 (expr_assign)


State 1176

  402 expr_assign: expr "*=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 402 (expr_assign)


State 1177

  404 expr_assign: expr "%=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 404 (expr_assign)


State 1178

  394 expr_assign: expr "&=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 394 (expr_assign)


State 1179

  395 expr_assign: expr "|=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 395 (expr_assign)


State 1180

  396 expr_assign: expr "^=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 396 (expr_assign)


State 1181

  405 expr_assign: expr "<<=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 405 (expr_assign)


State 1182

  406 expr_assign: expr ">>=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 406 (expr_assign)


State 1183

  392 expr_assign: expr "<-" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 392 (expr_assign)


State 1184

  407 expr_assign: expr "<<<=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 407 (expr_assign)


State 1185

  408 expr_assign: expr ">>>=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 408 (expr_assign)


State 1186

  397 expr_assign: expr "&&=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 397 (expr_assign)


State 1187

  398 expr_assign: expr "||=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 398 (expr_assign)


State 1188

  399 expr_assign: expr "^^=" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 399 (expr_assign)


State 1189

  391 expr_assign: expr '=' expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 391 (expr_assign)


State 1190

  322 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 322 (expression_try_catch)


State 1191

  925 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1368


State 1192

  926 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1369


State 1193

  924 make_table_decl: "table" '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 924 (make_table_decl)


State 1194

  511 expr: "deref" '(' expr ')' .

    $default  reduce using rule 511 (expr)


State 1195

   91 expression_with_alias: "assume" "name" '=' $@6 . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1370
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1196

  344 expr_cast: "cast" '<' $@14 type_declaration_no_options . '>' $@15 expr
  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1371
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1197

  347 expr_cast: "upcast" '<' $@16 type_declaration_no_options . '>' $@17 expr
  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1372
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1198

  512 expr: "addr" '(' expr ')' .

    $default  reduce using rule 512 (expr)


State 1199

  350 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options . '>' $@19 expr
  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1373
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1200

  543 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 543 (expr)


State 1201

  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"
  917 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options . '>' $@108 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1374
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1202

  914 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1375


State 1203

  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"
  886 make_struct_decl: "default" '<' $@95 type_declaration_no_options . '>' $@96 use_initializer

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1376
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1204

  595 tuple_type_list: tuple_type_list . c_or_s tuple_type
  895 make_tuple_call: "tuple" '<' $@97 tuple_type_list . '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1377

    semicolon  go to state 644
    c_or_s     go to state 1137


State 1205

  892 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1378


State 1206

  601 variant_type_list: variant_type_list . c_or_s variant_type
  883 make_struct_decl: "variant" '<' $@93 variant_type_list . '>' $@94 '(' use_initializer make_variant_dim ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1379

    semicolon  go to state 644
    c_or_s     go to state 1139


State 1207

  249 expr_call_pipe: "generator" '<' type_declaration_no_options '>' . optional_capture_list expr_full_block_assumed_piped
  513 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  514     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 1017
    "[["       shift, and go to state 1018

    $default  reduce using rule 375 (optional_capture_list)

    optional_capture_list  go to state 1380


State 1208

  379 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 299

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 1381


State 1209

  545 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 545 (expr_mtag)


State 1210

  546 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 546 (expr_mtag)


State 1211

  547 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 547 (expr_mtag)


State 1212

  548 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 548 (expr_mtag)


State 1213

  549 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 549 (expr_mtag)


State 1214

  551 expr_mtag: "$c" '(' expr ')' . '(' ')'
  552          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1382


State 1215

  933 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1383
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1216

  854 optional_block: "where" expr_block .

    $default  reduce using rule 854 (optional_block)


State 1217

  759 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  898 make_dim_decl: '[' . optional_expr_list ']'
  931 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  932                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 746
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "iterator"                        shift, and go to state 747
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    ']'                               shift, and go to state 869
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    ']'  [reduce using rule 275 (optional_expr_list)]

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 748
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 749
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1218

  360 expr_list: expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  744 dim_list: '[' expr . ']'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ']'    shift, and go to state 870

    ']'       [reduce using rule 360 (expr_list)]
    $default  reduce using rule 360 (expr_list)


State 1219

  871 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  872                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 957
    "$f"     shift, and go to state 751
    "name"   shift, and go to state 1268

    $default  reduce using rule 853 (optional_block)

    make_struct_fields  go to state 962
    make_struct_dim     go to state 1384
    optional_block      go to state 1385


State 1220

  888 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1386
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1221

  836 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  837                   | make_struct_fields ',' . "name" ":=" expr
  840                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  841                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1254
    "name"  shift, and go to state 1255


State 1222

  846 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 751
    "name"  shift, and go to state 1268

    make_struct_fields  go to state 1387


State 1223

  869 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1224
    ",]]"  shift, and go to state 1225
    ']'    shift, and go to state 1226

    optional_trailing_delim_sqr_sqr  go to state 1388


State 1224

  862 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 862 (optional_trailing_delim_sqr_sqr)


State 1225

  863 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 863 (optional_trailing_delim_sqr_sqr)


State 1226

  861 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1389


State 1227

  870 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 870 (make_struct_decl)


State 1228

  889 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1390
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1229

  897 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 961
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple              go to state 1391
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1230

  860 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 860 (optional_trailing_semicolon_sqr_sqr)


State 1231

  859 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1392


State 1232

  899 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 899 (make_dim_decl)


State 1233

  934 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1393
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1234

  874 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 751
    "name"  shift, and go to state 1268

    make_struct_fields  go to state 962
    make_struct_dim     go to state 1394


State 1235

  873 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1395
    ";}]"                shift, and go to state 1396
    ",}]"                shift, and go to state 1397

    optional_trailing_delim_cur_sqr  go to state 1398


State 1236

  857 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1399


State 1237

  858 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 858 (optional_trailing_semicolon_cur_sqr)


State 1238

  900 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 900 (make_dim_decl)


State 1239

  936 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1400
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1240

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  890 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 890 (make_map_tuple)


State 1241

  855 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 855 (optional_trailing_semicolon_cur_cur)


State 1242

  919 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 919 (make_table)


State 1243

  282 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  285 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list . '>' $@9 expr

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1401

    semicolon  go to state 644
    c_or_s     go to state 1344


State 1244

  282 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  288 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list . '>' $@11 optional_expr_list_in_braces

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1402

    semicolon  go to state 644
    c_or_s     go to state 1344


State 1245

   38 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    ':'    shift, and go to state 1403
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 33 (optional_format_string)

    optional_format_string  go to state 1404


State 1246

  935 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1405
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1247

  921 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 921 (expr_map_tuple_list)


State 1248

  931 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1406
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1249

  685 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  686                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  932 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1407
    ','   shift, and go to state 885


State 1250

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  838 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  839                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1408


State 1251

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  835 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 835 (make_struct_fields)


State 1252

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  834 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 834 (make_struct_fields)


State 1253

  500 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 500 (expr)


State 1254

  840 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  841                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1409


State 1255

  836 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  837                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 884
    ":="  shift, and go to state 1410
    '='   shift, and go to state 886

    copy_or_move  go to state 1411


State 1256

  435 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1412
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1257

  560 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1413
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1258

  439 func_addr_expr: '@' '@' '<' $@23 . type_declaration_no_options '>' $@24 func_addr_name

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1414


State 1259

  442 func_addr_expr: '@' '@' '<' $@25 . optional_function_argument_list optional_function_type '>' $@26 func_addr_name

    '('  shift, and go to state 299

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 1415


State 1260

   68 expression_else: "else" . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 1416


State 1261

   65 elif_or_static_elif: "elif" .

    $default  reduce using rule 65 (elif_or_static_elif)


State 1262

   66 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 66 (elif_or_static_elif)


State 1263

   69 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1417
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1264

   82 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 82 (expression_if_then_else)


State 1265

   84 expression_if_then_else: expression_if_one_liner "if" $@4 expr . expression_else_one_liner semicolon
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1418
    "is"    shift, and go to state 776
    "as"    shift, and go to state 777
    "<<"    shift, and go to state 786
    ">>"    shift, and go to state 787
    "++"    shift, and go to state 788
    "--"    shift, and go to state 789
    "<="    shift, and go to state 790
    ">="    shift, and go to state 793
    "=="    shift, and go to state 794
    "!="    shift, and go to state 795
    "->"    shift, and go to state 796
    "??"    shift, and go to state 798
    "?."    shift, and go to state 799
    "?["    shift, and go to state 800
    "<|"    shift, and go to state 801
    "|>"    shift, and go to state 802
    "<<<"   shift, and go to state 804
    ">>>"   shift, and go to state 805
    "&&"    shift, and go to state 808
    "||"    shift, and go to state 809
    "^^"    shift, and go to state 810
    ".."    shift, and go to state 814
    '?'     shift, and go to state 816
    '|'     shift, and go to state 817
    '^'     shift, and go to state 818
    '&'     shift, and go to state 819
    '<'     shift, and go to state 820
    '>'     shift, and go to state 821
    '-'     shift, and go to state 822
    '+'     shift, and go to state 823
    '*'     shift, and go to state 824
    '/'     shift, and go to state 825
    '%'     shift, and go to state 826
    '.'     shift, and go to state 827
    '['     shift, and go to state 828

    $default  reduce using rule 74 (expression_else_one_liner)

    expression_else_one_liner  go to state 1419


State 1266

  246 expression_block: open_block expressions close_block "finally" open_block expressions . close_block
  272 expressions: expressions . expression_any
  273            | expressions . error

    error                             shift, and go to state 465
    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 468
    "if"                              shift, and go to state 469
    "static_if"                       shift, and go to state 470
    "for"                             shift, and go to state 471
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "return"                          shift, and go to state 478
    "null"                            shift, and go to state 479
    "break"                           shift, and go to state 480
    "try"                             shift, and go to state 481
    "table"                           shift, and go to state 482
    "delete"                          shift, and go to state 483
    "deref"                           shift, and go to state 484
    "with"                            shift, and go to state 485
    "assume"                          shift, and go to state 486
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 489
    "continue"                        shift, and go to state 490
    "pass"                            shift, and go to state 491
    "reinterpret"                     shift, and go to state 492
    "label"                           shift, and go to state 493
    "goto"                            shift, and go to state 494
    "unsafe"                          shift, and go to state 495
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "yield"                           shift, and go to state 502
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "close scope"                     shift, and go to state 146
    "end of line"                     shift, and go to state 13
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 525
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    "end of code block"               shift, and go to state 147
    "end of expression"               shift, and go to state 14
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder             go to state 538
    expr_reader                go to state 539
    expression_label           go to state 540
    expression_goto            go to state 541
    semicolon                  go to state 542
    if_or_static_if            go to state 543
    expression_if_one_liner    go to state 544
    expression_if_then_else    go to state 545
    expression_for_loop        go to state 546
    expression_unsafe          go to state 547
    expression_while_loop      go to state 548
    expression_with            go to state 549
    expression_with_alias      go to state 550
    close_block                go to state 1420
    expr_call_pipe             go to state 552
    expression_any             go to state 553
    expr_keyword               go to state 554
    expression_keyword         go to state 555
    expr_pipe                  go to state 556
    name_in_namespace          go to state 557
    expression_delete          go to state 558
    expr_new                   go to state 559
    expression_break           go to state 560
    expression_continue        go to state 561
    expression_return_no_pipe  go to state 562
    expression_return          go to state 563
    expression_yield_no_pipe   go to state 564
    expression_yield           go to state 565
    expression_try_catch       go to state 566
    kwd_let                    go to state 567
    expression_let             go to state 568
    expr_cast                  go to state 569
    expr_type_decl             go to state 570
    expr_type_info             go to state 571
    block_or_lambda            go to state 572
    expr_full_block            go to state 573
    expr_numeric_const         go to state 574
    expr_assign                go to state 575
    expr_assign_pipe           go to state 576
    expr_named_call            go to state 577
    expr_method_call           go to state 578
    func_addr_expr             go to state 579
    expr_field                 go to state 580
    expr_call                  go to state 581
    expr                       go to state 582
    expr_mtag                  go to state 583
    basic_type_declaration     go to state 584
    make_decl                  go to state 585
    make_struct_decl           go to state 586
    make_tuple_call            go to state 587
    make_dim_decl              go to state 588
    make_table_decl            go to state 589
    array_comprehension        go to state 590


State 1267

  382 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 1017
    "[["       shift, and go to state 1018

    $default  reduce using rule 375 (optional_capture_list)

    optional_capture_list  go to state 1421


State 1268

  834 make_struct_fields: "name" . copy_or_move expr
  835                   | "name" . ":=" expr

    "<-"  shift, and go to state 884
    ":="  shift, and go to state 993
    '='   shift, and go to state 886

    copy_or_move  go to state 994


State 1269

  454 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 454 (expr_call)


State 1270

  456 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1422


State 1271

  430 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  836 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  837                   | make_struct_fields . ',' "name" ":=" expr
  840                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1221
    ']'  shift, and go to state 1423


State 1272

  361 expr_list: expr_list ',' . expr
  431 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 1424
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1172
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1273

  457 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 457 (expr_call)


State 1274

  455 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 455 (expr_call)


State 1275

  330 tuple_expansion: "name" .

    $default  reduce using rule 330 (tuple_expansion)


State 1276

  331 tuple_expansion: tuple_expansion . ',' "name"
  332 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  333                                     | "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  336                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  337                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1425
    ']'  shift, and go to state 1426


State 1277

  331 tuple_expansion: tuple_expansion . ',' "name"
  334 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  335                                     | '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  338                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr semicolon
  339                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1425
    ')'  shift, and go to state 1427


State 1278

  377 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1279
    ":="    shift, and go to state 1280
    "name"  shift, and go to state 1281
    '='     shift, and go to state 1282
    '&'     shift, and go to state 1283

    capture_entry  go to state 1284
    capture_list   go to state 1428


State 1279

  370 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1429


State 1280

  371 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1430


State 1281

  372 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1431


State 1282

  369 capture_entry: '=' . "name"

    "name"  shift, and go to state 1432


State 1283

  368 capture_entry: '&' . "name"

    "name"  shift, and go to state 1433


State 1284

  373 capture_list: capture_entry .

    $default  reduce using rule 373 (capture_list)


State 1285

  374 capture_list: capture_list . ',' capture_entry
  376 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1434
    ']'  shift, and go to state 1435


State 1286

  380 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 395

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1436


State 1287

  519 expr: expr "is" "type" '<' . $@29 type_declaration_no_options '>' $@30

    $default  reduce using rule 517 ($@29)

    $@29  go to state 1437


State 1288

  559 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1438
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1289

  525 expr: expr "as" "type" '<' . $@31 type_declaration '>' $@32

    $default  reduce using rule 523 ($@31)

    $@31  go to state 1439


State 1290

  557 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1440
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1291

  411 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 411 (expr_assign_pipe_right)


State 1292

  409 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 409 (expr_assign_pipe_right)


State 1293

  410 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 410 (expr_assign_pipe_right)


State 1294

  432 expr_method_call: expr "->" "name" '(' . ')'
  433                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1441
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1442
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1295

  554 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1443
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1296

  504 expr: expr "?[" expr ']' .

    $default  reduce using rule 504 (expr)


State 1297

  530 expr: expr '?' "as" "type" . '<' $@33 type_declaration '>' $@34

    '<'  shift, and go to state 1444


State 1298

  558 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1445


State 1299

  527 expr: expr '?' "as" "name" .

    $default  reduce using rule 527 (expr)


State 1300

  531 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 531 (expr)


State 1301

  516 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1446
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1302

  556 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1447


State 1303

  507 expr: expr '.' "?." "name" .

    $default  reduce using rule 507 (expr)


State 1304

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  505     | expr '.' "?[" expr . ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ']'    shift, and go to state 1448


State 1305

  553 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1449
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1306

  445 expr_field: expr '.' "name" '(' . ')'
  446           | expr '.' "name" '(' . expr_list ')'
  447           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 1450
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1451
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1452
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1307

  555 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1453


State 1308

  444 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 444 (expr_field)


State 1309

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  503     | expr '.' '[' expr . ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ']'    shift, and go to state 1454


State 1310

  452 expr_field: expr '.' $@27 error . $@28

    $default  reduce using rule 451 ($@28)

    $@28  go to state 1455


State 1311

  448 expr_field: expr '.' basic_type_declaration '(' . ')'
  449           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1456
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1457
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1312

  502 expr: expr '[' expr ']' .

    $default  reduce using rule 502 (expr)


State 1313

  459 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 459 (expr_call)


State 1314

  664 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block .

    $default  reduce using rule 664 (enum_declaration)


State 1315

  644 enum_list: enum_list "name" '=' expr semicolon .

    $default  reduce using rule 644 (enum_list)


State 1316

  132 optional_annotation_list: '[' annotation_list ']' .
  583 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 132 (optional_annotation_list)

    semicolon  go to state 1458


State 1317

  570 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 570 (optional_public_or_private_member_variable)


State 1318

  571 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 571 (optional_public_or_private_member_variable)


State 1319

  580 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@36 function_declaration_header semicolon
  582                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "abstract"  shift, and go to state 1459
    "static"    shift, and go to state 1320

    $default  reduce using rule 572 (optional_static_member_variable)

    optional_static_member_variable  go to state 1460


State 1320

  573 optional_static_member_variable: "static" .

    $default  reduce using rule 573 (optional_static_member_variable)


State 1321

  574 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1461
    "sealed"    shift, and go to state 1462

    $default  reduce using rule 564 (optional_override)

    optional_override  go to state 1463


State 1322

  578 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration semicolon .

    $default  reduce using rule 578 (struct_variable_declaration_list)


State 1323

  513 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  514     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 1017
    "[["       shift, and go to state 1018

    $default  reduce using rule 375 (optional_capture_list)

    optional_capture_list  go to state 1464


State 1324

  625 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 625 (let_variable_declaration)


State 1325

  754 type_declaration_no_options: "type" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 754 (type_declaration_no_options)


State 1326

  777 type_declaration_no_options: "array" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 777 (type_declaration_no_options)


State 1327

  780 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' $@58 .

    $default  reduce using rule 780 (type_declaration_no_options)


State 1328

  743 table_type_pair: type_declaration c_or_s type_declaration .
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 743 (table_type_pair)


State 1329

  783 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 783 (type_declaration_no_options)


State 1330

  773 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 773 (type_declaration_no_options)


State 1331

  739 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@48 bitfield_bits '>' . $@49

    $default  reduce using rule 738 ($@49)

    $@49  go to state 1465


State 1332

  727 bitfield_bits: bitfield_bits semicolon . "name"

    "name"  shift, and go to state 1466


State 1333

  787 type_declaration_no_options: "block" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 787 (type_declaration_no_options)


State 1334

  790 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' . $@64

    $default  reduce using rule 789 ($@64)

    $@64  go to state 1467


State 1335

  794 type_declaration_no_options: "function" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 794 (type_declaration_no_options)


State 1336

  797 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 796 ($@68)

    $@68  go to state 1468


State 1337

  801 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 801 (type_declaration_no_options)


State 1338

  804 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 803 ($@72)

    $@72  go to state 1469


State 1339

  807 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' $@74 .

    $default  reduce using rule 807 (type_declaration_no_options)


State 1340

  595 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 595 (tuple_type_list)


State 1341

  810 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' $@76 .

    $default  reduce using rule 810 (type_declaration_no_options)


State 1342

  601 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 601 (variant_type_list)


State 1343

  758 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1470


State 1344

  282 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1471


State 1345

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  731 bitfield_alias_bits: bitfield_alias_bits "name" '=' expr . semicolon

    "is"                 shift, and go to state 776
    "as"                 shift, and go to state 777
    "<<"                 shift, and go to state 786
    ">>"                 shift, and go to state 787
    "++"                 shift, and go to state 788
    "--"                 shift, and go to state 789
    "<="                 shift, and go to state 790
    ">="                 shift, and go to state 793
    "=="                 shift, and go to state 794
    "!="                 shift, and go to state 795
    "->"                 shift, and go to state 796
    "??"                 shift, and go to state 798
    "?."                 shift, and go to state 799
    "?["                 shift, and go to state 800
    "<|"                 shift, and go to state 801
    "|>"                 shift, and go to state 802
    "<<<"                shift, and go to state 804
    ">>>"                shift, and go to state 805
    "&&"                 shift, and go to state 808
    "||"                 shift, and go to state 809
    "^^"                 shift, and go to state 810
    ".."                 shift, and go to state 814
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '?'                  shift, and go to state 816
    '|'                  shift, and go to state 817
    '^'                  shift, and go to state 818
    '&'                  shift, and go to state 819
    '<'                  shift, and go to state 820
    '>'                  shift, and go to state 821
    '-'                  shift, and go to state 822
    '+'                  shift, and go to state 823
    '*'                  shift, and go to state 824
    '/'                  shift, and go to state 825
    '%'                  shift, and go to state 826
    '.'                  shift, and go to state 827
    '['                  shift, and go to state 828

    semicolon  go to state 1472


State 1346

  683 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 683 (variable_name_with_pos_list)


State 1347

  686 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1473


State 1348

  611 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1474
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1349

  877 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' . $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 876 ($@90)

    $@90  go to state 1475


State 1350

  880 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' . $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 879 ($@92)

    $@92  go to state 1476


State 1351

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list . expression_block
  361 expr_list: expr_list . ',' expr

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    ','                    shift, and go to state 907

    open_block        go to state 301
    expression_block  go to state 1477


State 1352

  301 new_type_declaration: '<' $@12 type_declaration '>' . $@13

    $default  reduce using rule 300 ($@13)

    $@13  go to state 1478


State 1353

  307 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1479


State 1354

  305 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 305 (expr_new)


State 1355

  306 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 306 (expr_new)


State 1356

  304 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 304 (expr_new)


State 1357

  355 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  356               | "typeinfo" '(' name_in_namespace '<' "name" . c_or_s "name" '>' expr ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1480

    semicolon  go to state 644
    c_or_s     go to state 1481


State 1358

  354 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 354 (expr_type_info)


State 1359

  359 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1482


State 1360

  358 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1483


State 1361

  357 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 357 (expr_type_info)


State 1362

  353 expr_type_decl: "type" '<' $@20 type_declaration '>' . $@21

    $default  reduce using rule 352 ($@21)

    $@21  go to state 1484


State 1363

  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"
  903 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options . '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1485
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1364

  595 tuple_type_list: tuple_type_list . c_or_s tuple_type
  906 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1486

    semicolon  go to state 644
    c_or_s     go to state 1137


State 1365

  601 variant_type_list: variant_type_list . c_or_s variant_type
  909 make_dim_decl: "array" "variant" '<' $@103 variant_type_list . '>' $@104 '(' make_variant_dim ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1487

    semicolon  go to state 644
    c_or_s     go to state 1139


State 1366

  913 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' . $@106 '(' optional_expr_list ')'

    $default  reduce using rule 912 ($@106)

    $@106  go to state 1488


State 1367

  910 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 910 (make_dim_decl)


State 1368

  925 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 279 (optional_expr_map_tuple_list)

    string_builder                go to state 538
    expr_reader                   go to state 539
    optional_expr_map_tuple_list  go to state 1489
    expression_keyword            go to state 602
    name_in_namespace             go to state 557
    expr_new                      go to state 559
    expr_cast                     go to state 569
    expr_type_decl                go to state 570
    expr_type_info                go to state 571
    block_or_lambda               go to state 572
    expr_full_block               go to state 573
    expr_numeric_const            go to state 574
    expr_named_call               go to state 577
    expr_method_call              go to state 578
    func_addr_expr                go to state 579
    expr_field                    go to state 580
    expr_call                     go to state 581
    expr                          go to state 730
    expr_mtag                     go to state 583
    basic_type_declaration        go to state 584
    make_decl                     go to state 585
    make_struct_decl              go to state 586
    make_map_tuple                go to state 739
    make_tuple_call               go to state 587
    make_dim_decl                 go to state 588
    expr_map_tuple_list           go to state 740
    make_table_decl               go to state 589
    array_comprehension           go to state 590


State 1369

  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"
  926 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1490
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1370

   91 expression_with_alias: "assume" "name" '=' $@6 expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 91 (expression_with_alias)


State 1371

  344 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' . $@15 expr

    $default  reduce using rule 343 ($@15)

    $@15  go to state 1491


State 1372

  347 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' . $@17 expr

    $default  reduce using rule 346 ($@17)

    $@17  go to state 1492


State 1373

  350 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' . $@19 expr

    $default  reduce using rule 349 ($@19)

    $@19  go to state 1493


State 1374

  917 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' . $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 916 ($@108)

    $@108  go to state 1494


State 1375

  914 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 914 (make_dim_decl)


State 1376

  886 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' . $@96 use_initializer

    $default  reduce using rule 885 ($@96)

    $@96  go to state 1495


State 1377

  895 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' . $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 894 ($@98)

    $@98  go to state 1496


State 1378

  892 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 892 (make_tuple_call)


State 1379

  883 make_struct_decl: "variant" '<' $@93 variant_type_list '>' . $@94 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 882 ($@94)

    $@94  go to state 1497


State 1380

  249 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list . expr_full_block_assumed_piped
  513 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  514     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1498
    '$'  shift, and go to state 536
    '@'  shift, and go to state 713

    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 1499


State 1381

  379 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 395

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1500


State 1382

  551 expr_mtag: "$c" '(' expr ')' '(' . ')'
  552          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1501
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1502
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1383

  361 expr_list: expr_list . ',' expr
  933 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1503
    ','                  shift, and go to state 907


State 1384

  846 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  872 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 957
    "end of expression"  shift, and go to state 1222

    $default  reduce using rule 853 (optional_block)

    optional_block  go to state 1504


State 1385

  871 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1224
    ",]]"  shift, and go to state 1225
    ']'    shift, and go to state 1226

    optional_trailing_delim_sqr_sqr  go to state 1505


State 1386

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  888 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 888 (make_tuple)


State 1387

  836 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  837                   | make_struct_fields . ',' "name" ":=" expr
  840                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  846 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1221

    $default  reduce using rule 846 (make_struct_dim)


State 1388

  869 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 869 (make_struct_decl)


State 1389

  861 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 861 (optional_trailing_delim_sqr_sqr)


State 1390

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  889 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 889 (make_tuple)


State 1391

  889 make_tuple: make_tuple . ',' expr
  897 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1228

    $default  reduce using rule 897 (make_dim)


State 1392

  859 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 859 (optional_trailing_semicolon_sqr_sqr)


State 1393

  361 expr_list: expr_list . ',' expr
  934 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1506
    ','                  shift, and go to state 907


State 1394

  846 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  874 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 957
    "end of expression"  shift, and go to state 1222

    $default  reduce using rule 853 (optional_block)

    optional_block  go to state 1507


State 1395

  864 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1508


State 1396

  865 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 865 (optional_trailing_delim_cur_sqr)


State 1397

  866 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 866 (optional_trailing_delim_cur_sqr)


State 1398

  873 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 873 (make_struct_decl)


State 1399

  857 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 857 (optional_trailing_semicolon_cur_sqr)


State 1400

  361 expr_list: expr_list . ',' expr
  936 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1509
    ','                  shift, and go to state 907


State 1401

  285 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' . $@9 expr

    $default  reduce using rule 284 ($@9)

    $@9  go to state 1510


State 1402

  288 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' . $@11 optional_expr_list_in_braces

    $default  reduce using rule 287 ($@11)

    $@11  go to state 1511


State 1403

   35 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 34 ($@1)

    $@1  go to state 1512


State 1404

   38 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1513


State 1405

  361 expr_list: expr_list . ',' expr
  935 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1514
    ','                  shift, and go to state 907


State 1406

  361 expr_list: expr_list . ',' expr
  931 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1515
    ','                  shift, and go to state 907


State 1407

  932 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1516
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1408

  838 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  839                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 884
    ":="  shift, and go to state 1517
    '='   shift, and go to state 886

    copy_or_move  go to state 1518


State 1409

  840 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  841                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1519
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1410

  837 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1520
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1411

  836 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1521
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1412

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  435 func_addr_name: "$i" '(' expr . ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1522


State 1413

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  560          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1523


State 1414

  439 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options . '>' $@24 func_addr_name
  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1524
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1415

  442 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list . optional_function_type '>' $@26 func_addr_name

    ':'  shift, and go to state 395

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1525


State 1416

   68 expression_else: "else" expression_block .

    $default  reduce using rule 68 (expression_else)


State 1417

   69 expression_else: elif_or_static_elif expr . expression_block expression_else
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 776
    "as"                   shift, and go to state 777
    "<<"                   shift, and go to state 786
    ">>"                   shift, and go to state 787
    "++"                   shift, and go to state 788
    "--"                   shift, and go to state 789
    "<="                   shift, and go to state 790
    ">="                   shift, and go to state 793
    "=="                   shift, and go to state 794
    "!="                   shift, and go to state 795
    "->"                   shift, and go to state 796
    "??"                   shift, and go to state 798
    "?."                   shift, and go to state 799
    "?["                   shift, and go to state 800
    "<|"                   shift, and go to state 801
    "|>"                   shift, and go to state 802
    "<<<"                  shift, and go to state 804
    ">>>"                  shift, and go to state 805
    "&&"                   shift, and go to state 808
    "||"                   shift, and go to state 809
    "^^"                   shift, and go to state 810
    ".."                   shift, and go to state 814
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 816
    '|'                    shift, and go to state 817
    '^'                    shift, and go to state 818
    '&'                    shift, and go to state 819
    '<'                    shift, and go to state 820
    '>'                    shift, and go to state 821
    '-'                    shift, and go to state 822
    '+'                    shift, and go to state 823
    '*'                    shift, and go to state 824
    '/'                    shift, and go to state 825
    '%'                    shift, and go to state 826
    '.'                    shift, and go to state 827
    '['                    shift, and go to state 828

    open_block        go to state 301
    expression_block  go to state 1526


State 1418

   76 expression_else_one_liner: "else" . $@3 expression_if_one_liner

    $default  reduce using rule 75 ($@3)

    $@3  go to state 1527


State 1419

   84 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1528


State 1420

  246 expression_block: open_block expressions close_block "finally" open_block expressions close_block .

    $default  reduce using rule 246 (expression_block)


State 1421

  382 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 299

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 1529


State 1422

  456 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 456 (expr_call)


State 1423

  430 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1530


State 1424

  431 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  898 make_dim_decl: '[' . optional_expr_list ']'
  931 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  932                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 746
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "iterator"                        shift, and go to state 747
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 751
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 752
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 275 (optional_expr_list)

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 748
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 749
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_fields      go to state 1531
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1425

  331 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1532


State 1426

  332 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  333                                     | "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  336                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr semicolon
  337                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr_pipe

    ']'  shift, and go to state 1533


State 1427

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  335                                     | '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  338                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr semicolon
  339                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1534
    '&'  shift, and go to state 411

    $default  reduce using rule 617 (optional_ref)

    optional_ref  go to state 1535


State 1428

  374 capture_list: capture_list . ',' capture_entry
  377 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1434
    ')'  shift, and go to state 1536


State 1429

  370 capture_entry: "<-" "name" .

    $default  reduce using rule 370 (capture_entry)


State 1430

  371 capture_entry: ":=" "name" .

    $default  reduce using rule 371 (capture_entry)


State 1431

  372 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1537


State 1432

  369 capture_entry: '=' "name" .

    $default  reduce using rule 369 (capture_entry)


State 1433

  368 capture_entry: '&' "name" .

    $default  reduce using rule 368 (capture_entry)


State 1434

  374 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1279
    ":="    shift, and go to state 1280
    "name"  shift, and go to state 1281
    '='     shift, and go to state 1282
    '&'     shift, and go to state 1283

    capture_entry  go to state 1538


State 1435

  376 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1539


State 1436

  380 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1540
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block             go to state 301
    expression_block       go to state 1541
    block_or_simple_block  go to state 1542


State 1437

  519 expr: expr "is" "type" '<' $@29 . type_declaration_no_options '>' $@30

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1543


State 1438

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  559          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1544


State 1439

  525 expr: expr "as" "type" '<' $@31 . type_declaration '>' $@32

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1545


State 1440

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  557          | expr "as" "$f" '(' expr . ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1546


State 1441

  432 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 432 (expr_method_call)


State 1442

  361 expr_list: expr_list . ',' expr
  433 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 907
    ')'  shift, and go to state 1547


State 1443

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  554          | expr "?." "$f" '(' expr . ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1548


State 1444

  530 expr: expr '?' "as" "type" '<' . $@33 type_declaration '>' $@34

    $default  reduce using rule 528 ($@33)

    $@33  go to state 1549


State 1445

  558 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1550
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1446

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  516     | expr '?' expr ':' expr .
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 516 (expr)


State 1447

  556 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1551
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1448

  505 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 505 (expr)


State 1449

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  553          | expr '.' "$f" '(' expr . ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1552


State 1450

  447 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  898 make_dim_decl: '[' . optional_expr_list ']'
  931 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  932                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 746
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "iterator"                        shift, and go to state 747
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 751
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 752
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 275 (optional_expr_list)

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 748
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 749
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_fields      go to state 1553
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1451

  445 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 445 (expr_field)


State 1452

  361 expr_list: expr_list . ',' expr
  446 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 907
    ')'  shift, and go to state 1554


State 1453

  555 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1555
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1454

  503 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 503 (expr)


State 1455

  452 expr_field: expr '.' $@27 error $@28 .

    $default  reduce using rule 452 (expr_field)


State 1456

  448 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 448 (expr_field)


State 1457

  361 expr_list: expr_list . ',' expr
  449 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 907
    ')'  shift, and go to state 1556


State 1458

  583 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' semicolon .

    $default  reduce using rule 583 (struct_variable_declaration_list)


State 1459

  580 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@36 function_declaration_header semicolon

    "const"  shift, and go to state 1557

    $default  reduce using rule 567 (optional_constant)

    optional_constant  go to state 1558


State 1460

  582 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@37 function_declaration_header expression_block

    "override"  shift, and go to state 1461
    "sealed"    shift, and go to state 1462

    $default  reduce using rule 564 (optional_override)

    optional_override  go to state 1559


State 1461

  565 optional_override: "override" .

    $default  reduce using rule 565 (optional_override)


State 1462

  566 optional_override: "sealed" .

    $default  reduce using rule 566 (optional_override)


State 1463

  574 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1317
    "private"  shift, and go to state 1318

    $default  reduce using rule 569 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1560


State 1464

  513 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  514     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1498


State 1465

  739 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@48 bitfield_bits '>' $@49 .

    $default  reduce using rule 739 (bitfield_type_declaration)


State 1466

  727 bitfield_bits: bitfield_bits semicolon "name" .

    $default  reduce using rule 727 (bitfield_bits)


State 1467

  790 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64 .

    $default  reduce using rule 790 (type_declaration_no_options)


State 1468

  797 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 797 (type_declaration_no_options)


State 1469

  804 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 804 (type_declaration_no_options)


State 1470

  758 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 275 (optional_expr_list)

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 1561
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 749
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1471

  282 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 282 (type_declaration_no_options_list)


State 1472

  731 bitfield_alias_bits: bitfield_alias_bits "name" '=' expr semicolon .

    $default  reduce using rule 731 (bitfield_alias_bits)


State 1473

  686 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 686 (variable_name_with_pos_list)


State 1474

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  611 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 611 (variable_declaration_type)


State 1475

  877 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1562


State 1476

  880 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1563


State 1477

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 86 (expression_for_loop)


State 1478

  301 new_type_declaration: '<' $@12 type_declaration '>' $@13 .

    $default  reduce using rule 301 (new_type_declaration)


State 1479

  307 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 307 (expr_new)


State 1480

  355 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1564
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1481

  356 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s . "name" '>' expr ')'

    "name"  shift, and go to state 1565


State 1482

  359 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1566


State 1483

  358 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1567
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1484

  353 expr_type_decl: "type" '<' $@20 type_declaration '>' $@21 .

    $default  reduce using rule 353 (expr_type_decl)


State 1485

  903 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' . $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 902 ($@100)

    $@100  go to state 1568


State 1486

  906 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 905 ($@102)

    $@102  go to state 1569


State 1487

  909 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' . $@104 '(' make_variant_dim ')'

    $default  reduce using rule 908 ($@104)

    $@104  go to state 1570


State 1488

  913 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 . '(' optional_expr_list ')'

    '('  shift, and go to state 1571


State 1489

  925 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1572


State 1490

  926 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1573


State 1491

  344 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1574
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1492

  347 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1575
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1493

  350 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1576
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1494

  917 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1577


State 1495

  886 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 . use_initializer

    "uninitialized"  shift, and go to state 1578

    $default  reduce using rule 867 (use_initializer)

    use_initializer  go to state 1579


State 1496

  895 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1580


State 1497

  883 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1581


State 1498

  513 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  514     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1582
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1583
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1499

  249 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped .

    $default  reduce using rule 249 (expr_call_pipe)


State 1500

  379 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1540
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block             go to state 301
    expression_block       go to state 1541
    block_or_simple_block  go to state 1584


State 1501

  551 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 551 (expr_mtag)


State 1502

  361 expr_list: expr_list . ',' expr
  552 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 907
    ')'  shift, and go to state 1585


State 1503

  933 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1586
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1504

  872 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1224
    ",]]"  shift, and go to state 1225
    ']'    shift, and go to state 1226

    optional_trailing_delim_sqr_sqr  go to state 1587


State 1505

  871 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 871 (make_struct_decl)


State 1506

  934 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1588
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1507

  874 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1395
    ";}]"                shift, and go to state 1396
    ",}]"                shift, and go to state 1397

    optional_trailing_delim_cur_sqr  go to state 1589


State 1508

  864 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 864 (optional_trailing_delim_cur_sqr)


State 1509

  936 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 730
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_map_tuple          go to state 1590
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1510

  285 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1591
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1511

  288 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 . optional_expr_list_in_braces

    '('  shift, and go to state 1592

    '('       [reduce using rule 277 (optional_expr_list_in_braces)]
    $default  reduce using rule 277 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1593


State 1512

   35 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 31 (format_string)

    format_string  go to state 1594


State 1513

   38 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 38 (string_builder_body)


State 1514

  935 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 730
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_map_tuple          go to state 1595
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1515

  931 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1596
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1516

  361 expr_list: expr_list . ',' expr
  932 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1597
    ','                  shift, and go to state 907


State 1517

  839 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1598
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1518

  838 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1599
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1519

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  840 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  841                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1600


State 1520

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  837 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 837 (make_struct_fields)


State 1521

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  836 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 836 (make_struct_fields)


State 1522

  435 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 435 (func_addr_name)


State 1523

  560 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 560 (expr_mtag)


State 1524

  439 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' . $@24 func_addr_name

    $default  reduce using rule 438 ($@24)

    $@24  go to state 1601


State 1525

  442 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type . '>' $@26 func_addr_name

    '>'  shift, and go to state 1602


State 1526

   69 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1260
    "elif"         shift, and go to state 1261
    "static_elif"  shift, and go to state 1262

    $default  reduce using rule 67 (expression_else)

    elif_or_static_elif  go to state 1263
    expression_else      go to state 1603


State 1527

   76 expression_else_one_liner: "else" $@3 . expression_if_one_liner

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "return"                          shift, and go to state 1604
    "null"                            shift, and go to state 479
    "break"                           shift, and go to state 480
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "continue"                        shift, and go to state 490
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "yield"                           shift, and go to state 1605
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder             go to state 538
    expr_reader                go to state 539
    expression_if_one_liner    go to state 1606
    expression_keyword         go to state 602
    name_in_namespace          go to state 557
    expr_new                   go to state 559
    expression_break           go to state 1607
    expression_continue        go to state 1608
    expression_return_no_pipe  go to state 1609
    expression_yield_no_pipe   go to state 1610
    expr_cast                  go to state 569
    expr_type_decl             go to state 570
    expr_type_info             go to state 571
    block_or_lambda            go to state 572
    expr_full_block            go to state 573
    expr_numeric_const         go to state 574
    expr_named_call            go to state 577
    expr_method_call           go to state 578
    func_addr_expr             go to state 579
    expr_field                 go to state 580
    expr_call                  go to state 581
    expr                       go to state 1611
    expr_mtag                  go to state 583
    basic_type_declaration     go to state 584
    make_decl                  go to state 585
    make_struct_decl           go to state 586
    make_tuple_call            go to state 587
    make_dim_decl              go to state 588
    make_table_decl            go to state 589
    array_comprehension        go to state 590


State 1528

   84 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner semicolon .

    $default  reduce using rule 84 (expression_if_then_else)


State 1529

  382 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 395

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1612


State 1530

  430 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 430 (expr_named_call)


State 1531

  431 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  836 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  837                   | make_struct_fields . ',' "name" ":=" expr
  840                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1221
    ']'  shift, and go to state 1613


State 1532

  331 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 331 (tuple_expansion)


State 1533

  332 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  333                                     | "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  336                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr semicolon
  337                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1614
    '&'  shift, and go to state 411

    $default  reduce using rule 617 (optional_ref)

    optional_ref  go to state 1615


State 1534

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  335                                     | '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1616


State 1535

  338 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr semicolon
  339                                     | '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 607
    ":="  shift, and go to state 608
    '='   shift, and go to state 609

    copy_or_move_or_clone  go to state 1617


State 1536

  377 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 377 (optional_capture_list)


State 1537

  372 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1618


State 1538

  374 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 374 (capture_list)


State 1539

  376 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 376 (optional_capture_list)


State 1540

  363 block_or_simple_block: "=>" . expr
  364                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "<-"                              shift, and go to state 1619
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1620
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1541

  362 block_or_simple_block: expression_block .

    $default  reduce using rule 362 (block_or_simple_block)


State 1542

  380 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 380 (expr_full_block)


State 1543

  519 expr: expr "is" "type" '<' $@29 type_declaration_no_options . '>' $@30
  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1621
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1544

  559 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 559 (expr_mtag)


State 1545

  525 expr: expr "as" "type" '<' $@31 type_declaration . '>' $@32
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1622


State 1546

  557 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 557 (expr_mtag)


State 1547

  433 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 433 (expr_method_call)


State 1548

  554 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 554 (expr_mtag)


State 1549

  530 expr: expr '?' "as" "type" '<' $@33 . type_declaration '>' $@34

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1623


State 1550

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  558          | expr '?' "as" "$f" '(' expr . ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1624


State 1551

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  556          | expr '.' "?." "$f" '(' expr . ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1625


State 1552

  553 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 553 (expr_mtag)


State 1553

  447 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  836 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  837                   | make_struct_fields . ',' "name" ":=" expr
  840                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1221
    ']'  shift, and go to state 1626


State 1554

  446 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 446 (expr_field)


State 1555

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  555          | expr '.' '.' "$f" '(' expr . ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1627


State 1556

  449 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 449 (expr_field)


State 1557

  568 optional_constant: "const" .

    $default  reduce using rule 568 (optional_constant)


State 1558

  580 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@36 function_declaration_header semicolon

    $default  reduce using rule 579 ($@36)

    $@36  go to state 1628


State 1559

  582 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@37 function_declaration_header expression_block

    "const"  shift, and go to state 1557

    $default  reduce using rule 567 (optional_constant)

    optional_constant  go to state 1629


State 1560

  574 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_declaration_no_type  go to state 1630
    variable_declaration_type     go to state 1631
    variable_declaration          go to state 1632
    variable_name_with_pos_list   go to state 658


State 1561

  758 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1633


State 1562

  877 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1578

    $default  reduce using rule 867 (use_initializer)

    use_initializer  go to state 1634


State 1563

  880 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1578

    $default  reduce using rule 867 (use_initializer)

    use_initializer  go to state 1635


State 1564

  355 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1636


State 1565

  356 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" . '>' expr ')'

    '>'  shift, and go to state 1637


State 1566

  359 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1638


State 1567

  358 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1639


State 1568

  903 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1640


State 1569

  906 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1641


State 1570

  909 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 . '(' make_variant_dim ')'

    '('  shift, and go to state 1642


State 1571

  913 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 275 (optional_expr_list)

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 1643
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 749
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1572

  925 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 925 (make_table_decl)


State 1573

  926 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 279 (optional_expr_map_tuple_list)

    string_builder                go to state 538
    expr_reader                   go to state 539
    optional_expr_map_tuple_list  go to state 1644
    expression_keyword            go to state 602
    name_in_namespace             go to state 557
    expr_new                      go to state 559
    expr_cast                     go to state 569
    expr_type_decl                go to state 570
    expr_type_info                go to state 571
    block_or_lambda               go to state 572
    expr_full_block               go to state 573
    expr_numeric_const            go to state 574
    expr_named_call               go to state 577
    expr_method_call              go to state 578
    func_addr_expr                go to state 579
    expr_field                    go to state 580
    expr_call                     go to state 581
    expr                          go to state 730
    expr_mtag                     go to state 583
    basic_type_declaration        go to state 584
    make_decl                     go to state 585
    make_struct_decl              go to state 586
    make_map_tuple                go to state 739
    make_tuple_call               go to state 587
    make_dim_decl                 go to state 588
    expr_map_tuple_list           go to state 740
    make_table_decl               go to state 589
    array_comprehension           go to state 590


State 1574

  344 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 344 (expr_cast)


State 1575

  347 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 347 (expr_cast)


State 1576

  350 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 350 (expr_cast)


State 1577

  917 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1645
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1578

  868 use_initializer: "uninitialized" .

    $default  reduce using rule 868 (use_initializer)


State 1579

  886 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer .

    $default  reduce using rule 886 (make_struct_decl)


State 1580

  895 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1578

    $default  reduce using rule 867 (use_initializer)

    use_initializer  go to state 1646


State 1581

  883 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1578

    $default  reduce using rule 867 (use_initializer)

    use_initializer  go to state 1647


State 1582

  513 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 513 (expr)


State 1583

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  514     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1648


State 1584

  379 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 379 (expr_block)


State 1585

  552 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 552 (expr_mtag)


State 1586

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  933 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 776
    "as"                 shift, and go to state 777
    "<<"                 shift, and go to state 786
    ">>"                 shift, and go to state 787
    "++"                 shift, and go to state 788
    "--"                 shift, and go to state 789
    "<="                 shift, and go to state 790
    ">="                 shift, and go to state 793
    "=="                 shift, and go to state 794
    "!="                 shift, and go to state 795
    "->"                 shift, and go to state 796
    "??"                 shift, and go to state 798
    "?."                 shift, and go to state 799
    "?["                 shift, and go to state 800
    "<|"                 shift, and go to state 801
    "|>"                 shift, and go to state 802
    "<<<"                shift, and go to state 804
    ">>>"                shift, and go to state 805
    "&&"                 shift, and go to state 808
    "||"                 shift, and go to state 809
    "^^"                 shift, and go to state 810
    ".."                 shift, and go to state 814
    "end of expression"  shift, and go to state 1649
    '?'                  shift, and go to state 816
    '|'                  shift, and go to state 817
    '^'                  shift, and go to state 818
    '&'                  shift, and go to state 819
    '<'                  shift, and go to state 820
    '>'                  shift, and go to state 821
    '-'                  shift, and go to state 822
    '+'                  shift, and go to state 823
    '*'                  shift, and go to state 824
    '/'                  shift, and go to state 825
    '%'                  shift, and go to state 826
    '.'                  shift, and go to state 827
    '['                  shift, and go to state 828

    $default  reduce using rule 927 (array_comprehension_where)

    array_comprehension_where  go to state 1650


State 1587

  872 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 872 (make_struct_decl)


State 1588

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  934 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 776
    "as"                 shift, and go to state 777
    "<<"                 shift, and go to state 786
    ">>"                 shift, and go to state 787
    "++"                 shift, and go to state 788
    "--"                 shift, and go to state 789
    "<="                 shift, and go to state 790
    ">="                 shift, and go to state 793
    "=="                 shift, and go to state 794
    "!="                 shift, and go to state 795
    "->"                 shift, and go to state 796
    "??"                 shift, and go to state 798
    "?."                 shift, and go to state 799
    "?["                 shift, and go to state 800
    "<|"                 shift, and go to state 801
    "|>"                 shift, and go to state 802
    "<<<"                shift, and go to state 804
    ">>>"                shift, and go to state 805
    "&&"                 shift, and go to state 808
    "||"                 shift, and go to state 809
    "^^"                 shift, and go to state 810
    ".."                 shift, and go to state 814
    "end of expression"  shift, and go to state 1649
    '?'                  shift, and go to state 816
    '|'                  shift, and go to state 817
    '^'                  shift, and go to state 818
    '&'                  shift, and go to state 819
    '<'                  shift, and go to state 820
    '>'                  shift, and go to state 821
    '-'                  shift, and go to state 822
    '+'                  shift, and go to state 823
    '*'                  shift, and go to state 824
    '/'                  shift, and go to state 825
    '%'                  shift, and go to state 826
    '.'                  shift, and go to state 827
    '['                  shift, and go to state 828

    $default  reduce using rule 927 (array_comprehension_where)

    array_comprehension_where  go to state 1651


State 1589

  874 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 874 (make_struct_decl)


State 1590

  936 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1649

    $default  reduce using rule 927 (array_comprehension_where)

    array_comprehension_where  go to state 1652


State 1591

  285 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 285 (expression_keyword)


State 1592

  278 optional_expr_list_in_braces: '(' . optional_expr_list optional_comma ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 275 (optional_expr_list)

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 1653
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 749
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1593

  288 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces .

    $default  reduce using rule 288 (expression_keyword)


State 1594

   32 format_string: format_string . STRING_CHARACTER
   35 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1654

    $default  reduce using rule 35 (optional_format_string)


State 1595

  935 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1649

    $default  reduce using rule 927 (array_comprehension_where)

    array_comprehension_where  go to state 1655


State 1596

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  931 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 776
    "as"                 shift, and go to state 777
    "<<"                 shift, and go to state 786
    ">>"                 shift, and go to state 787
    "++"                 shift, and go to state 788
    "--"                 shift, and go to state 789
    "<="                 shift, and go to state 790
    ">="                 shift, and go to state 793
    "=="                 shift, and go to state 794
    "!="                 shift, and go to state 795
    "->"                 shift, and go to state 796
    "??"                 shift, and go to state 798
    "?."                 shift, and go to state 799
    "?["                 shift, and go to state 800
    "<|"                 shift, and go to state 801
    "|>"                 shift, and go to state 802
    "<<<"                shift, and go to state 804
    ">>>"                shift, and go to state 805
    "&&"                 shift, and go to state 808
    "||"                 shift, and go to state 809
    "^^"                 shift, and go to state 810
    ".."                 shift, and go to state 814
    "end of expression"  shift, and go to state 1649
    '?'                  shift, and go to state 816
    '|'                  shift, and go to state 817
    '^'                  shift, and go to state 818
    '&'                  shift, and go to state 819
    '<'                  shift, and go to state 820
    '>'                  shift, and go to state 821
    '-'                  shift, and go to state 822
    '+'                  shift, and go to state 823
    '*'                  shift, and go to state 824
    '/'                  shift, and go to state 825
    '%'                  shift, and go to state 826
    '.'                  shift, and go to state 827
    '['                  shift, and go to state 828

    $default  reduce using rule 927 (array_comprehension_where)

    array_comprehension_where  go to state 1656


State 1597

  932 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1657
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1598

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  839 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 839 (make_struct_fields)


State 1599

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  838 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 838 (make_struct_fields)


State 1600

  840 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  841                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 884
    ":="  shift, and go to state 1658
    '='   shift, and go to state 886

    copy_or_move  go to state 1659


State 1601

  439 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 . func_addr_name

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 999
    "name"  shift, and go to state 63

    name_in_namespace  go to state 1002
    func_addr_name     go to state 1660


State 1602

  442 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' . $@26 func_addr_name

    $default  reduce using rule 441 ($@26)

    $@26  go to state 1661


State 1603

   69 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 69 (expression_else)


State 1604

  311 expression_return_no_pipe: "return" .
  312                          | "return" . expr_list
  313                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "<-"                              shift, and go to state 1662
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 311 (expression_return_no_pipe)

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 680
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1605

  317 expression_yield_no_pipe: "yield" . expr
  318                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "<-"                              shift, and go to state 1663
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1664
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1606

   76 expression_else_one_liner: "else" $@3 expression_if_one_liner .

    $default  reduce using rule 76 (expression_else_one_liner)


State 1607

   80 expression_if_one_liner: expression_break .

    $default  reduce using rule 80 (expression_if_one_liner)


State 1608

   81 expression_if_one_liner: expression_continue .

    $default  reduce using rule 81 (expression_if_one_liner)


State 1609

   78 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 78 (expression_if_one_liner)


State 1610

   79 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 79 (expression_if_one_liner)


State 1611

   77 expression_if_one_liner: expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 77 (expression_if_one_liner)


State 1612

  382 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 1665


State 1613

  431 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1666


State 1614

  332 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  333                                     | "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1667


State 1615

  336 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr semicolon
  337                                     | "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 607
    ":="  shift, and go to state 608
    '='   shift, and go to state 609

    copy_or_move_or_clone  go to state 1668


State 1616

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  335                                     | '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "<-"        shift, and go to state 607
    "??"        shift, and go to state 432
    ":="        shift, and go to state 608
    '='         shift, and go to state 609
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    copy_or_move_or_clone  go to state 1669
    dim_list               go to state 438


State 1617

  338 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr semicolon
  339                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 1670
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1671
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1618

  372 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 372 (capture_entry)


State 1619

  364 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1672
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1620

  363 block_or_simple_block: "=>" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    ".."  error (nonassociative)

    $default  reduce using rule 363 (block_or_simple_block)


State 1621

  519 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' . $@30

    $default  reduce using rule 518 ($@30)

    $@30  go to state 1673


State 1622

  525 expr: expr "as" "type" '<' $@31 type_declaration '>' . $@32

    $default  reduce using rule 524 ($@32)

    $@32  go to state 1674


State 1623

  530 expr: expr '?' "as" "type" '<' $@33 type_declaration . '>' $@34
  812 type_declaration: type_declaration . '|' type_declaration_no_options
  813                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1675


State 1624

  558 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 558 (expr_mtag)


State 1625

  556 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 556 (expr_mtag)


State 1626

  447 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1676


State 1627

  555 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 555 (expr_mtag)


State 1628

  580 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 . function_declaration_header semicolon

    "operator"  shift, and go to state 194
    "bool"      shift, and go to state 195
    "string"    shift, and go to state 196
    "int"       shift, and go to state 197
    "int2"      shift, and go to state 198
    "int3"      shift, and go to state 199
    "int4"      shift, and go to state 200
    "uint"      shift, and go to state 201
    "uint2"     shift, and go to state 202
    "uint3"     shift, and go to state 203
    "uint4"     shift, and go to state 204
    "float"     shift, and go to state 205
    "float2"    shift, and go to state 206
    "float3"    shift, and go to state 207
    "float4"    shift, and go to state 208
    "range"     shift, and go to state 209
    "urange"    shift, and go to state 210
    "range64"   shift, and go to state 211
    "urange64"  shift, and go to state 212
    "int64"     shift, and go to state 213
    "uint64"    shift, and go to state 214
    "double"    shift, and go to state 215
    "int8"      shift, and go to state 216
    "uint8"     shift, and go to state 217
    "int16"     shift, and go to state 218
    "uint16"    shift, and go to state 219
    "++"        shift, and go to state 220
    "--"        shift, and go to state 221
    "name"      shift, and go to state 222

    function_name                go to state 223
    function_declaration_header  go to state 1677


State 1629

  582 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@37 function_declaration_header expression_block

    $default  reduce using rule 581 ($@37)

    $@37  go to state 1678


State 1630

  613 variable_declaration: variable_declaration_no_type .

    $default  reduce using rule 613 (variable_declaration)


State 1631

  612 variable_declaration: variable_declaration_type .

    $default  reduce using rule 612 (variable_declaration)


State 1632

  574 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 574 (structure_variable_declaration)


State 1633

  758 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 758 (type_declaration_no_options)


State 1634

  877 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 751
    "name"  shift, and go to state 1268
    '('     shift, and go to state 1679

    $default  reduce using rule 852 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1680
    make_struct_dim_list           go to state 1681
    make_struct_dim_decl           go to state 1682
    optional_make_struct_dim_decl  go to state 1683


State 1635

  880 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 751
    "name"  shift, and go to state 1268
    '('     shift, and go to state 1679

    $default  reduce using rule 852 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1680
    make_struct_dim_list           go to state 1681
    make_struct_dim_decl           go to state 1682
    optional_make_struct_dim_decl  go to state 1684


State 1636

  355 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 355 (expr_type_info)


State 1637

  356 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1685
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1638

  359 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1686
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1639

  358 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 358 (expr_type_info)


State 1640

  903 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1578

    $default  reduce using rule 867 (use_initializer)

    use_initializer  go to state 1687


State 1641

  906 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1578

    $default  reduce using rule 867 (use_initializer)

    use_initializer  go to state 1688


State 1642

  909 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 751
    "name"  shift, and go to state 1268

    $default  reduce using rule 842 (make_variant_dim)

    make_struct_fields  go to state 1689
    make_variant_dim    go to state 1690


State 1643

  913 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1691


State 1644

  926 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1692


State 1645

  361 expr_list: expr_list . ',' expr
  917 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 990

    $default  reduce using rule 929 (optional_comma)

    optional_comma  go to state 1693


State 1646

  895 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 751
    "name"  shift, and go to state 1268
    '('     shift, and go to state 1679

    $default  reduce using rule 852 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1680
    make_struct_dim_list           go to state 1681
    make_struct_dim_decl           go to state 1682
    optional_make_struct_dim_decl  go to state 1694


State 1647

  883 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 751
    "name"  shift, and go to state 1268

    $default  reduce using rule 842 (make_variant_dim)

    make_struct_fields  go to state 1689
    make_variant_dim    go to state 1695


State 1648

  514 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 514 (expr)


State 1649

  928 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1696


State 1650

  933 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1697


State 1651

  934 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1698


State 1652

  936 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1699


State 1653

  278 optional_expr_list_in_braces: '(' optional_expr_list . optional_comma ')'

    ','  shift, and go to state 1700

    $default  reduce using rule 929 (optional_comma)

    optional_comma  go to state 1701


State 1654

   32 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 32 (format_string)


State 1655

  935 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1702


State 1656

  931 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1703


State 1657

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  932 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 776
    "as"                 shift, and go to state 777
    "<<"                 shift, and go to state 786
    ">>"                 shift, and go to state 787
    "++"                 shift, and go to state 788
    "--"                 shift, and go to state 789
    "<="                 shift, and go to state 790
    ">="                 shift, and go to state 793
    "=="                 shift, and go to state 794
    "!="                 shift, and go to state 795
    "->"                 shift, and go to state 796
    "??"                 shift, and go to state 798
    "?."                 shift, and go to state 799
    "?["                 shift, and go to state 800
    "<|"                 shift, and go to state 801
    "|>"                 shift, and go to state 802
    "<<<"                shift, and go to state 804
    ">>>"                shift, and go to state 805
    "&&"                 shift, and go to state 808
    "||"                 shift, and go to state 809
    "^^"                 shift, and go to state 810
    ".."                 shift, and go to state 814
    "end of expression"  shift, and go to state 1649
    '?'                  shift, and go to state 816
    '|'                  shift, and go to state 817
    '^'                  shift, and go to state 818
    '&'                  shift, and go to state 819
    '<'                  shift, and go to state 820
    '>'                  shift, and go to state 821
    '-'                  shift, and go to state 822
    '+'                  shift, and go to state 823
    '*'                  shift, and go to state 824
    '/'                  shift, and go to state 825
    '%'                  shift, and go to state 826
    '.'                  shift, and go to state 827
    '['                  shift, and go to state 828

    $default  reduce using rule 927 (array_comprehension_where)

    array_comprehension_where  go to state 1704


State 1658

  841 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1705
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1659

  840 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1706
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1660

  439 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name .

    $default  reduce using rule 439 (func_addr_expr)


State 1661

  442 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 . func_addr_name

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 999
    "name"  shift, and go to state 63

    name_in_namespace  go to state 1002
    func_addr_name     go to state 1707


State 1662

  313 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 906
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 750
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1663

  318 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1708
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1664

  317 expression_yield_no_pipe: "yield" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 317 (expression_yield_no_pipe)


State 1665

  382 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 382 (expr_full_block_assumed_piped)


State 1666

  431 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 431 (expr_named_call)


State 1667

  332 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  333                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  750 type_declaration_no_options: type_declaration_no_options . dim_list
  751                            | type_declaration_no_options . '[' ']'
  759                            | type_declaration_no_options . '-' '[' ']'
  760                            | type_declaration_no_options . "explicit"
  761                            | type_declaration_no_options . "const"
  762                            | type_declaration_no_options . '-' "const"
  763                            | type_declaration_no_options . '&'
  764                            | type_declaration_no_options . '-' '&'
  765                            | type_declaration_no_options . '#'
  766                            | type_declaration_no_options . "implicit"
  767                            | type_declaration_no_options . '-' '#'
  768                            | type_declaration_no_options . "==" "const"
  769                            | type_declaration_no_options . "==" '&'
  770                            | type_declaration_no_options . '?'
  774                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "<-"        shift, and go to state 607
    "??"        shift, and go to state 432
    ":="        shift, and go to state 608
    '='         shift, and go to state 609
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    copy_or_move_or_clone  go to state 1709
    dim_list               go to state 438


State 1668

  336 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr semicolon
  337                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 1710
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1711
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1669

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  335                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 1712
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1713
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1670

  339 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 339 (tuple_expansion_variable_declaration)


State 1671

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  338 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . semicolon
  390 expr_assign: expr .
  391            | expr . '=' expr
  392            | expr . "<-" expr
  393            | expr . ":=" expr
  394            | expr . "&=" expr
  395            | expr . "|=" expr
  396            | expr . "^=" expr
  397            | expr . "&&=" expr
  398            | expr . "||=" expr
  399            | expr . "^^=" expr
  400            | expr . "+=" expr
  401            | expr . "-=" expr
  402            | expr . "*=" expr
  403            | expr . "/=" expr
  404            | expr . "%=" expr
  405            | expr . "<<=" expr
  406            | expr . ">>=" expr
  407            | expr . "<<<=" expr
  408            | expr . ">>>=" expr
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 776
    "as"                 shift, and go to state 777
    "+="                 shift, and go to state 908
    "-="                 shift, and go to state 909
    "/="                 shift, and go to state 910
    "*="                 shift, and go to state 911
    "%="                 shift, and go to state 912
    "&="                 shift, and go to state 913
    "|="                 shift, and go to state 914
    "^="                 shift, and go to state 915
    "<<"                 shift, and go to state 786
    ">>"                 shift, and go to state 787
    "++"                 shift, and go to state 788
    "--"                 shift, and go to state 789
    "<="                 shift, and go to state 790
    "<<="                shift, and go to state 916
    ">>="                shift, and go to state 917
    ">="                 shift, and go to state 793
    "=="                 shift, and go to state 794
    "!="                 shift, and go to state 795
    "->"                 shift, and go to state 796
    "<-"                 shift, and go to state 918
    "??"                 shift, and go to state 798
    "?."                 shift, and go to state 799
    "?["                 shift, and go to state 800
    "<|"                 shift, and go to state 801
    "|>"                 shift, and go to state 802
    ":="                 shift, and go to state 803
    "<<<"                shift, and go to state 804
    ">>>"                shift, and go to state 805
    "<<<="               shift, and go to state 919
    ">>>="               shift, and go to state 920
    "&&"                 shift, and go to state 808
    "||"                 shift, and go to state 809
    "^^"                 shift, and go to state 810
    "&&="                shift, and go to state 921
    "||="                shift, and go to state 922
    "^^="                shift, and go to state 923
    ".."                 shift, and go to state 814
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 924
    '?'                  shift, and go to state 816
    '|'                  shift, and go to state 817
    '^'                  shift, and go to state 818
    '&'                  shift, and go to state 819
    '<'                  shift, and go to state 820
    '>'                  shift, and go to state 821
    '-'                  shift, and go to state 822
    '+'                  shift, and go to state 823
    '*'                  shift, and go to state 824
    '/'                  shift, and go to state 825
    '%'                  shift, and go to state 826
    '.'                  shift, and go to state 827
    '['                  shift, and go to state 828
    '$'                  shift, and go to state 536
    '@'                  shift, and go to state 713

    $default  reduce using rule 390 (expr_assign)

    semicolon                      go to state 1714
    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1672

  364 block_or_simple_block: "=>" "<-" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 364 (block_or_simple_block)


State 1673

  519 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' $@30 .

    $default  reduce using rule 519 (expr)


State 1674

  525 expr: expr "as" "type" '<' $@31 type_declaration '>' $@32 .

    $default  reduce using rule 525 (expr)


State 1675

  530 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' . $@34

    $default  reduce using rule 529 ($@34)

    $@34  go to state 1715


State 1676

  447 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 447 (expr_field)


State 1677

  580 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1716


State 1678

  582 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 . function_declaration_header expression_block

    "operator"  shift, and go to state 194
    "bool"      shift, and go to state 195
    "string"    shift, and go to state 196
    "int"       shift, and go to state 197
    "int2"      shift, and go to state 198
    "int3"      shift, and go to state 199
    "int4"      shift, and go to state 200
    "uint"      shift, and go to state 201
    "uint2"     shift, and go to state 202
    "uint3"     shift, and go to state 203
    "uint4"     shift, and go to state 204
    "float"     shift, and go to state 205
    "float2"    shift, and go to state 206
    "float3"    shift, and go to state 207
    "float4"    shift, and go to state 208
    "range"     shift, and go to state 209
    "urange"    shift, and go to state 210
    "range64"   shift, and go to state 211
    "urange64"  shift, and go to state 212
    "int64"     shift, and go to state 213
    "uint64"    shift, and go to state 214
    "double"    shift, and go to state 215
    "int8"      shift, and go to state 216
    "uint8"     shift, and go to state 217
    "int16"     shift, and go to state 218
    "uint16"    shift, and go to state 219
    "++"        shift, and go to state 220
    "--"        shift, and go to state 221
    "name"      shift, and go to state 222

    function_name                go to state 223
    function_declaration_header  go to state 1717


State 1679

  847 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 751
    "name"  shift, and go to state 1268

    make_struct_fields  go to state 1718


State 1680

  836 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  837                   | make_struct_fields . ',' "name" ":=" expr
  840                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  849 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1221

    $default  reduce using rule 849 (make_struct_dim_decl)


State 1681

  848 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  850 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1719

    $default  reduce using rule 929 (optional_comma)

    optional_comma  go to state 1720


State 1682

  851 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 851 (optional_make_struct_dim_decl)


State 1683

  877 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1721


State 1684

  880 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1722


State 1685

  356 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr . ')'
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1723


State 1686

  359 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828
    ')'    shift, and go to state 1724


State 1687

  903 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 751
    "name"  shift, and go to state 1268
    '('     shift, and go to state 1679

    $default  reduce using rule 852 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1680
    make_struct_dim_list           go to state 1681
    make_struct_dim_decl           go to state 1682
    optional_make_struct_dim_decl  go to state 1725


State 1688

  906 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 751
    "name"  shift, and go to state 1268
    '('     shift, and go to state 1679

    $default  reduce using rule 852 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1680
    make_struct_dim_list           go to state 1681
    make_struct_dim_decl           go to state 1682
    optional_make_struct_dim_decl  go to state 1726


State 1689

  836 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  837                   | make_struct_fields . ',' "name" ":=" expr
  840                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  843 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1221

    $default  reduce using rule 843 (make_variant_dim)


State 1690

  909 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1727


State 1691

  913 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')' .

    $default  reduce using rule 913 (make_dim_decl)


State 1692

  926 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 926 (make_table_decl)


State 1693

  917 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1728


State 1694

  895 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1729


State 1695

  883 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1730


State 1696

  928 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1731
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1697

  933 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1732


State 1698

  934 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1733


State 1699

  936 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1734


State 1700

  930 optional_comma: ',' .

    $default  reduce using rule 930 (optional_comma)


State 1701

  278 optional_expr_list_in_braces: '(' optional_expr_list optional_comma . ')'

    ')'  shift, and go to state 1735


State 1702

  935 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 935 (array_comprehension)


State 1703

  931 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 931 (array_comprehension)


State 1704

  932 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1736


State 1705

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  841 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 841 (make_struct_fields)


State 1706

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  840 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 840 (make_struct_fields)


State 1707

  442 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name .

    $default  reduce using rule 442 (func_addr_expr)


State 1708

  318 expression_yield_no_pipe: "yield" "<-" expr .
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 318 (expression_yield_no_pipe)


State 1709

  332 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  333                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 1737
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1738
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1710

  337 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 337 (tuple_expansion_variable_declaration)


State 1711

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  336 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . semicolon
  390 expr_assign: expr .
  391            | expr . '=' expr
  392            | expr . "<-" expr
  393            | expr . ":=" expr
  394            | expr . "&=" expr
  395            | expr . "|=" expr
  396            | expr . "^=" expr
  397            | expr . "&&=" expr
  398            | expr . "||=" expr
  399            | expr . "^^=" expr
  400            | expr . "+=" expr
  401            | expr . "-=" expr
  402            | expr . "*=" expr
  403            | expr . "/=" expr
  404            | expr . "%=" expr
  405            | expr . "<<=" expr
  406            | expr . ">>=" expr
  407            | expr . "<<<=" expr
  408            | expr . ">>>=" expr
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 776
    "as"                 shift, and go to state 777
    "+="                 shift, and go to state 908
    "-="                 shift, and go to state 909
    "/="                 shift, and go to state 910
    "*="                 shift, and go to state 911
    "%="                 shift, and go to state 912
    "&="                 shift, and go to state 913
    "|="                 shift, and go to state 914
    "^="                 shift, and go to state 915
    "<<"                 shift, and go to state 786
    ">>"                 shift, and go to state 787
    "++"                 shift, and go to state 788
    "--"                 shift, and go to state 789
    "<="                 shift, and go to state 790
    "<<="                shift, and go to state 916
    ">>="                shift, and go to state 917
    ">="                 shift, and go to state 793
    "=="                 shift, and go to state 794
    "!="                 shift, and go to state 795
    "->"                 shift, and go to state 796
    "<-"                 shift, and go to state 918
    "??"                 shift, and go to state 798
    "?."                 shift, and go to state 799
    "?["                 shift, and go to state 800
    "<|"                 shift, and go to state 801
    "|>"                 shift, and go to state 802
    ":="                 shift, and go to state 803
    "<<<"                shift, and go to state 804
    ">>>"                shift, and go to state 805
    "<<<="               shift, and go to state 919
    ">>>="               shift, and go to state 920
    "&&"                 shift, and go to state 808
    "||"                 shift, and go to state 809
    "^^"                 shift, and go to state 810
    "&&="                shift, and go to state 921
    "||="                shift, and go to state 922
    "^^="                shift, and go to state 923
    ".."                 shift, and go to state 814
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 924
    '?'                  shift, and go to state 816
    '|'                  shift, and go to state 817
    '^'                  shift, and go to state 818
    '&'                  shift, and go to state 819
    '<'                  shift, and go to state 820
    '>'                  shift, and go to state 821
    '-'                  shift, and go to state 822
    '+'                  shift, and go to state 823
    '*'                  shift, and go to state 824
    '/'                  shift, and go to state 825
    '%'                  shift, and go to state 826
    '.'                  shift, and go to state 827
    '['                  shift, and go to state 828
    '$'                  shift, and go to state 536
    '@'                  shift, and go to state 713

    $default  reduce using rule 390 (expr_assign)

    semicolon                      go to state 1739
    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1712

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 335 (tuple_expansion_variable_declaration)


State 1713

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon
  390 expr_assign: expr .
  391            | expr . '=' expr
  392            | expr . "<-" expr
  393            | expr . ":=" expr
  394            | expr . "&=" expr
  395            | expr . "|=" expr
  396            | expr . "^=" expr
  397            | expr . "&&=" expr
  398            | expr . "||=" expr
  399            | expr . "^^=" expr
  400            | expr . "+=" expr
  401            | expr . "-=" expr
  402            | expr . "*=" expr
  403            | expr . "/=" expr
  404            | expr . "%=" expr
  405            | expr . "<<=" expr
  406            | expr . ">>=" expr
  407            | expr . "<<<=" expr
  408            | expr . ">>>=" expr
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 776
    "as"                 shift, and go to state 777
    "+="                 shift, and go to state 908
    "-="                 shift, and go to state 909
    "/="                 shift, and go to state 910
    "*="                 shift, and go to state 911
    "%="                 shift, and go to state 912
    "&="                 shift, and go to state 913
    "|="                 shift, and go to state 914
    "^="                 shift, and go to state 915
    "<<"                 shift, and go to state 786
    ">>"                 shift, and go to state 787
    "++"                 shift, and go to state 788
    "--"                 shift, and go to state 789
    "<="                 shift, and go to state 790
    "<<="                shift, and go to state 916
    ">>="                shift, and go to state 917
    ">="                 shift, and go to state 793
    "=="                 shift, and go to state 794
    "!="                 shift, and go to state 795
    "->"                 shift, and go to state 796
    "<-"                 shift, and go to state 918
    "??"                 shift, and go to state 798
    "?."                 shift, and go to state 799
    "?["                 shift, and go to state 800
    "<|"                 shift, and go to state 801
    "|>"                 shift, and go to state 802
    ":="                 shift, and go to state 803
    "<<<"                shift, and go to state 804
    ">>>"                shift, and go to state 805
    "<<<="               shift, and go to state 919
    ">>>="               shift, and go to state 920
    "&&"                 shift, and go to state 808
    "||"                 shift, and go to state 809
    "^^"                 shift, and go to state 810
    "&&="                shift, and go to state 921
    "||="                shift, and go to state 922
    "^^="                shift, and go to state 923
    ".."                 shift, and go to state 814
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 924
    '?'                  shift, and go to state 816
    '|'                  shift, and go to state 817
    '^'                  shift, and go to state 818
    '&'                  shift, and go to state 819
    '<'                  shift, and go to state 820
    '>'                  shift, and go to state 821
    '-'                  shift, and go to state 822
    '+'                  shift, and go to state 823
    '*'                  shift, and go to state 824
    '/'                  shift, and go to state 825
    '%'                  shift, and go to state 826
    '.'                  shift, and go to state 827
    '['                  shift, and go to state 828
    '$'                  shift, and go to state 536
    '@'                  shift, and go to state 713

    $default  reduce using rule 390 (expr_assign)

    semicolon                      go to state 1740
    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1714

  338 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 338 (tuple_expansion_variable_declaration)


State 1715

  530 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' $@34 .

    $default  reduce using rule 530 (expr)


State 1716

  580 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon .

    $default  reduce using rule 580 (struct_variable_declaration_list)


State 1717

  582 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 1741


State 1718

  836 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  837                   | make_struct_fields . ',' "name" ":=" expr
  840                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  847 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1221
    ')'  shift, and go to state 1742


State 1719

  848 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  930 optional_comma: ',' .

    '('  shift, and go to state 1743

    $default  reduce using rule 930 (optional_comma)


State 1720

  850 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 850 (make_struct_dim_decl)


State 1721

  877 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 877 (make_struct_decl)


State 1722

  880 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 880 (make_struct_decl)


State 1723

  356 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')' .

    $default  reduce using rule 356 (expr_type_info)


State 1724

  359 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 359 (expr_type_info)


State 1725

  903 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1744


State 1726

  906 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1745


State 1727

  909 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')' .

    $default  reduce using rule 909 (make_dim_decl)


State 1728

  917 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')' .

    $default  reduce using rule 917 (make_dim_decl)


State 1729

  895 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 895 (make_tuple_call)


State 1730

  883 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 883 (make_struct_decl)


State 1731

  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'
  928 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 776
    "as"   shift, and go to state 777
    "<<"   shift, and go to state 786
    ">>"   shift, and go to state 787
    "++"   shift, and go to state 788
    "--"   shift, and go to state 789
    "<="   shift, and go to state 790
    ">="   shift, and go to state 793
    "=="   shift, and go to state 794
    "!="   shift, and go to state 795
    "->"   shift, and go to state 796
    "??"   shift, and go to state 798
    "?."   shift, and go to state 799
    "?["   shift, and go to state 800
    "<|"   shift, and go to state 801
    "|>"   shift, and go to state 802
    "<<<"  shift, and go to state 804
    ">>>"  shift, and go to state 805
    "&&"   shift, and go to state 808
    "||"   shift, and go to state 809
    "^^"   shift, and go to state 810
    ".."   shift, and go to state 814
    '?'    shift, and go to state 816
    '|'    shift, and go to state 817
    '^'    shift, and go to state 818
    '&'    shift, and go to state 819
    '<'    shift, and go to state 820
    '>'    shift, and go to state 821
    '-'    shift, and go to state 822
    '+'    shift, and go to state 823
    '*'    shift, and go to state 824
    '/'    shift, and go to state 825
    '%'    shift, and go to state 826
    '.'    shift, and go to state 827
    '['    shift, and go to state 828

    $default  reduce using rule 928 (array_comprehension_where)


State 1732

  933 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 933 (array_comprehension)


State 1733

  934 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 934 (array_comprehension)


State 1734

  936 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 936 (array_comprehension)


State 1735

  278 optional_expr_list_in_braces: '(' optional_expr_list optional_comma ')' .

    $default  reduce using rule 278 (optional_expr_list_in_braces)


State 1736

  932 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 932 (array_comprehension)


State 1737

  333 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 333 (tuple_expansion_variable_declaration)


State 1738

  247 expr_call_pipe: expr . expr_full_block_assumed_piped
  332 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon
  390 expr_assign: expr .
  391            | expr . '=' expr
  392            | expr . "<-" expr
  393            | expr . ":=" expr
  394            | expr . "&=" expr
  395            | expr . "|=" expr
  396            | expr . "^=" expr
  397            | expr . "&&=" expr
  398            | expr . "||=" expr
  399            | expr . "^^=" expr
  400            | expr . "+=" expr
  401            | expr . "-=" expr
  402            | expr . "*=" expr
  403            | expr . "/=" expr
  404            | expr . "%=" expr
  405            | expr . "<<=" expr
  406            | expr . ">>=" expr
  407            | expr . "<<<=" expr
  408            | expr . ">>>=" expr
  432 expr_method_call: expr . "->" "name" '(' ')'
  433                 | expr . "->" "name" '(' expr_list ')'
  443 expr_field: expr . '.' "name"
  444           | expr . '.' '.' "name"
  445           | expr . '.' "name" '(' ')'
  446           | expr . '.' "name" '(' expr_list ')'
  447           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  448           | expr . '.' basic_type_declaration '(' ')'
  449           | expr . '.' basic_type_declaration '(' expr_list ')'
  452           | expr . '.' $@27 error $@28
  474 expr: expr . "<<" expr
  475     | expr . ">>" expr
  476     | expr . "<<<" expr
  477     | expr . ">>>" expr
  478     | expr . '+' expr
  479     | expr . '-' expr
  480     | expr . '*' expr
  481     | expr . '/' expr
  482     | expr . '%' expr
  483     | expr . '<' expr
  484     | expr . '>' expr
  485     | expr . "==" expr
  486     | expr . "!=" expr
  487     | expr . "<=" expr
  488     | expr . ">=" expr
  489     | expr . '&' expr
  490     | expr . '|' expr
  491     | expr . '^' expr
  492     | expr . "&&" expr
  493     | expr . "||" expr
  494     | expr . "^^" expr
  495     | expr . ".." expr
  498     | expr . "++"
  499     | expr . "--"
  502     | expr . '[' expr ']'
  503     | expr . '.' '[' expr ']'
  504     | expr . "?[" expr ']'
  505     | expr . '.' "?[" expr ']'
  506     | expr . "?." "name"
  507     | expr . '.' "?." "name"
  515     | expr . "??" expr
  516     | expr . '?' expr ':' expr
  519     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  520     | expr . "is" basic_type_declaration
  521     | expr . "is" "name"
  522     | expr . "as" "name"
  525     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  526     | expr . "as" basic_type_declaration
  527     | expr . '?' "as" "name"
  530     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  531     | expr . '?' "as" basic_type_declaration
  539     | expr . "<|" expr
  540     | expr . "|>" expr
  541     | expr . "|>" basic_type_declaration
  553 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr . "?." "$f" '(' expr ')'
  555          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr . "as" "$f" '(' expr ')'
  558          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 776
    "as"                 shift, and go to state 777
    "+="                 shift, and go to state 908
    "-="                 shift, and go to state 909
    "/="                 shift, and go to state 910
    "*="                 shift, and go to state 911
    "%="                 shift, and go to state 912
    "&="                 shift, and go to state 913
    "|="                 shift, and go to state 914
    "^="                 shift, and go to state 915
    "<<"                 shift, and go to state 786
    ">>"                 shift, and go to state 787
    "++"                 shift, and go to state 788
    "--"                 shift, and go to state 789
    "<="                 shift, and go to state 790
    "<<="                shift, and go to state 916
    ">>="                shift, and go to state 917
    ">="                 shift, and go to state 793
    "=="                 shift, and go to state 794
    "!="                 shift, and go to state 795
    "->"                 shift, and go to state 796
    "<-"                 shift, and go to state 918
    "??"                 shift, and go to state 798
    "?."                 shift, and go to state 799
    "?["                 shift, and go to state 800
    "<|"                 shift, and go to state 801
    "|>"                 shift, and go to state 802
    ":="                 shift, and go to state 803
    "<<<"                shift, and go to state 804
    ">>>"                shift, and go to state 805
    "<<<="               shift, and go to state 919
    ">>>="               shift, and go to state 920
    "&&"                 shift, and go to state 808
    "||"                 shift, and go to state 809
    "^^"                 shift, and go to state 810
    "&&="                shift, and go to state 921
    "||="                shift, and go to state 922
    "^^="                shift, and go to state 923
    ".."                 shift, and go to state 814
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 924
    '?'                  shift, and go to state 816
    '|'                  shift, and go to state 817
    '^'                  shift, and go to state 818
    '&'                  shift, and go to state 819
    '<'                  shift, and go to state 820
    '>'                  shift, and go to state 821
    '-'                  shift, and go to state 822
    '+'                  shift, and go to state 823
    '*'                  shift, and go to state 824
    '/'                  shift, and go to state 825
    '%'                  shift, and go to state 826
    '.'                  shift, and go to state 827
    '['                  shift, and go to state 828
    '$'                  shift, and go to state 536
    '@'                  shift, and go to state 713

    $default  reduce using rule 390 (expr_assign)

    semicolon                      go to state 1746
    block_or_lambda                go to state 762
    expr_full_block_assumed_piped  go to state 829


State 1739

  336 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 336 (tuple_expansion_variable_declaration)


State 1740

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 334 (tuple_expansion_variable_declaration)


State 1741

  582 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block .

    $default  reduce using rule 582 (struct_variable_declaration_list)


State 1742

  847 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 847 (make_struct_dim_list)


State 1743

  848 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 751
    "name"  shift, and go to state 1268

    make_struct_fields  go to state 1747


State 1744

  903 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 903 (make_dim_decl)


State 1745

  906 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 906 (make_dim_decl)


State 1746

  332 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 332 (tuple_expansion_variable_declaration)


State 1747

  836 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  837                   | make_struct_fields . ',' "name" ":=" expr
  840                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  848 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1221
    ')'  shift, and go to state 1748


State 1748

  848 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 848 (make_struct_dim_list)
