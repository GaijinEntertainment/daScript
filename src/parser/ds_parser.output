Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 63 conflicts: 1 shift/reduce
State 332 conflicts: 1 shift/reduce
State 430 conflicts: 1 shift/reduce
State 547 conflicts: 2 shift/reduce
State 549 conflicts: 2 shift/reduce
State 661 conflicts: 1 shift/reduce
State 743 conflicts: 1 shift/reduce
State 953 conflicts: 1 shift/reduce
State 1097 conflicts: 1 shift/reduce
State 1208 conflicts: 1 shift/reduce
State 1209 conflicts: 1 shift/reduce
State 1498 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program semicolon

   16 top_level_reader_macro: expr_reader semicolon

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"
   28                | "start of the string" "end of the string"

   29 format_string: %empty
   30              | format_string STRING_CHARACTER

   31 optional_format_string: %empty

   32 $@1: %empty

   33 optional_format_string: ':' $@1 format_string

   34 string_builder_body: %empty
   35                    | string_builder_body character_sequence
   36                    | string_builder_body "{" expr optional_format_string "}"

   37 string_builder: "start of the string" string_builder_body "end of the string"

   38 reader_character_sequence: STRING_CHARACTER
   39                          | reader_character_sequence STRING_CHARACTER

   40 $@2: %empty

   41 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   42 options_declaration: "options" annotation_argument_list

   43 require_declaration: "require" require_module

   44 keyword_or_name: "name"
   45                | "keyword"
   46                | "type function"

   47 require_module_name: keyword_or_name
   48                    | '%' require_module_name
   49                    | require_module_name '.' keyword_or_name
   50                    | require_module_name '/' keyword_or_name

   51 require_module: require_module_name is_public_module
   52               | require_module_name "as" "name" is_public_module

   53 is_public_module: %empty
   54                 | "public"

   55 expect_declaration: "expect" expect_list

   56 expect_list: expect_error
   57            | expect_list ',' expect_error

   58 expect_error: "integer constant"
   59             | "integer constant" ':' "integer constant"

   60 expression_label: "label" "integer constant" ':'

   61 expression_goto: "goto" "label" "integer constant"
   62                | "goto" expr

   63 elif_or_static_elif: "elif"
   64                    | "static_elif"

   65 expression_else: %empty
   66                | "else" expression_block
   67                | elif_or_static_elif expr expression_block expression_else

   68 semicolon: "end of line"
   69          | "end of expression"

   70 if_or_static_if: "if"
   71                | "static_if"

   72 expression_else_one_liner: %empty

   73 $@3: %empty

   74 expression_else_one_liner: "else" $@3 expression_if_one_liner

   75 expression_if_one_liner: expr
   76                        | expression_return_no_pipe
   77                        | expression_yield_no_pipe
   78                        | expression_break
   79                        | expression_continue

   80 expression_if_then_else: if_or_static_if expr expression_block expression_else

   81 $@4: %empty

   82 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner semicolon

   83 $@5: %empty

   84 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list expression_block

   85 expression_unsafe: "unsafe" expression_block

   86 expression_while_loop: "while" expr expression_block

   87 expression_with: "with" expr expression_block

   88 $@6: %empty

   89 expression_with_alias: "assume" "name" '=' $@6 expr

   90 annotation_argument_value: string_constant
   91                          | "name"
   92                          | "integer constant"
   93                          | "floating point constant"
   94                          | "true"
   95                          | "false"

   96 annotation_argument_value_list: annotation_argument_value
   97                               | annotation_argument_value_list ',' annotation_argument_value

   98 annotation_argument_name: "name"
   99                         | "type"
  100                         | "in"

  101 annotation_argument: annotation_argument_name '=' string_constant
  102                    | annotation_argument_name '=' "name"
  103                    | annotation_argument_name '=' "integer constant"
  104                    | annotation_argument_name '=' "floating point constant"
  105                    | annotation_argument_name '=' "true"
  106                    | annotation_argument_name '=' "false"
  107                    | annotation_argument_name
  108                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  109 annotation_argument_list: annotation_argument
  110                         | annotation_argument_list ',' annotation_argument

  111 metadata_argument_list: '@' annotation_argument
  112                       | metadata_argument_list '@' annotation_argument
  113                       | metadata_argument_list semicolon

  114 annotation_declaration_name: name_in_namespace
  115                            | "require"
  116                            | "private"
  117                            | "template"

  118 annotation_declaration_basic: annotation_declaration_name
  119                             | annotation_declaration_name '(' annotation_argument_list ')'

  120 annotation_declaration: annotation_declaration_basic
  121                       | '!' annotation_declaration
  122                       | annotation_declaration "&&" annotation_declaration
  123                       | annotation_declaration "||" annotation_declaration
  124                       | annotation_declaration "^^" annotation_declaration
  125                       | '(' annotation_declaration ')'
  126                       | "|>" annotation_declaration

  127 annotation_list: annotation_declaration
  128                | annotation_list ',' annotation_declaration

  129 optional_annotation_list: %empty
  130                         | '[' annotation_list ']'

  131 optional_function_argument_list: %empty
  132                                | '(' ')'
  133                                | '(' function_argument_list ')'

  134 optional_function_type: %empty
  135                       | ':' type_declaration

  136 function_name: "name"
  137              | "operator" '!'
  138              | "operator" '~'
  139              | "operator" "+="
  140              | "operator" "-="
  141              | "operator" "*="
  142              | "operator" "/="
  143              | "operator" "%="
  144              | "operator" "&="
  145              | "operator" "|="
  146              | "operator" "^="
  147              | "operator" "&&="
  148              | "operator" "||="
  149              | "operator" "^^="
  150              | "operator" "&&"
  151              | "operator" "||"
  152              | "operator" "^^"
  153              | "operator" '+'
  154              | "operator" '-'
  155              | "operator" '*'
  156              | "operator" '/'
  157              | "operator" '%'
  158              | "operator" '<'
  159              | "operator" '>'
  160              | "operator" ".."
  161              | "operator" "=="
  162              | "operator" "!="
  163              | "operator" "<="
  164              | "operator" ">="
  165              | "operator" '&'
  166              | "operator" '|'
  167              | "operator" '^'
  168              | "++" "operator"
  169              | "--" "operator"
  170              | "operator" "++"
  171              | "operator" "--"
  172              | "operator" "<<"
  173              | "operator" ">>"
  174              | "operator" "<<="
  175              | "operator" ">>="
  176              | "operator" "<<<"
  177              | "operator" ">>>"
  178              | "operator" "<<<="
  179              | "operator" ">>>="
  180              | "operator" '[' ']'
  181              | "operator" "?[" ']'
  182              | "operator" '.'
  183              | "operator" "?."
  184              | "operator" '.' "name"
  185              | "operator" '.' "name" ":="
  186              | "operator" '.' "name" "+="
  187              | "operator" '.' "name" "-="
  188              | "operator" '.' "name" "*="
  189              | "operator" '.' "name" "/="
  190              | "operator" '.' "name" "%="
  191              | "operator" '.' "name" "&="
  192              | "operator" '.' "name" "|="
  193              | "operator" '.' "name" "^="
  194              | "operator" '.' "name" "&&="
  195              | "operator" '.' "name" "||="
  196              | "operator" '.' "name" "^^="
  197              | "operator" "?." "name"
  198              | "operator" ":="
  199              | "operator" "delete"
  200              | "operator" "??"
  201              | "operator" "is"
  202              | "operator" "as"
  203              | "operator" "is" "name"
  204              | "operator" "as" "name"
  205              | "operator" '?' "as"
  206              | "operator" '?' "as" "name"
  207              | "bool"
  208              | "string"
  209              | "int"
  210              | "int2"
  211              | "int3"
  212              | "int4"
  213              | "uint"
  214              | "uint2"
  215              | "uint3"
  216              | "uint4"
  217              | "float"
  218              | "float2"
  219              | "float3"
  220              | "float4"
  221              | "range"
  222              | "urange"
  223              | "range64"
  224              | "urange64"
  225              | "int64"
  226              | "uint64"
  227              | "double"
  228              | "int8"
  229              | "uint8"
  230              | "int16"
  231              | "uint16"

  232 global_function_declaration: optional_annotation_list "def" function_declaration

  233 optional_public_or_private_function: %empty
  234                                    | "private"
  235                                    | "public"

  236 function_declaration_header: function_name optional_function_argument_list optional_function_type

  237 $@7: %empty

  238 function_declaration: optional_public_or_private_function $@7 function_declaration_header expression_block

  239 open_block: "begin of code block"
  240           | "new scope"

  241 close_block: "end of code block"
  242            | "close scope"

  243 expression_block: open_block expressions close_block
  244                 | open_block expressions close_block "finally" open_block expressions close_block

  245 expr_call_pipe: expr expr_full_block_assumed_piped
  246               | expression_keyword expr_full_block_assumed_piped
  247               | "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped

  248 expression_any: semicolon
  249               | expr_pipe
  250               | expr_keyword
  251               | expr_assign_pipe
  252               | expr_assign semicolon
  253               | expression_delete semicolon
  254               | expression_let
  255               | expression_while_loop
  256               | expression_unsafe
  257               | expression_with
  258               | expression_with_alias
  259               | expression_for_loop
  260               | expression_break semicolon
  261               | expression_continue semicolon
  262               | expression_return
  263               | expression_yield
  264               | expression_if_then_else
  265               | expression_try_catch
  266               | expression_label semicolon
  267               | expression_goto semicolon
  268               | "pass" semicolon

  269 expressions: %empty
  270            | expressions expression_any
  271            | expressions error

  272 expr_keyword: "keyword" expr expression_block

  273 optional_expr_list: %empty
  274                   | expr_list optional_comma

  275 optional_expr_list_in_braces: %empty
  276                             | '(' optional_expr_list optional_comma ')'

  277 optional_expr_map_tuple_list: %empty
  278                             | expr_map_tuple_list optional_comma

  279 type_declaration_no_options_list: type_declaration
  280                                 | type_declaration_no_options_list c_or_s type_declaration

  281 $@8: %empty

  282 $@9: %empty

  283 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 expr

  284 $@10: %empty

  285 $@11: %empty

  286 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

  287 expr_pipe: expr_assign " <|" expr_block
  288          | "@ <|" expr_block
  289          | "@@ <|" expr_block
  290          | "$ <|" expr_block
  291          | expr_call_pipe

  292 name_in_namespace: "name"
  293                  | "name" "::" "name"
  294                  | "::" "name"

  295 expression_delete: "delete" expr
  296                  | "delete" "explicit" expr

  297 $@12: %empty

  298 $@13: %empty

  299 new_type_declaration: '<' $@12 type_declaration '>' $@13
  300                     | structure_type_declaration

  301 expr_new: "new" new_type_declaration
  302         | "new" new_type_declaration '(' use_initializer ')'
  303         | "new" new_type_declaration '(' expr_list ')'
  304         | "new" new_type_declaration '(' make_struct_single ')'
  305         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  306         | "new" make_decl

  307 expression_break: "break"

  308 expression_continue: "continue"

  309 expression_return_no_pipe: "return"
  310                          | "return" expr_list
  311                          | "return" "<-" expr_list

  312 expression_return: expression_return_no_pipe semicolon
  313                  | "return" expr_pipe
  314                  | "return" "<-" expr_pipe

  315 expression_yield_no_pipe: "yield" expr
  316                         | "yield" "<-" expr

  317 expression_yield: expression_yield_no_pipe semicolon
  318                 | "yield" expr_pipe
  319                 | "yield" "<-" expr_pipe

  320 expression_try_catch: "try" expression_block "recover" expression_block

  321 kwd_let_var_or_nothing: "let"
  322                       | "var"
  323                       | %empty

  324 kwd_let: "let"
  325        | "var"

  326 optional_in_scope: "inscope"
  327                  | %empty

  328 tuple_expansion: "name"
  329                | tuple_expansion ',' "name"

  330 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  331                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  332                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  333                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  334                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  335                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe
  336                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon
  337                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

  338 expression_let: kwd_let optional_in_scope let_variable_declaration
  339               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  340 $@14: %empty

  341 $@15: %empty

  342 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 expr

  343 $@16: %empty

  344 $@17: %empty

  345 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 expr

  346 $@18: %empty

  347 $@19: %empty

  348 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 expr

  349 $@20: %empty

  350 $@21: %empty

  351 expr_type_decl: "type" '<' $@20 type_declaration '>' $@21

  352 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  353               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  354               | "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  355               | "typeinfo" name_in_namespace '(' expr ')'
  356               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  357               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  358 expr_list: expr
  359          | expr_list ',' expr

  360 block_or_simple_block: expression_block
  361                      | "=>" expr
  362                      | "=>" "<-" expr

  363 block_or_lambda: '$'
  364                | '@'
  365                | '@' '@'

  366 capture_entry: '&' "name"
  367              | '=' "name"
  368              | "<-" "name"
  369              | ":=" "name"
  370              | "name" '(' "name" ')'

  371 capture_list: capture_entry
  372             | capture_list ',' capture_entry

  373 optional_capture_list: %empty
  374                      | "[[" capture_list ']' ']'
  375                      | "capture" '(' capture_list ')'

  376 expr_block: expression_block
  377           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  378 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  379 $@22: %empty

  380 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  381 expr_numeric_const: "integer constant"
  382                   | "unsigned integer constant"
  383                   | "long integer constant"
  384                   | "unsigned long integer constant"
  385                   | "unsigned int8 constant"
  386                   | "floating point constant"
  387                   | "double constant"

  388 expr_assign: expr
  389            | expr '=' expr
  390            | expr "<-" expr
  391            | expr ":=" expr
  392            | expr "&=" expr
  393            | expr "|=" expr
  394            | expr "^=" expr
  395            | expr "&&=" expr
  396            | expr "||=" expr
  397            | expr "^^=" expr
  398            | expr "+=" expr
  399            | expr "-=" expr
  400            | expr "*=" expr
  401            | expr "/=" expr
  402            | expr "%=" expr
  403            | expr "<<=" expr
  404            | expr ">>=" expr
  405            | expr "<<<=" expr
  406            | expr ">>>=" expr

  407 expr_assign_pipe_right: "@ <|" expr_block
  408                       | "@@ <|" expr_block
  409                       | "$ <|" expr_block
  410                       | expr_call_pipe

  411 expr_assign_pipe: expr '=' expr_assign_pipe_right
  412                 | expr "<-" expr_assign_pipe_right
  413                 | expr "&=" expr_assign_pipe_right
  414                 | expr "|=" expr_assign_pipe_right
  415                 | expr "^=" expr_assign_pipe_right
  416                 | expr "&&=" expr_assign_pipe_right
  417                 | expr "||=" expr_assign_pipe_right
  418                 | expr "^^=" expr_assign_pipe_right
  419                 | expr "+=" expr_assign_pipe_right
  420                 | expr "-=" expr_assign_pipe_right
  421                 | expr "*=" expr_assign_pipe_right
  422                 | expr "/=" expr_assign_pipe_right
  423                 | expr "%=" expr_assign_pipe_right
  424                 | expr "<<=" expr_assign_pipe_right
  425                 | expr ">>=" expr_assign_pipe_right
  426                 | expr "<<<=" expr_assign_pipe_right
  427                 | expr ">>>=" expr_assign_pipe_right

  428 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  429                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  430 expr_method_call: expr "->" "name" '(' ')'
  431                 | expr "->" "name" '(' expr_list ')'

  432 func_addr_name: name_in_namespace
  433               | "$i" '(' expr ')'

  434 func_addr_expr: '@' '@' func_addr_name

  435 $@23: %empty

  436 $@24: %empty

  437 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name

  438 $@25: %empty

  439 $@26: %empty

  440 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name

  441 expr_field: expr '.' "name"
  442           | expr '.' '.' "name"
  443           | expr '.' "name" '(' ')'
  444           | expr '.' "name" '(' expr_list ')'
  445           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr '.' basic_type_declaration '(' ')'
  447           | expr '.' basic_type_declaration '(' expr_list ')'

  448 $@27: %empty

  449 $@28: %empty

  450 expr_field: expr '.' $@27 error $@28

  451 expr_call: name_in_namespace '(' ')'
  452          | name_in_namespace '(' "uninitialized" ')'
  453          | name_in_namespace '(' make_struct_single ')'
  454          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  455          | name_in_namespace '(' expr_list ')'
  456          | basic_type_declaration '(' ')'
  457          | basic_type_declaration '(' expr_list ')'

  458 expr: "null"
  459     | name_in_namespace
  460     | expr_numeric_const
  461     | expr_reader
  462     | string_builder
  463     | make_decl
  464     | "true"
  465     | "false"
  466     | expr_field
  467     | expr_mtag
  468     | '!' expr
  469     | '~' expr
  470     | '+' expr
  471     | '-' expr
  472     | expr "<<" expr
  473     | expr ">>" expr
  474     | expr "<<<" expr
  475     | expr ">>>" expr
  476     | expr '+' expr
  477     | expr '-' expr
  478     | expr '*' expr
  479     | expr '/' expr
  480     | expr '%' expr
  481     | expr '<' expr
  482     | expr '>' expr
  483     | expr "==" expr
  484     | expr "!=" expr
  485     | expr "<=" expr
  486     | expr ">=" expr
  487     | expr '&' expr
  488     | expr '|' expr
  489     | expr '^' expr
  490     | expr "&&" expr
  491     | expr "||" expr
  492     | expr "^^" expr
  493     | expr ".." expr
  494     | "++" expr
  495     | "--" expr
  496     | expr "++"
  497     | expr "--"
  498     | '(' expr_list optional_comma ')'
  499     | '(' make_struct_single ')'
  500     | expr '[' expr ']'
  501     | expr '.' '[' expr ']'
  502     | expr "?[" expr ']'
  503     | expr '.' "?[" expr ']'
  504     | expr "?." "name"
  505     | expr '.' "?." "name"
  506     | func_addr_expr
  507     | expr_call
  508     | '*' expr
  509     | "deref" '(' expr ')'
  510     | "addr" '(' expr ')'
  511     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  512     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  513     | expr "??" expr
  514     | expr '?' expr ':' expr

  515 $@29: %empty

  516 $@30: %empty

  517 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr "is" basic_type_declaration
  519     | expr "is" "name"
  520     | expr "as" "name"

  521 $@31: %empty

  522 $@32: %empty

  523 expr: expr "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr "as" basic_type_declaration
  525     | expr '?' "as" "name"

  526 $@33: %empty

  527 $@34: %empty

  528 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr '?' "as" basic_type_declaration
  530     | expr_type_info
  531     | expr_type_decl
  532     | expr_cast
  533     | expr_new
  534     | expr_method_call
  535     | expr_named_call
  536     | expr_full_block
  537     | expr "<|" expr
  538     | expr "|>" expr
  539     | expr "|>" basic_type_declaration
  540     | name_in_namespace "name"
  541     | "unsafe" '(' expr ')'
  542     | expression_keyword

  543 expr_mtag: "$$" '(' expr ')'
  544          | "$i" '(' expr ')'
  545          | "$v" '(' expr ')'
  546          | "$b" '(' expr ')'
  547          | "$a" '(' expr ')'
  548          | "..."
  549          | "$c" '(' expr ')' '(' ')'
  550          | "$c" '(' expr ')' '(' expr_list ')'
  551          | expr '.' "$f" '(' expr ')'
  552          | expr "?." "$f" '(' expr ')'
  553          | expr '.' '.' "$f" '(' expr ')'
  554          | expr '.' "?." "$f" '(' expr ')'
  555          | expr "as" "$f" '(' expr ')'
  556          | expr '?' "as" "$f" '(' expr ')'
  557          | expr "is" "$f" '(' expr ')'
  558          | '@' '@' "$c" '(' expr ')'

  559 optional_field_annotation: %empty
  560                          | "[[" annotation_argument_list ']' ']'
  561                          | metadata_argument_list

  562 optional_override: %empty
  563                  | "override"
  564                  | "sealed"

  565 optional_constant: %empty
  566                  | "const"

  567 optional_public_or_private_member_variable: %empty
  568                                           | "public"
  569                                           | "private"

  570 optional_static_member_variable: %empty
  571                                | "static"

  572 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  573 struct_variable_declaration_list: %empty
  574                                 | struct_variable_declaration_list semicolon

  575 $@35: %empty

  576 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration semicolon

  577 $@36: %empty

  578 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon

  579 $@37: %empty

  580 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block
  581                                 | struct_variable_declaration_list '[' annotation_list ']' semicolon

  582 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type

  583 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type
  584                                   | "$a" '(' expr ')'

  585 function_argument_list: function_argument_declaration_no_type
  586                       | function_argument_declaration_type
  587                       | function_argument_declaration_no_type semicolon function_argument_list
  588                       | function_argument_declaration_type semicolon function_argument_list
  589                       | function_argument_declaration_type ',' function_argument_list

  590 tuple_type: type_declaration
  591           | "name" ':' type_declaration

  592 tuple_type_list: tuple_type
  593                | tuple_type_list c_or_s tuple_type

  594 tuple_alias_type_list: %empty
  595                      | tuple_alias_type_list c_or_s
  596                      | tuple_alias_type_list tuple_type c_or_s

  597 variant_type: "name" ':' type_declaration

  598 variant_type_list: variant_type
  599                  | variant_type_list c_or_s variant_type

  600 variant_alias_type_list: %empty
  601                        | variant_alias_type_list c_or_s
  602                        | variant_alias_type_list variant_type c_or_s

  603 copy_or_move: '='
  604             | "<-"

  605 variable_declaration_no_type: variable_name_with_pos_list
  606                             | variable_name_with_pos_list '&'
  607                             | variable_name_with_pos_list copy_or_move expr

  608 variable_declaration_type: variable_name_with_pos_list ':' type_declaration
  609                          | variable_name_with_pos_list ':' type_declaration copy_or_move expr

  610 variable_declaration: variable_declaration_type
  611                     | variable_declaration_no_type

  612 copy_or_move_or_clone: '='
  613                      | "<-"
  614                      | ":="

  615 optional_ref: %empty
  616             | '&'

  617 let_variable_name_with_pos_list: "name"
  618                                | "$i" '(' expr ')'
  619                                | "name" "aka" "name"
  620                                | let_variable_name_with_pos_list ',' "name"
  621                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  622 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options semicolon
  623                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  624                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  625                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr semicolon
  626                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  627 global_variable_declaration_list: %empty
  628                                 | global_variable_declaration_list "end of line"

  629 $@38: %empty

  630 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation let_variable_declaration

  631 optional_shared: %empty
  632                | "shared"

  633 optional_public_or_private_variable: %empty
  634                                    | "private"
  635                                    | "public"

  636 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block

  637 $@39: %empty

  638 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

  639 enum_list: %empty
  640          | enum_list semicolon
  641          | enum_list "name" semicolon
  642          | enum_list "name" '=' expr semicolon

  643 optional_public_or_private_alias: %empty
  644                                 | "private"
  645                                 | "public"

  646 $@40: %empty

  647 single_alias: optional_public_or_private_alias "name" $@40 '=' type_declaration

  648 alias_list: single_alias semicolon
  649           | alias_list single_alias semicolon

  650 alias_declaration: "typedef" open_block alias_list close_block

  651 $@41: %empty

  652 alias_declaration: "typedef" $@41 single_alias semicolon

  653 optional_public_or_private_enum: %empty
  654                                | "private"
  655                                | "public"

  656 enum_name: "name"

  657 $@42: %empty

  658 $@43: %empty

  659 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block

  660 $@44: %empty

  661 $@45: %empty

  662 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

  663 optional_structure_parent: %empty
  664                          | ':' name_in_namespace

  665 optional_sealed: %empty
  666                | "sealed"

  667 structure_name: optional_sealed "name" optional_structure_parent

  668 class_or_struct: "class"
  669                | "struct"
  670                | "template" "class"
  671                | "template" "struct"

  672 optional_public_or_private_structure: %empty
  673                                     | "private"
  674                                     | "public"

  675 optional_struct_variable_declaration_list: %empty
  676                                          | open_block struct_variable_declaration_list close_block

  677 $@46: %empty

  678 $@47: %empty

  679 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

  680 variable_name_with_pos_list: "name"
  681                            | "$i" '(' expr ')'
  682                            | "name" "aka" "name"
  683                            | variable_name_with_pos_list ',' "name"
  684                            | variable_name_with_pos_list ',' "name" "aka" "name"

  685 basic_type_declaration: "bool"
  686                       | "string"
  687                       | "int"
  688                       | "int8"
  689                       | "int16"
  690                       | "int64"
  691                       | "int2"
  692                       | "int3"
  693                       | "int4"
  694                       | "uint"
  695                       | "uint8"
  696                       | "uint16"
  697                       | "uint64"
  698                       | "uint2"
  699                       | "uint3"
  700                       | "uint4"
  701                       | "float"
  702                       | "float2"
  703                       | "float3"
  704                       | "float4"
  705                       | "void"
  706                       | "range"
  707                       | "urange"
  708                       | "range64"
  709                       | "urange64"
  710                       | "double"
  711                       | "bitfield"

  712 enum_basic_type_declaration: "int"
  713                            | "int8"
  714                            | "int16"
  715                            | "uint"
  716                            | "uint8"
  717                            | "uint16"
  718                            | "int64"
  719                            | "uint64"

  720 structure_type_declaration: name_in_namespace

  721 auto_type_declaration: "auto"
  722                      | "auto" '(' "name" ')'
  723                      | "$t" '(' expr ')'

  724 bitfield_bits: "name"
  725              | bitfield_bits semicolon "name"

  726 bitfield_alias_bits: %empty
  727                    | bitfield_alias_bits semicolon
  728                    | bitfield_alias_bits "name" semicolon

  729 $@48: %empty

  730 $@49: %empty

  731 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' $@49

  732 c_or_s: ','
  733       | semicolon

  734 table_type_pair: type_declaration
  735                | type_declaration c_or_s type_declaration

  736 dim_list: '[' expr ']'
  737         | dim_list '[' expr ']'

  738 type_declaration_no_options: basic_type_declaration
  739                            | auto_type_declaration
  740                            | bitfield_type_declaration
  741                            | structure_type_declaration
  742                            | type_declaration_no_options dim_list
  743                            | type_declaration_no_options '[' ']'

  744 $@50: %empty

  745 $@51: %empty

  746 type_declaration_no_options: "type" '<' $@50 type_declaration '>' $@51
  747                            | "typedecl" '(' expr ')'
  748                            | '$' name_in_namespace '(' optional_expr_list ')'

  749 $@52: %empty

  750 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  751                            | type_declaration_no_options '-' '[' ']'
  752                            | type_declaration_no_options "explicit"
  753                            | type_declaration_no_options "const"
  754                            | type_declaration_no_options '-' "const"
  755                            | type_declaration_no_options '&'
  756                            | type_declaration_no_options '-' '&'
  757                            | type_declaration_no_options '#'
  758                            | type_declaration_no_options "implicit"
  759                            | type_declaration_no_options '-' '#'
  760                            | type_declaration_no_options "==" "const"
  761                            | type_declaration_no_options "==" '&'
  762                            | type_declaration_no_options '?'

  763 $@53: %empty

  764 $@54: %empty

  765 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' $@54
  766                            | type_declaration_no_options "??"

  767 $@55: %empty

  768 $@56: %empty

  769 type_declaration_no_options: "array" '<' $@55 type_declaration '>' $@56

  770 $@57: %empty

  771 $@58: %empty

  772 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' $@58

  773 $@59: %empty

  774 $@60: %empty

  775 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' $@60
  776                            | "block"

  777 $@61: %empty

  778 $@62: %empty

  779 type_declaration_no_options: "block" '<' $@61 type_declaration '>' $@62

  780 $@63: %empty

  781 $@64: %empty

  782 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64
  783                            | "function"

  784 $@65: %empty

  785 $@66: %empty

  786 type_declaration_no_options: "function" '<' $@65 type_declaration '>' $@66

  787 $@67: %empty

  788 $@68: %empty

  789 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  790                            | "lambda"

  791 $@69: %empty

  792 $@70: %empty

  793 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' $@70

  794 $@71: %empty

  795 $@72: %empty

  796 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72

  797 $@73: %empty

  798 $@74: %empty

  799 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' $@74

  800 $@75: %empty

  801 $@76: %empty

  802 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' $@76

  803 type_declaration: type_declaration_no_options
  804                 | type_declaration '|' type_declaration_no_options
  805                 | type_declaration '|' '#'

  806 $@77: %empty

  807 $@78: %empty

  808 $@79: %empty

  809 $@80: %empty

  810 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

  811 $@81: %empty

  812 $@82: %empty

  813 $@83: %empty

  814 $@84: %empty

  815 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

  816 $@85: %empty

  817 $@86: %empty

  818 $@87: %empty

  819 $@88: %empty

  820 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block

  821 make_decl: make_struct_decl
  822          | make_dim_decl
  823          | make_table_decl
  824          | array_comprehension
  825          | make_tuple_call

  826 make_struct_fields: "name" copy_or_move expr
  827                   | "name" ":=" expr
  828                   | make_struct_fields ',' "name" copy_or_move expr
  829                   | make_struct_fields ',' "name" ":=" expr
  830                   | "$f" '(' expr ')' copy_or_move expr
  831                   | "$f" '(' expr ')' ":=" expr
  832                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  833                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  834 make_variant_dim: %empty
  835                 | make_struct_fields

  836 make_struct_single: make_struct_fields optional_comma

  837 make_struct_dim: make_struct_fields
  838                | make_struct_dim "end of expression" make_struct_fields

  839 make_struct_dim_list: '(' make_struct_fields ')'
  840                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  841 make_struct_dim_decl: make_struct_fields
  842                     | make_struct_dim_list optional_comma

  843 optional_make_struct_dim_decl: make_struct_dim_decl
  844                              | %empty

  845 optional_block: %empty
  846               | "where" expr_block

  847 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  848                                    | ";}}"

  849 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  850                                    | ";}]"

  851 optional_trailing_semicolon_sqr_sqr: ']' ']'
  852                                    | ";]]"

  853 optional_trailing_delim_sqr_sqr: ']' ']'
  854                                | ";]]"
  855                                | ",]]"

  856 optional_trailing_delim_cur_sqr: "end of code block" ']'
  857                                | ";}]"
  858                                | ",}]"

  859 use_initializer: %empty
  860                | "uninitialized"

  861 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  862                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  863                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  864                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  865                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  866                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  867 $@89: %empty

  868 $@90: %empty

  869 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

  870 $@91: %empty

  871 $@92: %empty

  872 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

  873 $@93: %empty

  874 $@94: %empty

  875 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

  876 $@95: %empty

  877 $@96: %empty

  878 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer

  879 make_tuple: expr
  880           | expr "=>" expr
  881           | make_tuple ',' expr

  882 make_map_tuple: expr "=>" expr
  883               | expr

  884 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  885 $@97: %empty

  886 $@98: %empty

  887 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

  888 make_dim: make_tuple
  889         | make_dim "end of expression" make_tuple

  890 make_dim_decl: '[' optional_expr_list ']'
  891              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  892              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  893 $@99: %empty

  894 $@100: %empty

  895 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

  896 $@101: %empty

  897 $@102: %empty

  898 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  899 $@103: %empty

  900 $@104: %empty

  901 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'
  902              | "array" '(' expr_list optional_comma ')'

  903 $@105: %empty

  904 $@106: %empty

  905 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'
  906              | "fixed_array" '(' expr_list optional_comma ')'

  907 $@107: %empty

  908 $@108: %empty

  909 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

  910 make_table: make_map_tuple
  911           | make_table "end of expression" make_map_tuple

  912 expr_map_tuple_list: make_map_tuple
  913                    | expr_map_tuple_list ',' make_map_tuple

  914 make_table_decl: "begin of code block" optional_expr_map_tuple_list "end of code block"
  915                | "{{" make_table optional_trailing_semicolon_cur_cur
  916                | "table" '(' optional_expr_map_tuple_list ')'
  917                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  918                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  919 array_comprehension_where: %empty
  920                          | "end of expression" "where" expr

  921 optional_comma: %empty
  922               | ','

  923 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  924                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  925                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  926                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  927                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  928                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 121 137 468
    '#' (35) 757 759 805
    '$' (36) 20 363 748 750
    '%' (37) 41 48 157 480
    '&' (38) 165 366 487 606 616 755 756 761
    '(' (40) 108 119 125 132 133 276 302 303 304 305 332 333 336 337 352 353 354 355 356 357 370 375 428 429 430 431 433 443 444 445 446 447 451 452 453 454 455 456 457 498 499 509 510 511 512 541 543 544 545 546 547 549 550 551 552 553 554 555 556 557 558 584 618 681 722 723 747 748 750 830 831 832 833 839 840 863 864 866 869 872 875 884 887 895 898 901 902 905 906 909 916 917 918
    ')' (41) 108 119 125 132 133 276 302 303 304 305 332 333 336 337 352 353 354 355 356 357 370 375 428 429 430 431 433 443 444 445 446 447 451 452 453 454 455 456 457 498 499 509 510 511 512 541 543 544 545 546 547 549 550 551 552 553 554 555 556 557 558 584 618 681 722 723 747 748 750 830 831 832 833 839 840 863 864 866 869 872 875 884 887 895 898 901 902 905 906 909 916 917 918
    '*' (42) 155 478 508
    '+' (43) 153 470 476
    ',' (44) 57 97 110 128 329 359 372 429 589 620 621 683 684 732 828 829 832 833 840 881 913 922
    '-' (45) 154 471 477 751 754 756 759
    '.' (46) 49 182 184 185 186 187 188 189 190 191 192 193 194 195 196 441 442 443 444 445 446 447 450 501 503 505 551 553 554
    '/' (47) 50 156 479
    ':' (58) 33 59 60 135 330 331 332 333 514 591 597 608 609 622 623 624 662 664
    "end of expression" (59) 69 357 838 889 911 920 923 924 925 926 927 928
    '<' (60) 158 247 283 286 299 342 345 348 351 353 354 356 357 437 440 481 511 512 517 523 528 731 746 750 765 769 772 775 779 782 786 789 793 796 799 802 869 872 875 878 887 895 898 901 905 909 917 918
    '=' (61) 89 101 102 103 104 105 106 108 367 389 411 603 612 642 647
    '>' (62) 159 247 283 286 299 342 345 348 351 353 354 356 357 437 440 482 511 512 517 523 528 731 746 750 765 769 772 775 779 782 786 789 793 796 799 802 869 872 875 878 887 895 898 901 905 909 917 918
    '?' (63) 205 206 514 525 528 529 556 762
    '@' (64) 111 112 364 365 434 437 440 558
    '[' (91) 130 180 428 429 445 500 501 581 736 737 743 751 890 923 924
    ']' (93) 130 180 181 330 331 334 335 374 428 429 445 500 501 502 503 560 581 736 737 743 751 849 851 853 856 890 923 924 925 926
    '^' (94) 167 489
    "begin of code block" (123) 239 914 927
    '|' (124) 166 488 804 805
    "end of code block" (125) 241 847 849 856 914 926 927 928
    '~' (126) 138 469
    error (256) 271 450
    "lexer error" (258)
    "capture" (259) 375
    "struct" (260) 669 671 869 895
    "class" (261) 668 670 872
    "let" (262) 321 324
    "def" (263) 232 578 580
    "while" (264) 86
    "if" (265) 70 82
    "static_if" (266) 71
    "else" (267) 66 74
    "for" (268) 84 923 924 925 926 927 928
    "recover" (269) 320
    "true" (270) 94 105 464
    "false" (271) 95 106 465
    "new" (272) 301 302 303 304 305 306
    "typeinfo" (273) 352 353 354 355 356 357
    "type" (274) 99 351 517 523 528 746
    "in" (275) 84 100 923 924 925 926 927 928
    "is" (276) 201 203 517 518 519 557
    "as" (277) 52 202 204 205 206 520 523 524 525 528 529 555 556
    "elif" (278) 63
    "static_elif" (279) 64
    "array" (280) 769 895 898 901 902 905
    "return" (281) 309 310 311 313 314
    "null" (282) 458
    "break" (283) 307
    "try" (284) 320
    "options" (285) 42
    "table" (286) 772 916 917 918
    "expect" (287) 55
    "const" (288) 566 753 754 760
    "require" (289) 43 115
    "operator" (290) 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
    "enum" (291) 659 662
    "finally" (292) 244
    "delete" (293) 199 295 296
    "deref" (294) 509
    "typedef" (295) 650 652
    "typedecl" (296) 747
    "with" (297) 87
    "aka" (298) 619 621 682 684
    "assume" (299) 89
    "cast" (300) 342
    "override" (301) 563
    "abstract" (302) 578
    "upcast" (303) 345
    "iterator" (304) 775 924
    "var" (305) 322 325
    "addr" (306) 510
    "continue" (307) 308
    "where" (308) 846 920
    "pass" (309) 268
    "reinterpret" (310) 348
    "module" (311) 22
    "public" (312) 18 54 235 568 635 645 655 674
    "label" (313) 60 61
    "goto" (314) 61 62
    "implicit" (315) 758
    "explicit" (316) 296 752
    "shared" (317) 632
    "private" (318) 19 116 234 569 634 644 654 673
    "smart_ptr" (319) 765
    "unsafe" (320) 85 541
    "inscope" (321) 326
    "static" (322) 571
    "fixed_array" (323) 906 909
    "default" (324) 878
    "uninitialized" (325) 305 452 454 860
    "bool" (326) 207 685
    "void" (327) 705
    "string" (328) 208 686
    "auto" (329) 721 722
    "int" (330) 209 687 712
    "int2" (331) 210 691
    "int3" (332) 211 692
    "int4" (333) 212 693
    "uint" (334) 213 694 715
    "bitfield" (335) 711 731 820
    "uint2" (336) 214 698
    "uint3" (337) 215 699
    "uint4" (338) 216 700
    "float" (339) 217 701
    "float2" (340) 218 702
    "float3" (341) 219 703
    "float4" (342) 220 704
    "range" (343) 221 706
    "urange" (344) 222 707
    "range64" (345) 223 708
    "urange64" (346) 224 709
    "block" (347) 776 779 782
    "int64" (348) 225 690 718
    "uint64" (349) 226 697 719
    "double" (350) 227 710
    "function" (351) 783 786 789
    "lambda" (352) 790 793 796
    "int8" (353) 228 688 713
    "uint8" (354) 229 695 716
    "int16" (355) 230 689 714
    "uint16" (356) 231 696 717
    "tuple" (357) 799 810 884 887 898
    "variant" (358) 802 815 875 901
    "generator" (359) 247 511 512
    "yield" (360) 315 316 318 319
    "sealed" (361) 564 666
    "template" (362) 117 670 671
    "+=" (363) 139 186 398 419
    "-=" (364) 140 187 399 420
    "/=" (365) 142 189 401 422
    "*=" (366) 141 188 400 421
    "%=" (367) 143 190 402 423
    "&=" (368) 144 191 392 413
    "|=" (369) 145 192 393 414
    "^=" (370) 146 193 394 415
    "<<" (371) 172 472
    ">>" (372) 173 473
    "++" (373) 168 170 494 496
    "--" (374) 169 171 495 497
    "<=" (375) 163 485
    "<<=" (376) 174 403 424
    ">>=" (377) 175 404 425
    ">=" (378) 164 486
    "==" (379) 161 483 760 761
    "!=" (380) 162 484
    "->" (381) 430 431
    "<-" (382) 311 314 316 319 362 368 390 412 604 613
    "??" (383) 200 513 766
    "?." (384) 183 197 504 505 552 554
    "?[" (385) 181 502 503
    "<|" (386) 537
    " <|" (387) 287
    "$ <|" (388) 290 409
    "@ <|" (389) 288 407
    "@@ <|" (390) 289 408
    "|>" (391) 126 538 539
    ":=" (392) 185 198 369 391 614 827 829 831 833
    "<<<" (393) 176 474
    ">>>" (394) 177 475
    "<<<=" (395) 178 405 426
    ">>>=" (396) 179 406 427
    "=>" (397) 361 362 880 882
    "::" (398) 293 294
    "&&" (399) 122 150 490
    "||" (400) 123 151 491
    "^^" (401) 124 152 492
    "&&=" (402) 147 194 395 416
    "||=" (403) 148 195 396 417
    "^^=" (404) 149 196 397 418
    ".." (405) 160 493
    "$$" (406) 543
    "$i" (407) 433 544 618 681
    "$v" (408) 545
    "$b" (409) 546
    "$a" (410) 547 584
    "$t" (411) 723
    "$c" (412) 549 550 558
    "$f" (413) 551 552 553 554 555 556 557 830 831 832 833
    "..." (414) 548
    "[[" (415) 330 331 334 335 374 560 861 862 863 864 891 925
    "[{" (416) 865 866 892 926
    "{{" (417) 915 928
    "new scope" <i> (418) 240
    "close scope" <i> (419) 242
    "end of line" (420) 68 628
    "integer constant" <i> (421) 58 59 60 61 92 103 381
    "long integer constant" <i64> (422) 383
    "unsigned integer constant" <ui> (423) 382
    "unsigned long integer constant" <ui64> (424) 384
    "unsigned int8 constant" <ui> (425) 385
    "floating point constant" <fd> (426) 93 104 386
    "double constant" <d> (427) 387
    "name" <s> (428) 21 44 52 89 91 98 102 136 184 185 186 187 188 189 190 191 192 193 194 195 196 197 203 204 206 292 293 294 328 329 353 354 356 357 366 367 368 369 370 430 431 441 442 443 444 445 504 505 519 520 525 540 591 597 617 619 620 621 641 642 647 656 667 680 682 683 684 722 724 725 728 810 815 820 826 827 828 829
    "keyword" <s> (429) 45 272 283
    "type function" <s> (430) 46 286
    "start of the string" (431) 27 28 37
    STRING_CHARACTER <ch> (432) 23 25 30 38 39
    STRING_CHARACTER_ESC (433) 24 26
    "end of the string" (434) 27 28 37
    "{" (435) 36
    "}" (436) 36
    "end of failed eader macro" (437)
    ";}}" (438) 848
    ";}]" (439) 850 857
    ";]]" (440) 852 854
    ",]]" (441) 855
    ",}]" (442) 858
    UNARY_MINUS (443)
    UNARY_PLUS (444)
    PRE_INC (445)
    PRE_DEC (446)
    POST_INC (447)
    POST_DEC (448)
    DEREF (449)


Nonterminals, with rules where they appear

    $accept (222)
        on left: 0
    program (223)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (224)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (225)
        on left: 17 18 19
        on right: 22
    module_name <s> (226)
        on left: 20 21
        on right: 22
    module_declaration (227)
        on left: 22
        on right: 2
    character_sequence <s> (228)
        on left: 23 24 25 26
        on right: 25 26 27 35
    string_constant <s> (229)
        on left: 27 28
        on right: 90 101
    format_string <s> (230)
        on left: 29 30
        on right: 30 33
    optional_format_string <s> (231)
        on left: 31 33
        on right: 36
    $@1 (232)
        on left: 32
        on right: 33
    string_builder_body <pExpression> (233)
        on left: 34 35 36
        on right: 35 36 37
    string_builder <pExpression> (234)
        on left: 37
        on right: 462
    reader_character_sequence (235)
        on left: 38 39
        on right: 39 41
    expr_reader <pExpression> (236)
        on left: 41
        on right: 16 461
    $@2 (237)
        on left: 40
        on right: 41
    options_declaration (238)
        on left: 42
        on right: 9
    require_declaration (239)
        on left: 43
        on right: 8
    keyword_or_name <s> (240)
        on left: 44 45 46
        on right: 47 49 50
    require_module_name <s> (241)
        on left: 47 48 49 50
        on right: 48 49 50 51 52
    require_module (242)
        on left: 51 52
        on right: 43
    is_public_module <b> (243)
        on left: 53 54
        on right: 51 52
    expect_declaration (244)
        on left: 55
        on right: 7
    expect_list (245)
        on left: 56 57
        on right: 55 57
    expect_error (246)
        on left: 58 59
        on right: 56 57
    expression_label <pExpression> (247)
        on left: 60
        on right: 266
    expression_goto <pExpression> (248)
        on left: 61 62
        on right: 267
    elif_or_static_elif <b> (249)
        on left: 63 64
        on right: 67
    expression_else <pExpression> (250)
        on left: 65 66 67
        on right: 67 80
    semicolon (251)
        on left: 68 69
        on right: 15 16 82 113 248 252 253 260 261 266 267 268 312 317 330 332 334 336 574 576 578 581 587 588 622 623 625 640 641 642 648 649 652 725 727 728 733
    if_or_static_if <b> (252)
        on left: 70 71
        on right: 80
    expression_else_one_liner <pExpression> (253)
        on left: 72 74
        on right: 82
    $@3 (254)
        on left: 73
        on right: 74
    expression_if_one_liner <pExpression> (255)
        on left: 75 76 77 78 79
        on right: 74 82
    expression_if_then_else <pExpression> (256)
        on left: 80 82
        on right: 264
    $@4 (257)
        on left: 81
        on right: 82
    expression_for_loop <pExpression> (258)
        on left: 84
        on right: 259
    $@5 (259)
        on left: 83
        on right: 84
    expression_unsafe <pExpression> (260)
        on left: 85
        on right: 256
    expression_while_loop <pExpression> (261)
        on left: 86
        on right: 255
    expression_with <pExpression> (262)
        on left: 87
        on right: 257
    expression_with_alias <pExpression> (263)
        on left: 89
        on right: 258
    $@6 (264)
        on left: 88
        on right: 89
    annotation_argument_value <aa> (265)
        on left: 90 91 92 93 94 95
        on right: 96 97
    annotation_argument_value_list <aaList> (266)
        on left: 96 97
        on right: 97 108
    annotation_argument_name <s> (267)
        on left: 98 99 100
        on right: 101 102 103 104 105 106 107 108
    annotation_argument <aa> (268)
        on left: 101 102 103 104 105 106 107 108
        on right: 109 110 111 112
    annotation_argument_list <aaList> (269)
        on left: 109 110
        on right: 42 110 119 560
    metadata_argument_list <aaList> (270)
        on left: 111 112 113
        on right: 112 113 561
    annotation_declaration_name <s> (271)
        on left: 114 115 116 117
        on right: 118 119
    annotation_declaration_basic <fa> (272)
        on left: 118 119
        on right: 120
    annotation_declaration <fa> (273)
        on left: 120 121 122 123 124 125 126
        on right: 121 122 123 124 125 126 127 128
    annotation_list <faList> (274)
        on left: 127 128
        on right: 128 130 581
    optional_annotation_list <faList> (275)
        on left: 129 130
        on right: 232 377 378 380 578 580 659 662 679
    optional_function_argument_list <pVarDeclList> (276)
        on left: 131 132 133
        on right: 236 377 378 380 440 782 789 796
    optional_function_type <pTypeDecl> (277)
        on left: 134 135
        on right: 236 377 378 380 440 782 789 796
    function_name <s> (278)
        on left: 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231
        on right: 236
    global_function_declaration (279)
        on left: 232
        on right: 6
    optional_public_or_private_function <b> (280)
        on left: 233 234 235
        on right: 238
    function_declaration_header <pFuncDecl> (281)
        on left: 236
        on right: 238 578 580
    function_declaration <pFuncDecl> (282)
        on left: 238
        on right: 232
    $@7 (283)
        on left: 237
        on right: 238
    open_block (284)
        on left: 239 240
        on right: 243 244 636 650 659 662 676 810 815 820
    close_block (285)
        on left: 241 242
        on right: 243 244 636 650 659 662 676 810 815 820
    expression_block <pExpression> (286)
        on left: 243 244
        on right: 66 67 80 84 85 86 87 238 272 320 360 376 380 580
    expr_call_pipe <pExpression> (287)
        on left: 245 246 247
        on right: 291 410
    expression_any <pExpression> (288)
        on left: 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268
        on right: 270
    expressions <pExpression> (289)
        on left: 269 270 271
        on right: 243 244 270 271
    expr_keyword <pExpression> (290)
        on left: 272
        on right: 250
    optional_expr_list <pExpression> (291)
        on left: 273 274
        on right: 276 748 750 890 905
    optional_expr_list_in_braces <pExpression> (292)
        on left: 275 276
        on right: 286
    optional_expr_map_tuple_list <pExpression> (293)
        on left: 277 278
        on right: 914 916 917 918
    type_declaration_no_options_list <pTypeDeclList> (294)
        on left: 279 280
        on right: 280 283 286 750
    expression_keyword <pExpression> (295)
        on left: 283 286
        on right: 246 542
    $@8 (296)
        on left: 281
        on right: 283
    $@9 (297)
        on left: 282
        on right: 283
    $@10 (298)
        on left: 284
        on right: 286
    $@11 (299)
        on left: 285
        on right: 286
    expr_pipe <pExpression> (300)
        on left: 287 288 289 290 291
        on right: 249 313 314 318 319 331 333 335 337 624 626
    name_in_namespace <s> (301)
        on left: 292 293 294
        on right: 41 114 352 353 354 355 356 357 428 429 432 451 452 453 454 455 459 540 664 720 748 750
    expression_delete <pExpression> (302)
        on left: 295 296
        on right: 253
    new_type_declaration <pTypeDecl> (303)
        on left: 299 300
        on right: 301 302 303 304 305
    $@12 (304)
        on left: 297
        on right: 299
    $@13 (305)
        on left: 298
        on right: 299
    expr_new <pExpression> (306)
        on left: 301 302 303 304 305 306
        on right: 533
    expression_break <pExpression> (307)
        on left: 307
        on right: 78 260
    expression_continue <pExpression> (308)
        on left: 308
        on right: 79 261
    expression_return_no_pipe <pExpression> (309)
        on left: 309 310 311
        on right: 76 312
    expression_return <pExpression> (310)
        on left: 312 313 314
        on right: 262
    expression_yield_no_pipe <pExpression> (311)
        on left: 315 316
        on right: 77 317
    expression_yield <pExpression> (312)
        on left: 317 318 319
        on right: 263
    expression_try_catch <pExpression> (313)
        on left: 320
        on right: 265
    kwd_let_var_or_nothing <b> (314)
        on left: 321 322 323
        on right: 582 583
    kwd_let <b> (315)
        on left: 324 325
        on right: 338 339 636 638
    optional_in_scope <b> (316)
        on left: 326 327
        on right: 338 339
    tuple_expansion <pNameList> (317)
        on left: 328 329
        on right: 329 330 331 332 333 334 335 336 337
    tuple_expansion_variable_declaration <pVarDecl> (318)
        on left: 330 331 332 333 334 335 336 337
        on right: 339
    expression_let <pExpression> (319)
        on left: 338 339
        on right: 254
    expr_cast <pExpression> (320)
        on left: 342 345 348
        on right: 532
    $@14 (321)
        on left: 340
        on right: 342
    $@15 (322)
        on left: 341
        on right: 342
    $@16 (323)
        on left: 343
        on right: 345
    $@17 (324)
        on left: 344
        on right: 345
    $@18 (325)
        on left: 346
        on right: 348
    $@19 (326)
        on left: 347
        on right: 348
    expr_type_decl <pExpression> (327)
        on left: 351
        on right: 531
    $@20 (328)
        on left: 349
        on right: 351
    $@21 (329)
        on left: 350
        on right: 351
    expr_type_info <pExpression> (330)
        on left: 352 353 354 355 356 357
        on right: 530
    expr_list <pExpression> (331)
        on left: 358 359
        on right: 84 274 303 310 311 359 429 431 444 447 455 457 498 550 884 902 906 909 923 924 925 926 927 928
    block_or_simple_block <pExpression> (332)
        on left: 360 361 362
        on right: 377 378
    block_or_lambda <i> (333)
        on left: 363 364 365
        on right: 377 378 380
    capture_entry <pCapt> (334)
        on left: 366 367 368 369 370
        on right: 371 372
    capture_list <pCaptList> (335)
        on left: 371 372
        on right: 372 374 375
    optional_capture_list <pCaptList> (336)
        on left: 373 374 375
        on right: 247 377 378 380 511 512
    expr_block <pExpression> (337)
        on left: 376 377
        on right: 287 288 289 290 407 408 409 846
    expr_full_block <pExpression> (338)
        on left: 378
        on right: 536
    expr_full_block_assumed_piped <pExpression> (339)
        on left: 380
        on right: 245 246 247
    $@22 (340)
        on left: 379
        on right: 380
    expr_numeric_const <pExpression> (341)
        on left: 381 382 383 384 385 386 387
        on right: 460
    expr_assign <pExpression> (342)
        on left: 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406
        on right: 252 287
    expr_assign_pipe_right <pExpression> (343)
        on left: 407 408 409 410
        on right: 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427
    expr_assign_pipe <pExpression> (344)
        on left: 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427
        on right: 251
    expr_named_call <pExpression> (345)
        on left: 428 429
        on right: 535
    expr_method_call <pExpression> (346)
        on left: 430 431
        on right: 534
    func_addr_name <pExpression> (347)
        on left: 432 433
        on right: 434 437 440
    func_addr_expr <pExpression> (348)
        on left: 434 437 440
        on right: 506
    $@23 (349)
        on left: 435
        on right: 437
    $@24 (350)
        on left: 436
        on right: 437
    $@25 (351)
        on left: 438
        on right: 440
    $@26 (352)
        on left: 439
        on right: 440
    expr_field <pExpression> (353)
        on left: 441 442 443 444 445 446 447 450
        on right: 466
    $@27 (354)
        on left: 448
        on right: 450
    $@28 (355)
        on left: 449
        on right: 450
    expr_call <pExpression> (356)
        on left: 451 452 453 454 455 456 457
        on right: 507
    expr <pExpression> (357)
        on left: 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 517 518 519 520 523 524 525 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542
        on right
    $@29 (358)
        on left: 515
        on right: 517
    $@30 (359)
        on left: 516
        on right: 517
    $@31 (360)
        on left: 521
        on right: 523
    $@32 (361)
        on left: 522
        on right: 523
    $@33 (362)
        on left: 526
        on right: 528
    $@34 (363)
        on left: 527
        on right: 528
    expr_mtag <pExpression> (364)
        on left: 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558
        on right: 467
    optional_field_annotation <aaList> (365)
        on left: 559 560 561
        on right: 572 582 583 630 638
    optional_override <i> (366)
        on left: 562 563 564
        on right: 572 580
    optional_constant <b> (367)
        on left: 565 566
        on right: 578 580
    optional_public_or_private_member_variable <b> (368)
        on left: 567 568 569
        on right: 572 578 580
    optional_static_member_variable <b> (369)
        on left: 570 571
        on right: 572 580
    structure_variable_declaration <pVarDecl> (370)
        on left: 572
        on right: 576
    struct_variable_declaration_list <pVarDeclList> (371)
        on left: 573 574 576 578 580 581
        on right: 574 576 578 580 581 676
    $@35 (372)
        on left: 575
        on right: 576
    $@36 (373)
        on left: 577
        on right: 578
    $@37 (374)
        on left: 579
        on right: 580
    function_argument_declaration_no_type <pVarDecl> (375)
        on left: 582
        on right: 585 587
    function_argument_declaration_type <pVarDecl> (376)
        on left: 583 584
        on right: 586 588 589
    function_argument_list <pVarDeclList> (377)
        on left: 585 586 587 588 589
        on right: 133 587 588 589
    tuple_type <pVarDecl> (378)
        on left: 590 591
        on right: 592 593 596
    tuple_type_list <pVarDeclList> (379)
        on left: 592 593
        on right: 593 799 887 898
    tuple_alias_type_list <pVarDeclList> (380)
        on left: 594 595 596
        on right: 595 596 810
    variant_type <pVarDecl> (381)
        on left: 597
        on right: 598 599 602
    variant_type_list <pVarDeclList> (382)
        on left: 598 599
        on right: 599 802 875 901
    variant_alias_type_list <pVarDeclList> (383)
        on left: 600 601 602
        on right: 601 602 815
    copy_or_move <b> (384)
        on left: 603 604
        on right: 607 609 826 828 830 832
    variable_declaration_no_type <pVarDecl> (385)
        on left: 605 606 607
        on right: 582 611
    variable_declaration_type <pVarDecl> (386)
        on left: 608 609
        on right: 583 610
    variable_declaration <pVarDecl> (387)
        on left: 610 611
        on right: 572
    copy_or_move_or_clone <i> (388)
        on left: 612 613 614
        on right: 330 331 332 333 334 335 336 337 623 624 625 626
    optional_ref <b> (389)
        on left: 615 616
        on right: 334 335 336 337 625 626
    let_variable_name_with_pos_list <pNameWithPosList> (390)
        on left: 617 618 619 620 621
        on right: 620 621 622 623 624 625 626
    let_variable_declaration <pVarDecl> (391)
        on left: 622 623 624 625 626
        on right: 338 630 638
    global_variable_declaration_list <pVarDeclList> (392)
        on left: 627 628 630
        on right: 628 630 636
    $@38 (393)
        on left: 629
        on right: 630
    optional_shared <b> (394)
        on left: 631 632
        on right: 22 636 638
    optional_public_or_private_variable <b> (395)
        on left: 633 634 635
        on right: 636 638
    global_let (396)
        on left: 636 638
        on right: 5
    $@39 (397)
        on left: 637
        on right: 638
    enum_list <pEnum> (398)
        on left: 639 640 641 642
        on right: 640 641 642 659 662
    optional_public_or_private_alias <b> (399)
        on left: 643 644 645
        on right: 647 810 815 820
    single_alias (400)
        on left: 647
        on right: 648 649 652
    $@40 (401)
        on left: 646
        on right: 647
    alias_list (402)
        on left: 648 649
        on right: 649 650
    alias_declaration (403)
        on left: 650 652
        on right: 10
    $@41 (404)
        on left: 651
        on right: 652
    optional_public_or_private_enum <b> (405)
        on left: 653 654 655
        on right: 659 662
    enum_name <pEnum> (406)
        on left: 656
        on right: 659 662
    enum_declaration (407)
        on left: 659 662
        on right: 4
    $@42 (408)
        on left: 657
        on right: 659
    $@43 (409)
        on left: 658
        on right: 659
    $@44 (410)
        on left: 660
        on right: 662
    $@45 (411)
        on left: 661
        on right: 662
    optional_structure_parent <s> (412)
        on left: 663 664
        on right: 667
    optional_sealed <b> (413)
        on left: 665 666
        on right: 667
    structure_name <pStructure> (414)
        on left: 667
        on right: 679
    class_or_struct <i> (415)
        on left: 668 669 670 671
        on right: 679
    optional_public_or_private_structure <b> (416)
        on left: 672 673 674
        on right: 679
    optional_struct_variable_declaration_list <pVarDeclList> (417)
        on left: 675 676
        on right: 679
    structure_declaration (418)
        on left: 679
        on right: 3
    $@46 (419)
        on left: 677
        on right: 679
    $@47 (420)
        on left: 678
        on right: 679
    variable_name_with_pos_list <pNameWithPosList> (421)
        on left: 680 681 682 683 684
        on right: 84 605 606 607 608 609 683 684 923 924 925 926 927 928
    basic_type_declaration <type> (422)
        on left: 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711
        on right: 446 447 456 457 518 524 529 539 738
    enum_basic_type_declaration <type> (423)
        on left: 712 713 714 715 716 717 718 719
        on right: 662
    structure_type_declaration <pTypeDecl> (424)
        on left: 720
        on right: 300 741
    auto_type_declaration <pTypeDecl> (425)
        on left: 721 722 723
        on right: 739
    bitfield_bits <pNameList> (426)
        on left: 724 725
        on right: 725 731
    bitfield_alias_bits <pNameList> (427)
        on left: 726 727 728
        on right: 727 728 820
    bitfield_type_declaration <pTypeDecl> (428)
        on left: 731
        on right: 740
    $@48 (429)
        on left: 729
        on right: 731
    $@49 (430)
        on left: 730
        on right: 731
    c_or_s (431)
        on left: 732 733
        on right: 280 354 593 595 596 599 601 602 735 918
    table_type_pair <aTypePair> (432)
        on left: 734 735
        on right: 772
    dim_list <pTypeDecl> (433)
        on left: 736 737
        on right: 737 742
    type_declaration_no_options <pTypeDecl> (434)
        on left: 738 739 740 741 742 743 746 747 748 750 751 752 753 754 755 756 757 758 759 760 761 762 765 766 769 772 775 776 779 782 783 786 789 790 793 796 799 802
        on right: 247 330 331 332 333 342 345 348 437 511 512 517 622 623 624 742 743 751 752 753 754 755 756 757 758 759 760 761 762 766 803 804 861 862 863 864 865 866 869 872 878 891 892 895 905 909 917 918
    $@50 (435)
        on left: 744
        on right: 746
    $@51 (436)
        on left: 745
        on right: 746
    $@52 (437)
        on left: 749
        on right: 750
    $@53 (438)
        on left: 763
        on right: 765
    $@54 (439)
        on left: 764
        on right: 765
    $@55 (440)
        on left: 767
        on right: 769
    $@56 (441)
        on left: 768
        on right: 769
    $@57 (442)
        on left: 770
        on right: 772
    $@58 (443)
        on left: 771
        on right: 772
    $@59 (444)
        on left: 773
        on right: 775
    $@60 (445)
        on left: 774
        on right: 775
    $@61 (446)
        on left: 777
        on right: 779
    $@62 (447)
        on left: 778
        on right: 779
    $@63 (448)
        on left: 780
        on right: 782
    $@64 (449)
        on left: 781
        on right: 782
    $@65 (450)
        on left: 784
        on right: 786
    $@66 (451)
        on left: 785
        on right: 786
    $@67 (452)
        on left: 787
        on right: 789
    $@68 (453)
        on left: 788
        on right: 789
    $@69 (454)
        on left: 791
        on right: 793
    $@70 (455)
        on left: 792
        on right: 793
    $@71 (456)
        on left: 794
        on right: 796
    $@72 (457)
        on left: 795
        on right: 796
    $@73 (458)
        on left: 797
        on right: 799
    $@74 (459)
        on left: 798
        on right: 799
    $@75 (460)
        on left: 800
        on right: 802
    $@76 (461)
        on left: 801
        on right: 802
    type_declaration <pTypeDecl> (462)
        on left: 803 804 805
        on right: 135 279 280 299 351 523 528 590 591 597 608 609 647 734 735 746 765 769 775 779 786 793 804 805
    tuple_alias_declaration (463)
        on left: 810
        on right: 12
    $@77 (464)
        on left: 806
        on right: 810
    $@78 (465)
        on left: 807
        on right: 810
    $@79 (466)
        on left: 808
        on right: 810
    $@80 (467)
        on left: 809
        on right: 810
    variant_alias_declaration (468)
        on left: 815
        on right: 11
    $@81 (469)
        on left: 811
        on right: 815
    $@82 (470)
        on left: 812
        on right: 815
    $@83 (471)
        on left: 813
        on right: 815
    $@84 (472)
        on left: 814
        on right: 815
    bitfield_alias_declaration (473)
        on left: 820
        on right: 13
    $@85 (474)
        on left: 816
        on right: 820
    $@86 (475)
        on left: 817
        on right: 820
    $@87 (476)
        on left: 818
        on right: 820
    $@88 (477)
        on left: 819
        on right: 820
    make_decl <pExpression> (478)
        on left: 821 822 823 824 825
        on right: 306 463
    make_struct_fields <pMakeStruct> (479)
        on left: 826 827 828 829 830 831 832 833
        on right: 428 429 445 828 829 832 833 835 836 837 838 839 840 841
    make_variant_dim <pExpression> (480)
        on left: 834 835
        on right: 875 901
    make_struct_single <pExpression> (481)
        on left: 836
        on right: 304 305 453 454 499
    make_struct_dim <pExpression> (482)
        on left: 837 838
        on right: 838 861 864 865 866
    make_struct_dim_list <pExpression> (483)
        on left: 839 840
        on right: 840 842
    make_struct_dim_decl <pExpression> (484)
        on left: 841 842
        on right: 843
    optional_make_struct_dim_decl <pExpression> (485)
        on left: 843 844
        on right: 869 872 887 895 898
    optional_block <pExpression> (486)
        on left: 845 846
        on right: 861 862 863 864 865 866
    optional_trailing_semicolon_cur_cur (487)
        on left: 847 848
        on right: 915
    optional_trailing_semicolon_cur_sqr (488)
        on left: 849 850
        on right: 892
    optional_trailing_semicolon_sqr_sqr (489)
        on left: 851 852
        on right: 891
    optional_trailing_delim_sqr_sqr (490)
        on left: 853 854 855
        on right: 861 862 863 864
    optional_trailing_delim_cur_sqr (491)
        on left: 856 857 858
        on right: 865 866
    use_initializer <b> (492)
        on left: 859 860
        on right: 302 869 872 875 878 887 895 898
    make_struct_decl <pExpression> (493)
        on left: 861 862 863 864 865 866 869 872 875 878
        on right: 821
    $@89 (494)
        on left: 867
        on right: 869
    $@90 (495)
        on left: 868
        on right: 869
    $@91 (496)
        on left: 870
        on right: 872
    $@92 (497)
        on left: 871
        on right: 872
    $@93 (498)
        on left: 873
        on right: 875
    $@94 (499)
        on left: 874
        on right: 875
    $@95 (500)
        on left: 876
        on right: 878
    $@96 (501)
        on left: 877
        on right: 878
    make_tuple <pExpression> (502)
        on left: 879 880 881
        on right: 881 888 889
    make_map_tuple <pExpression> (503)
        on left: 882 883
        on right: 910 911 912 913 927 928
    make_tuple_call <pExpression> (504)
        on left: 884 887
        on right: 825
    $@97 (505)
        on left: 885
        on right: 887
    $@98 (506)
        on left: 886
        on right: 887
    make_dim <pExpression> (507)
        on left: 888 889
        on right: 889 891 892
    make_dim_decl <pExpression> (508)
        on left: 890 891 892 895 898 901 902 905 906 909
        on right: 822
    $@99 (509)
        on left: 893
        on right: 895
    $@100 (510)
        on left: 894
        on right: 895
    $@101 (511)
        on left: 896
        on right: 898
    $@102 (512)
        on left: 897
        on right: 898
    $@103 (513)
        on left: 899
        on right: 901
    $@104 (514)
        on left: 900
        on right: 901
    $@105 (515)
        on left: 903
        on right: 905
    $@106 (516)
        on left: 904
        on right: 905
    $@107 (517)
        on left: 907
        on right: 909
    $@108 (518)
        on left: 908
        on right: 909
    make_table <pExpression> (519)
        on left: 910 911
        on right: 911 915
    expr_map_tuple_list <pExpression> (520)
        on left: 912 913
        on right: 278 913
    make_table_decl <pExpression> (521)
        on left: 914 915 916 917 918
        on right: 823
    array_comprehension_where <pExpression> (522)
        on left: 919 920
        on right: 923 924 925 926 927 928
    optional_comma <b> (523)
        on left: 921 922
        on right: 274 276 278 498 836 842 884 902 906 909
    array_comprehension <pExpression> (524)
        on left: 923 924 925 926 927 928
        on right: 824


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . semicolon

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '%'                  shift, and go to state 15
    '['                  shift, and go to state 16

    $default  reduce using rule 129 (optional_annotation_list)

    top_level_reader_macro       go to state 17
    module_declaration           go to state 18
    expr_reader                  go to state 19
    options_declaration          go to state 20
    require_declaration          go to state 21
    expect_declaration           go to state 22
    semicolon                    go to state 23
    optional_annotation_list     go to state 24
    global_function_declaration  go to state 25
    kwd_let                      go to state 26
    global_let                   go to state 27
    alias_declaration            go to state 28
    enum_declaration             go to state 29
    structure_declaration        go to state 30
    tuple_alias_declaration      go to state 31
    variant_alias_declaration    go to state 32
    bitfield_alias_declaration   go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  324 kwd_let: "let" .

    $default  reduce using rule 324 (kwd_let)


State 4

   42 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   55 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   43 require_declaration: "require" . require_module

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45
    '%'              shift, and go to state 46

    keyword_or_name      go to state 47
    require_module_name  go to state 48
    require_module       go to state 49


State 7

  650 alias_declaration: "typedef" . open_block alias_list close_block
  652                  | "typedef" . $@41 single_alias semicolon

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 651 ($@41)

    open_block  go to state 52
    $@41        go to state 53


State 8

  325 kwd_let: "var" .

    $default  reduce using rule 325 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 54
    '$'     shift, and go to state 55

    module_name  go to state 56


State 10

  820 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 643 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 59


State 11

  810 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 643 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 60


State 12

  815 variant_alias_declaration: "variant" . optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 643 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 61


State 13

   68 semicolon: "end of line" .

    $default  reduce using rule 68 (semicolon)


State 14

   69 semicolon: "end of expression" .

    $default  reduce using rule 69 (semicolon)


State 15

   41 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 64


State 16

  130 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 73
    annotation_list               go to state 74
    name_in_namespace             go to state 75


State 17

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 18

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 19

   16 top_level_reader_macro: expr_reader . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 76


State 20

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 21

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 22

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 23

   15 program: program semicolon .

    $default  reduce using rule 15 (program)


State 24

  232 global_function_declaration: optional_annotation_list . "def" function_declaration
  659 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block
  662                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block
  679 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 77
    "class"     shift, and go to state 78
    "def"       shift, and go to state 79
    "enum"      shift, and go to state 80
    "template"  shift, and go to state 81

    class_or_struct  go to state 82


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  636 global_let: kwd_let . optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block
  638           | kwd_let . optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 83

    $default  reduce using rule 631 (optional_shared)

    optional_shared  go to state 84


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

   99 annotation_argument_name: "type" .

    $default  reduce using rule 99 (annotation_argument_name)


State 35

  100 annotation_argument_name: "in" .

    $default  reduce using rule 100 (annotation_argument_name)


State 36

   98 annotation_argument_name: "name" .

    $default  reduce using rule 98 (annotation_argument_name)


State 37

  101 annotation_argument: annotation_argument_name . '=' string_constant
  102                    | annotation_argument_name . '=' "name"
  103                    | annotation_argument_name . '=' "integer constant"
  104                    | annotation_argument_name . '=' "floating point constant"
  105                    | annotation_argument_name . '=' "true"
  106                    | annotation_argument_name . '=' "false"
  107                    | annotation_argument_name .
  108                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 85

    $default  reduce using rule 107 (annotation_argument)


State 38

  109 annotation_argument_list: annotation_argument .

    $default  reduce using rule 109 (annotation_argument_list)


State 39

   42 options_declaration: "options" annotation_argument_list .
  110 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 86

    $default  reduce using rule 42 (options_declaration)


State 40

   58 expect_error: "integer constant" .
   59             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 87

    $default  reduce using rule 58 (expect_error)


State 41

   55 expect_declaration: "expect" expect_list .
   57 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 88

    $default  reduce using rule 55 (expect_declaration)


State 42

   56 expect_list: expect_error .

    $default  reduce using rule 56 (expect_list)


State 43

   44 keyword_or_name: "name" .

    $default  reduce using rule 44 (keyword_or_name)


State 44

   45 keyword_or_name: "keyword" .

    $default  reduce using rule 45 (keyword_or_name)


State 45

   46 keyword_or_name: "type function" .

    $default  reduce using rule 46 (keyword_or_name)


State 46

   48 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45
    '%'              shift, and go to state 46

    keyword_or_name      go to state 47
    require_module_name  go to state 89


State 47

   47 require_module_name: keyword_or_name .

    $default  reduce using rule 47 (require_module_name)


State 48

   49 require_module_name: require_module_name . '.' keyword_or_name
   50                    | require_module_name . '/' keyword_or_name
   51 require_module: require_module_name . is_public_module
   52               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 90
    "public"  shift, and go to state 91
    '/'       shift, and go to state 92
    '.'       shift, and go to state 93

    $default  reduce using rule 53 (is_public_module)

    is_public_module  go to state 94


State 49

   43 require_declaration: "require" require_module .

    $default  reduce using rule 43 (require_declaration)


State 50

  240 open_block: "new scope" .

    $default  reduce using rule 240 (open_block)


State 51

  239 open_block: "begin of code block" .

    $default  reduce using rule 239 (open_block)


State 52

  650 alias_declaration: "typedef" open_block . alias_list close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 643 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 96
    alias_list                        go to state 97


State 53

  652 alias_declaration: "typedef" $@41 . single_alias semicolon

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 643 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 98


State 54

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 55

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 56

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 83

    $default  reduce using rule 631 (optional_shared)

    optional_shared  go to state 99


State 57

  645 optional_public_or_private_alias: "public" .

    $default  reduce using rule 645 (optional_public_or_private_alias)


State 58

  644 optional_public_or_private_alias: "private" .

    $default  reduce using rule 644 (optional_public_or_private_alias)


State 59

  820 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 816 ($@85)

    $@85  go to state 100


State 60

  810 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 806 ($@77)

    $@77  go to state 101


State 61

  815 variant_alias_declaration: "variant" optional_public_or_private_alias . $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 811 ($@81)

    $@81  go to state 102


State 62

  294 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 103


State 63

  292 name_in_namespace: "name" .
  293                  | "name" . "::" "name"

    "::"  shift, and go to state 104

    "::"      [reduce using rule 292 (name_in_namespace)]
    $default  reduce using rule 292 (name_in_namespace)


State 64

   41 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 40 ($@2)

    $@2  go to state 105


State 65

  115 annotation_declaration_name: "require" .

    $default  reduce using rule 115 (annotation_declaration_name)


State 66

  116 annotation_declaration_name: "private" .

    $default  reduce using rule 116 (annotation_declaration_name)


State 67

  117 annotation_declaration_name: "template" .

    $default  reduce using rule 117 (annotation_declaration_name)


State 68

  126 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 106
    name_in_namespace             go to state 75


State 69

  121 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 107
    name_in_namespace             go to state 75


State 70

  125 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 108
    name_in_namespace             go to state 75


State 71

  118 annotation_declaration_basic: annotation_declaration_name .
  119                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 109

    $default  reduce using rule 118 (annotation_declaration_basic)


State 72

  120 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 120 (annotation_declaration)


State 73

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  127 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112

    $default  reduce using rule 127 (annotation_list)


State 74

  128 annotation_list: annotation_list . ',' annotation_declaration
  130 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 113
    ']'  shift, and go to state 114


State 75

  114 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 114 (annotation_declaration_name)


State 76

   16 top_level_reader_macro: expr_reader semicolon .

    $default  reduce using rule 16 (top_level_reader_macro)


State 77

  669 class_or_struct: "struct" .

    $default  reduce using rule 669 (class_or_struct)


State 78

  668 class_or_struct: "class" .

    $default  reduce using rule 668 (class_or_struct)


State 79

  232 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 233 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 117
    function_declaration                 go to state 118


State 80

  659 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block
  662                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 653 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 121


State 81

  670 class_or_struct: "template" . "class"
  671                | "template" . "struct"

    "struct"  shift, and go to state 122
    "class"   shift, and go to state 123


State 82

  679 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

    "public"   shift, and go to state 124
    "private"  shift, and go to state 125

    $default  reduce using rule 672 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 126


State 83

  632 optional_shared: "shared" .

    $default  reduce using rule 632 (optional_shared)


State 84

  636 global_let: kwd_let optional_shared . optional_public_or_private_variable open_block global_variable_declaration_list close_block
  638           | kwd_let optional_shared . optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 127
    "private"  shift, and go to state 128

    $default  reduce using rule 633 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 129


State 85

  101 annotation_argument: annotation_argument_name '=' . string_constant
  102                    | annotation_argument_name '=' . "name"
  103                    | annotation_argument_name '=' . "integer constant"
  104                    | annotation_argument_name '=' . "floating point constant"
  105                    | annotation_argument_name '=' . "true"
  106                    | annotation_argument_name '=' . "false"
  108                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 130
    "false"                    shift, and go to state 131
    "integer constant"         shift, and go to state 132
    "floating point constant"  shift, and go to state 133
    "name"                     shift, and go to state 134
    "start of the string"      shift, and go to state 135
    '('                        shift, and go to state 136

    string_constant  go to state 137


State 86

  110 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 138


State 87

   59 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 139


State 88

   57 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 140


State 89

   48 require_module_name: '%' require_module_name .
   49                    | require_module_name . '.' keyword_or_name
   50                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 93

    $default  reduce using rule 48 (require_module_name)


State 90

   52 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 141


State 91

   54 is_public_module: "public" .

    $default  reduce using rule 54 (is_public_module)


State 92

   50 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45

    keyword_or_name  go to state 142


State 93

   49 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45

    keyword_or_name  go to state 143


State 94

   51 require_module: require_module_name is_public_module .

    $default  reduce using rule 51 (require_module)


State 95

  647 single_alias: optional_public_or_private_alias . "name" $@40 '=' type_declaration

    "name"  shift, and go to state 144


State 96

  648 alias_list: single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 145


State 97

  649 alias_list: alias_list . single_alias semicolon
  650 alias_declaration: "typedef" open_block alias_list . close_block

    "public"             shift, and go to state 57
    "private"            shift, and go to state 58
    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    $default  reduce using rule 643 (optional_public_or_private_alias)

    close_block                       go to state 148
    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 149


State 98

  652 alias_declaration: "typedef" $@41 single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 150


State 99

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 151
    "private"  shift, and go to state 152

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 153


State 100

  820 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 . "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block

    "name"  shift, and go to state 154


State 101

  810 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 . "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    "name"  shift, and go to state 155


State 102

  815 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 . "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    "name"  shift, and go to state 156


State 103

  294 name_in_namespace: "::" "name" .

    $default  reduce using rule 294 (name_in_namespace)


State 104

  293 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 157


State 105

   41 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 158

    reader_character_sequence  go to state 159


State 106

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  126                       | "|>" annotation_declaration .

    $default  reduce using rule 126 (annotation_declaration)


State 107

  121 annotation_declaration: '!' annotation_declaration .
  122                       | annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 121 (annotation_declaration)


State 108

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  125                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112
    ')'   shift, and go to state 160


State 109

  119 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 161


State 110

  122 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 162
    name_in_namespace             go to state 75


State 111

  123 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 163
    name_in_namespace             go to state 75


State 112

  124 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 164
    name_in_namespace             go to state 75


State 113

  128 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 165
    name_in_namespace             go to state 75


State 114

  130 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 130 (optional_annotation_list)


State 115

  235 optional_public_or_private_function: "public" .

    $default  reduce using rule 235 (optional_public_or_private_function)


State 116

  234 optional_public_or_private_function: "private" .

    $default  reduce using rule 234 (optional_public_or_private_function)


State 117

  238 function_declaration: optional_public_or_private_function . $@7 function_declaration_header expression_block

    $default  reduce using rule 237 ($@7)

    $@7  go to state 166


State 118

  232 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 232 (global_function_declaration)


State 119

  655 optional_public_or_private_enum: "public" .

    $default  reduce using rule 655 (optional_public_or_private_enum)


State 120

  654 optional_public_or_private_enum: "private" .

    $default  reduce using rule 654 (optional_public_or_private_enum)


State 121

  659 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name open_block $@42 enum_list $@43 close_block
  662                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "name"  shift, and go to state 167

    enum_name  go to state 168


State 122

  671 class_or_struct: "template" "struct" .

    $default  reduce using rule 671 (class_or_struct)


State 123

  670 class_or_struct: "template" "class" .

    $default  reduce using rule 670 (class_or_struct)


State 124

  674 optional_public_or_private_structure: "public" .

    $default  reduce using rule 674 (optional_public_or_private_structure)


State 125

  673 optional_public_or_private_structure: "private" .

    $default  reduce using rule 673 (optional_public_or_private_structure)


State 126

  679 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@46 structure_name $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 677 ($@46)

    $@46  go to state 169


State 127

  635 optional_public_or_private_variable: "public" .

    $default  reduce using rule 635 (optional_public_or_private_variable)


State 128

  634 optional_public_or_private_variable: "private" .

    $default  reduce using rule 634 (optional_public_or_private_variable)


State 129

  636 global_let: kwd_let optional_shared optional_public_or_private_variable . open_block global_variable_declaration_list close_block
  638           | kwd_let optional_shared optional_public_or_private_variable . $@39 optional_field_annotation let_variable_declaration

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 637 ($@39)

    open_block  go to state 170
    $@39        go to state 171


State 130

  105 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 105 (annotation_argument)


State 131

  106 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 106 (annotation_argument)


State 132

  103 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 103 (annotation_argument)


State 133

  104 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 104 (annotation_argument)


State 134

  102 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 102 (annotation_argument)


State 135

   27 string_constant: "start of the string" . character_sequence "end of the string"
   28                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 172
    STRING_CHARACTER_ESC  shift, and go to state 173
    "end of the string"   shift, and go to state 174

    character_sequence  go to state 175


State 136

  108 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 176
    "false"                    shift, and go to state 177
    "integer constant"         shift, and go to state 178
    "floating point constant"  shift, and go to state 179
    "name"                     shift, and go to state 180
    "start of the string"      shift, and go to state 135

    string_constant                 go to state 181
    annotation_argument_value       go to state 182
    annotation_argument_value_list  go to state 183


State 137

  101 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 101 (annotation_argument)


State 138

  110 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 110 (annotation_argument_list)


State 139

   59 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 59 (expect_error)


State 140

   57 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 57 (expect_list)


State 141

   52 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 91

    $default  reduce using rule 53 (is_public_module)

    is_public_module  go to state 184


State 142

   50 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 50 (require_module_name)


State 143

   49 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 49 (require_module_name)


State 144

  647 single_alias: optional_public_or_private_alias "name" . $@40 '=' type_declaration

    $default  reduce using rule 646 ($@40)

    $@40  go to state 185


State 145

  648 alias_list: single_alias semicolon .

    $default  reduce using rule 648 (alias_list)


State 146

  242 close_block: "close scope" .

    $default  reduce using rule 242 (close_block)


State 147

  241 close_block: "end of code block" .

    $default  reduce using rule 241 (close_block)


State 148

  650 alias_declaration: "typedef" open_block alias_list close_block .

    $default  reduce using rule 650 (alias_declaration)


State 149

  649 alias_list: alias_list single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 186


State 150

  652 alias_declaration: "typedef" $@41 single_alias semicolon .

    $default  reduce using rule 652 (alias_declaration)


State 151

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 152

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 153

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 154

  820 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" . $@86 open_block $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 817 ($@86)

    $@86  go to state 187


State 155

  810 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" . $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 807 ($@78)

    $@78  go to state 188


State 156

  815 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" . $@82 open_block $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 812 ($@82)

    $@82  go to state 189


State 157

  293 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 293 (name_in_namespace)


State 158

   38 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 38 (reader_character_sequence)


State 159

   39 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   41 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 190

    $default  reduce using rule 41 (expr_reader)


State 160

  125 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 125 (annotation_declaration)


State 161

  110 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  119 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 86
    ')'  shift, and go to state 191


State 162

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  122                       | annotation_declaration "&&" annotation_declaration .
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 122 (annotation_declaration)


State 163

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  123                       | annotation_declaration "||" annotation_declaration .
  124                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 110
    "^^"  shift, and go to state 112

    $default  reduce using rule 123 (annotation_declaration)


State 164

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  124                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 110

    $default  reduce using rule 124 (annotation_declaration)


State 165

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  128 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112

    $default  reduce using rule 128 (annotation_list)


State 166

  238 function_declaration: optional_public_or_private_function $@7 . function_declaration_header expression_block

    "operator"  shift, and go to state 192
    "bool"      shift, and go to state 193
    "string"    shift, and go to state 194
    "int"       shift, and go to state 195
    "int2"      shift, and go to state 196
    "int3"      shift, and go to state 197
    "int4"      shift, and go to state 198
    "uint"      shift, and go to state 199
    "uint2"     shift, and go to state 200
    "uint3"     shift, and go to state 201
    "uint4"     shift, and go to state 202
    "float"     shift, and go to state 203
    "float2"    shift, and go to state 204
    "float3"    shift, and go to state 205
    "float4"    shift, and go to state 206
    "range"     shift, and go to state 207
    "urange"    shift, and go to state 208
    "range64"   shift, and go to state 209
    "urange64"  shift, and go to state 210
    "int64"     shift, and go to state 211
    "uint64"    shift, and go to state 212
    "double"    shift, and go to state 213
    "int8"      shift, and go to state 214
    "uint8"     shift, and go to state 215
    "int16"     shift, and go to state 216
    "uint16"    shift, and go to state 217
    "++"        shift, and go to state 218
    "--"        shift, and go to state 219
    "name"      shift, and go to state 220

    function_name                go to state 221
    function_declaration_header  go to state 222


State 167

  656 enum_name: "name" .

    $default  reduce using rule 656 (enum_name)


State 168

  659 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . open_block $@42 enum_list $@43 close_block
  662                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    ':'                    shift, and go to state 223

    open_block  go to state 224


State 169

  679 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 . structure_name $@47 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 225

    $default  reduce using rule 665 (optional_sealed)

    optional_sealed  go to state 226
    structure_name   go to state 227


State 170

  636 global_let: kwd_let optional_shared optional_public_or_private_variable open_block . global_variable_declaration_list close_block

    $default  reduce using rule 627 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 228


State 171

  638 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 229
    '@'   shift, and go to state 230

    $default  reduce using rule 559 (optional_field_annotation)

    metadata_argument_list     go to state 231
    optional_field_annotation  go to state 232


State 172

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 173

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 174

   28 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 28 (string_constant)


State 175

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 233
    STRING_CHARACTER_ESC  shift, and go to state 234
    "end of the string"   shift, and go to state 235


State 176

   94 annotation_argument_value: "true" .

    $default  reduce using rule 94 (annotation_argument_value)


State 177

   95 annotation_argument_value: "false" .

    $default  reduce using rule 95 (annotation_argument_value)


State 178

   92 annotation_argument_value: "integer constant" .

    $default  reduce using rule 92 (annotation_argument_value)


State 179

   93 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 93 (annotation_argument_value)


State 180

   91 annotation_argument_value: "name" .

    $default  reduce using rule 91 (annotation_argument_value)


State 181

   90 annotation_argument_value: string_constant .

    $default  reduce using rule 90 (annotation_argument_value)


State 182

   96 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 96 (annotation_argument_value_list)


State 183

   97 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  108 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 236
    ')'  shift, and go to state 237


State 184

   52 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 52 (require_module)


State 185

  647 single_alias: optional_public_or_private_alias "name" $@40 . '=' type_declaration

    '='  shift, and go to state 238


State 186

  649 alias_list: alias_list single_alias semicolon .

    $default  reduce using rule 649 (alias_list)


State 187

  820 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 . open_block $@87 bitfield_alias_bits $@88 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 239


State 188

  810 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 . open_block $@79 tuple_alias_type_list $@80 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 240


State 189

  815 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 . open_block $@83 variant_alias_type_list $@84 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 241


State 190

   39 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 39 (reader_character_sequence)


State 191

  119 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 119 (annotation_declaration_basic)


State 192

  137 function_name: "operator" . '!'
  138              | "operator" . '~'
  139              | "operator" . "+="
  140              | "operator" . "-="
  141              | "operator" . "*="
  142              | "operator" . "/="
  143              | "operator" . "%="
  144              | "operator" . "&="
  145              | "operator" . "|="
  146              | "operator" . "^="
  147              | "operator" . "&&="
  148              | "operator" . "||="
  149              | "operator" . "^^="
  150              | "operator" . "&&"
  151              | "operator" . "||"
  152              | "operator" . "^^"
  153              | "operator" . '+'
  154              | "operator" . '-'
  155              | "operator" . '*'
  156              | "operator" . '/'
  157              | "operator" . '%'
  158              | "operator" . '<'
  159              | "operator" . '>'
  160              | "operator" . ".."
  161              | "operator" . "=="
  162              | "operator" . "!="
  163              | "operator" . "<="
  164              | "operator" . ">="
  165              | "operator" . '&'
  166              | "operator" . '|'
  167              | "operator" . '^'
  170              | "operator" . "++"
  171              | "operator" . "--"
  172              | "operator" . "<<"
  173              | "operator" . ">>"
  174              | "operator" . "<<="
  175              | "operator" . ">>="
  176              | "operator" . "<<<"
  177              | "operator" . ">>>"
  178              | "operator" . "<<<="
  179              | "operator" . ">>>="
  180              | "operator" . '[' ']'
  181              | "operator" . "?[" ']'
  182              | "operator" . '.'
  183              | "operator" . "?."
  184              | "operator" . '.' "name"
  185              | "operator" . '.' "name" ":="
  186              | "operator" . '.' "name" "+="
  187              | "operator" . '.' "name" "-="
  188              | "operator" . '.' "name" "*="
  189              | "operator" . '.' "name" "/="
  190              | "operator" . '.' "name" "%="
  191              | "operator" . '.' "name" "&="
  192              | "operator" . '.' "name" "|="
  193              | "operator" . '.' "name" "^="
  194              | "operator" . '.' "name" "&&="
  195              | "operator" . '.' "name" "||="
  196              | "operator" . '.' "name" "^^="
  197              | "operator" . "?." "name"
  198              | "operator" . ":="
  199              | "operator" . "delete"
  200              | "operator" . "??"
  201              | "operator" . "is"
  202              | "operator" . "as"
  203              | "operator" . "is" "name"
  204              | "operator" . "as" "name"
  205              | "operator" . '?' "as"
  206              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 242
    "as"      shift, and go to state 243
    "delete"  shift, and go to state 244
    "+="      shift, and go to state 245
    "-="      shift, and go to state 246
    "/="      shift, and go to state 247
    "*="      shift, and go to state 248
    "%="      shift, and go to state 249
    "&="      shift, and go to state 250
    "|="      shift, and go to state 251
    "^="      shift, and go to state 252
    "<<"      shift, and go to state 253
    ">>"      shift, and go to state 254
    "++"      shift, and go to state 255
    "--"      shift, and go to state 256
    "<="      shift, and go to state 257
    "<<="     shift, and go to state 258
    ">>="     shift, and go to state 259
    ">="      shift, and go to state 260
    "=="      shift, and go to state 261
    "!="      shift, and go to state 262
    "??"      shift, and go to state 263
    "?."      shift, and go to state 264
    "?["      shift, and go to state 265
    ":="      shift, and go to state 266
    "<<<"     shift, and go to state 267
    ">>>"     shift, and go to state 268
    "<<<="    shift, and go to state 269
    ">>>="    shift, and go to state 270
    "&&"      shift, and go to state 271
    "||"      shift, and go to state 272
    "^^"      shift, and go to state 273
    "&&="     shift, and go to state 274
    "||="     shift, and go to state 275
    "^^="     shift, and go to state 276
    ".."      shift, and go to state 277
    '?'       shift, and go to state 278
    '|'       shift, and go to state 279
    '^'       shift, and go to state 280
    '&'       shift, and go to state 281
    '<'       shift, and go to state 282
    '>'       shift, and go to state 283
    '-'       shift, and go to state 284
    '+'       shift, and go to state 285
    '*'       shift, and go to state 286
    '/'       shift, and go to state 287
    '%'       shift, and go to state 288
    '~'       shift, and go to state 289
    '!'       shift, and go to state 290
    '.'       shift, and go to state 291
    '['       shift, and go to state 292


State 193

  207 function_name: "bool" .

    $default  reduce using rule 207 (function_name)


State 194

  208 function_name: "string" .

    $default  reduce using rule 208 (function_name)


State 195

  209 function_name: "int" .

    $default  reduce using rule 209 (function_name)


State 196

  210 function_name: "int2" .

    $default  reduce using rule 210 (function_name)


State 197

  211 function_name: "int3" .

    $default  reduce using rule 211 (function_name)


State 198

  212 function_name: "int4" .

    $default  reduce using rule 212 (function_name)


State 199

  213 function_name: "uint" .

    $default  reduce using rule 213 (function_name)


State 200

  214 function_name: "uint2" .

    $default  reduce using rule 214 (function_name)


State 201

  215 function_name: "uint3" .

    $default  reduce using rule 215 (function_name)


State 202

  216 function_name: "uint4" .

    $default  reduce using rule 216 (function_name)


State 203

  217 function_name: "float" .

    $default  reduce using rule 217 (function_name)


State 204

  218 function_name: "float2" .

    $default  reduce using rule 218 (function_name)


State 205

  219 function_name: "float3" .

    $default  reduce using rule 219 (function_name)


State 206

  220 function_name: "float4" .

    $default  reduce using rule 220 (function_name)


State 207

  221 function_name: "range" .

    $default  reduce using rule 221 (function_name)


State 208

  222 function_name: "urange" .

    $default  reduce using rule 222 (function_name)


State 209

  223 function_name: "range64" .

    $default  reduce using rule 223 (function_name)


State 210

  224 function_name: "urange64" .

    $default  reduce using rule 224 (function_name)


State 211

  225 function_name: "int64" .

    $default  reduce using rule 225 (function_name)


State 212

  226 function_name: "uint64" .

    $default  reduce using rule 226 (function_name)


State 213

  227 function_name: "double" .

    $default  reduce using rule 227 (function_name)


State 214

  228 function_name: "int8" .

    $default  reduce using rule 228 (function_name)


State 215

  229 function_name: "uint8" .

    $default  reduce using rule 229 (function_name)


State 216

  230 function_name: "int16" .

    $default  reduce using rule 230 (function_name)


State 217

  231 function_name: "uint16" .

    $default  reduce using rule 231 (function_name)


State 218

  168 function_name: "++" . "operator"

    "operator"  shift, and go to state 293


State 219

  169 function_name: "--" . "operator"

    "operator"  shift, and go to state 294


State 220

  136 function_name: "name" .

    $default  reduce using rule 136 (function_name)


State 221

  236 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 296


State 222

  238 function_declaration: optional_public_or_private_function $@7 function_declaration_header . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 298


State 223

  662 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "int"     shift, and go to state 299
    "uint"    shift, and go to state 300
    "int64"   shift, and go to state 301
    "uint64"  shift, and go to state 302
    "int8"    shift, and go to state 303
    "uint8"   shift, and go to state 304
    "int16"   shift, and go to state 305
    "uint16"  shift, and go to state 306

    enum_basic_type_declaration  go to state 307


State 224

  659 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block . $@42 enum_list $@43 close_block

    $default  reduce using rule 657 ($@42)

    $@42  go to state 308


State 225

  666 optional_sealed: "sealed" .

    $default  reduce using rule 666 (optional_sealed)


State 226

  667 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 309


State 227

  679 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name . $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 678 ($@47)

    $@47  go to state 310


State 228

  628 global_variable_declaration_list: global_variable_declaration_list . "end of line"
  630                                 | global_variable_declaration_list . $@38 optional_field_annotation let_variable_declaration
  636 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list . close_block

    "close scope"        shift, and go to state 146
    "end of line"        shift, and go to state 311
    "end of code block"  shift, and go to state 147

    $default  reduce using rule 629 ($@38)

    close_block  go to state 312
    $@38         go to state 313


State 229

  560 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 314


State 230

  111 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 315


State 231

  112 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  113                       | metadata_argument_list . semicolon
  561 optional_field_annotation: metadata_argument_list .

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '@'                  shift, and go to state 316

    $default  reduce using rule 561 (optional_field_annotation)

    semicolon  go to state 317


State 232

  638 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 318
    "name"  shift, and go to state 319

    let_variable_name_with_pos_list  go to state 320
    let_variable_declaration         go to state 321


State 233

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 234

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 235

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 236

   97 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 176
    "false"                    shift, and go to state 177
    "integer constant"         shift, and go to state 178
    "floating point constant"  shift, and go to state 179
    "name"                     shift, and go to state 180
    "start of the string"      shift, and go to state 135

    string_constant            go to state 181
    annotation_argument_value  go to state 322


State 237

  108 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 108 (annotation_argument)


State 238

  647 single_alias: optional_public_or_private_alias "name" $@40 '=' . type_declaration

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 370


State 239

  820 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block . $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 818 ($@87)

    $@87  go to state 371


State 240

  810 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block . $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 808 ($@79)

    $@79  go to state 372


State 241

  815 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block . $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 813 ($@83)

    $@83  go to state 373


State 242

  201 function_name: "operator" "is" .
  203              | "operator" "is" . "name"

    "name"  shift, and go to state 374

    $default  reduce using rule 201 (function_name)


State 243

  202 function_name: "operator" "as" .
  204              | "operator" "as" . "name"

    "name"  shift, and go to state 375

    $default  reduce using rule 202 (function_name)


State 244

  199 function_name: "operator" "delete" .

    $default  reduce using rule 199 (function_name)


State 245

  139 function_name: "operator" "+=" .

    $default  reduce using rule 139 (function_name)


State 246

  140 function_name: "operator" "-=" .

    $default  reduce using rule 140 (function_name)


State 247

  142 function_name: "operator" "/=" .

    $default  reduce using rule 142 (function_name)


State 248

  141 function_name: "operator" "*=" .

    $default  reduce using rule 141 (function_name)


State 249

  143 function_name: "operator" "%=" .

    $default  reduce using rule 143 (function_name)


State 250

  144 function_name: "operator" "&=" .

    $default  reduce using rule 144 (function_name)


State 251

  145 function_name: "operator" "|=" .

    $default  reduce using rule 145 (function_name)


State 252

  146 function_name: "operator" "^=" .

    $default  reduce using rule 146 (function_name)


State 253

  172 function_name: "operator" "<<" .

    $default  reduce using rule 172 (function_name)


State 254

  173 function_name: "operator" ">>" .

    $default  reduce using rule 173 (function_name)


State 255

  170 function_name: "operator" "++" .

    $default  reduce using rule 170 (function_name)


State 256

  171 function_name: "operator" "--" .

    $default  reduce using rule 171 (function_name)


State 257

  163 function_name: "operator" "<=" .

    $default  reduce using rule 163 (function_name)


State 258

  174 function_name: "operator" "<<=" .

    $default  reduce using rule 174 (function_name)


State 259

  175 function_name: "operator" ">>=" .

    $default  reduce using rule 175 (function_name)


State 260

  164 function_name: "operator" ">=" .

    $default  reduce using rule 164 (function_name)


State 261

  161 function_name: "operator" "==" .

    $default  reduce using rule 161 (function_name)


State 262

  162 function_name: "operator" "!=" .

    $default  reduce using rule 162 (function_name)


State 263

  200 function_name: "operator" "??" .

    $default  reduce using rule 200 (function_name)


State 264

  183 function_name: "operator" "?." .
  197              | "operator" "?." . "name"

    "name"  shift, and go to state 376

    $default  reduce using rule 183 (function_name)


State 265

  181 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 377


State 266

  198 function_name: "operator" ":=" .

    $default  reduce using rule 198 (function_name)


State 267

  176 function_name: "operator" "<<<" .

    $default  reduce using rule 176 (function_name)


State 268

  177 function_name: "operator" ">>>" .

    $default  reduce using rule 177 (function_name)


State 269

  178 function_name: "operator" "<<<=" .

    $default  reduce using rule 178 (function_name)


State 270

  179 function_name: "operator" ">>>=" .

    $default  reduce using rule 179 (function_name)


State 271

  150 function_name: "operator" "&&" .

    $default  reduce using rule 150 (function_name)


State 272

  151 function_name: "operator" "||" .

    $default  reduce using rule 151 (function_name)


State 273

  152 function_name: "operator" "^^" .

    $default  reduce using rule 152 (function_name)


State 274

  147 function_name: "operator" "&&=" .

    $default  reduce using rule 147 (function_name)


State 275

  148 function_name: "operator" "||=" .

    $default  reduce using rule 148 (function_name)


State 276

  149 function_name: "operator" "^^=" .

    $default  reduce using rule 149 (function_name)


State 277

  160 function_name: "operator" ".." .

    $default  reduce using rule 160 (function_name)


State 278

  205 function_name: "operator" '?' . "as"
  206              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 378


State 279

  166 function_name: "operator" '|' .

    $default  reduce using rule 166 (function_name)


State 280

  167 function_name: "operator" '^' .

    $default  reduce using rule 167 (function_name)


State 281

  165 function_name: "operator" '&' .

    $default  reduce using rule 165 (function_name)


State 282

  158 function_name: "operator" '<' .

    $default  reduce using rule 158 (function_name)


State 283

  159 function_name: "operator" '>' .

    $default  reduce using rule 159 (function_name)


State 284

  154 function_name: "operator" '-' .

    $default  reduce using rule 154 (function_name)


State 285

  153 function_name: "operator" '+' .

    $default  reduce using rule 153 (function_name)


State 286

  155 function_name: "operator" '*' .

    $default  reduce using rule 155 (function_name)


State 287

  156 function_name: "operator" '/' .

    $default  reduce using rule 156 (function_name)


State 288

  157 function_name: "operator" '%' .

    $default  reduce using rule 157 (function_name)


State 289

  138 function_name: "operator" '~' .

    $default  reduce using rule 138 (function_name)


State 290

  137 function_name: "operator" '!' .

    $default  reduce using rule 137 (function_name)


State 291

  182 function_name: "operator" '.' .
  184              | "operator" '.' . "name"
  185              | "operator" '.' . "name" ":="
  186              | "operator" '.' . "name" "+="
  187              | "operator" '.' . "name" "-="
  188              | "operator" '.' . "name" "*="
  189              | "operator" '.' . "name" "/="
  190              | "operator" '.' . "name" "%="
  191              | "operator" '.' . "name" "&="
  192              | "operator" '.' . "name" "|="
  193              | "operator" '.' . "name" "^="
  194              | "operator" '.' . "name" "&&="
  195              | "operator" '.' . "name" "||="
  196              | "operator" '.' . "name" "^^="

    "name"  shift, and go to state 379

    $default  reduce using rule 182 (function_name)


State 292

  180 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 380


State 293

  168 function_name: "++" "operator" .

    $default  reduce using rule 168 (function_name)


State 294

  169 function_name: "--" "operator" .

    $default  reduce using rule 169 (function_name)


State 295

  132 optional_function_argument_list: '(' . ')'
  133                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 381
    "[["  shift, and go to state 229
    ')'   shift, and go to state 382
    '@'   shift, and go to state 230

    $default  reduce using rule 559 (optional_field_annotation)

    metadata_argument_list                 go to state 231
    optional_field_annotation              go to state 383
    function_argument_declaration_no_type  go to state 384
    function_argument_declaration_type     go to state 385
    function_argument_list                 go to state 386


State 296

  236 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 387

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 388


State 297

  243 expression_block: open_block . expressions close_block
  244                 | open_block . expressions close_block "finally" open_block expressions close_block

    $default  reduce using rule 269 (expressions)

    expressions  go to state 389


State 298

  238 function_declaration: optional_public_or_private_function $@7 function_declaration_header expression_block .

    $default  reduce using rule 238 (function_declaration)


State 299

  712 enum_basic_type_declaration: "int" .

    $default  reduce using rule 712 (enum_basic_type_declaration)


State 300

  715 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 715 (enum_basic_type_declaration)


State 301

  718 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 718 (enum_basic_type_declaration)


State 302

  719 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 719 (enum_basic_type_declaration)


State 303

  713 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 713 (enum_basic_type_declaration)


State 304

  716 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 716 (enum_basic_type_declaration)


State 305

  714 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 714 (enum_basic_type_declaration)


State 306

  717 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 717 (enum_basic_type_declaration)


State 307

  662 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . open_block $@44 enum_list $@45 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 390


State 308

  659 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 . enum_list $@43 close_block

    $default  reduce using rule 639 (enum_list)

    enum_list  go to state 391


State 309

  667 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 392

    $default  reduce using rule 663 (optional_structure_parent)

    optional_structure_parent  go to state 393


State 310

  679 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 . optional_struct_variable_declaration_list

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 675 (optional_struct_variable_declaration_list)

    open_block                                 go to state 394
    optional_struct_variable_declaration_list  go to state 395


State 311

  628 global_variable_declaration_list: global_variable_declaration_list "end of line" .

    $default  reduce using rule 628 (global_variable_declaration_list)


State 312

  636 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block .

    $default  reduce using rule 636 (global_let)


State 313

  630 global_variable_declaration_list: global_variable_declaration_list $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 229
    '@'   shift, and go to state 230

    $default  reduce using rule 559 (optional_field_annotation)

    metadata_argument_list     go to state 231
    optional_field_annotation  go to state 396


State 314

  110 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  560 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 86
    ']'  shift, and go to state 397


State 315

  111 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 111 (metadata_argument_list)


State 316

  112 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 398


State 317

  113 metadata_argument_list: metadata_argument_list semicolon .

    $default  reduce using rule 113 (metadata_argument_list)


State 318

  618 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 399


State 319

  617 let_variable_name_with_pos_list: "name" .
  619                                | "name" . "aka" "name"

    "aka"  shift, and go to state 400

    $default  reduce using rule 617 (let_variable_name_with_pos_list)


State 320

  620 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  621                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  622 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options semicolon
  623                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  624                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  625                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr semicolon
  626                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 401
    ':'  shift, and go to state 402
    '&'  shift, and go to state 403

    $default  reduce using rule 615 (optional_ref)

    optional_ref  go to state 404


State 321

  638 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 638 (global_let)


State 322

   97 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 97 (annotation_argument_value_list)


State 323

  746 type_declaration_no_options: "type" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 405


State 324

  769 type_declaration_no_options: "array" . '<' $@55 type_declaration '>' $@56

    '<'  shift, and go to state 406


State 325

  772 type_declaration_no_options: "table" . '<' $@57 table_type_pair '>' $@58

    '<'  shift, and go to state 407


State 326

  747 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 408


State 327

  775 type_declaration_no_options: "iterator" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 409


State 328

  765 type_declaration_no_options: "smart_ptr" . '<' $@53 type_declaration '>' $@54

    '<'  shift, and go to state 410


State 329

  685 basic_type_declaration: "bool" .

    $default  reduce using rule 685 (basic_type_declaration)


State 330

  705 basic_type_declaration: "void" .

    $default  reduce using rule 705 (basic_type_declaration)


State 331

  686 basic_type_declaration: "string" .

    $default  reduce using rule 686 (basic_type_declaration)


State 332

  721 auto_type_declaration: "auto" .
  722                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 411

    '('       [reduce using rule 721 (auto_type_declaration)]
    $default  reduce using rule 721 (auto_type_declaration)


State 333

  687 basic_type_declaration: "int" .

    $default  reduce using rule 687 (basic_type_declaration)


State 334

  691 basic_type_declaration: "int2" .

    $default  reduce using rule 691 (basic_type_declaration)


State 335

  692 basic_type_declaration: "int3" .

    $default  reduce using rule 692 (basic_type_declaration)


State 336

  693 basic_type_declaration: "int4" .

    $default  reduce using rule 693 (basic_type_declaration)


State 337

  694 basic_type_declaration: "uint" .

    $default  reduce using rule 694 (basic_type_declaration)


State 338

  711 basic_type_declaration: "bitfield" .
  731 bitfield_type_declaration: "bitfield" . '<' $@48 bitfield_bits '>' $@49

    '<'  shift, and go to state 412

    $default  reduce using rule 711 (basic_type_declaration)


State 339

  698 basic_type_declaration: "uint2" .

    $default  reduce using rule 698 (basic_type_declaration)


State 340

  699 basic_type_declaration: "uint3" .

    $default  reduce using rule 699 (basic_type_declaration)


State 341

  700 basic_type_declaration: "uint4" .

    $default  reduce using rule 700 (basic_type_declaration)


State 342

  701 basic_type_declaration: "float" .

    $default  reduce using rule 701 (basic_type_declaration)


State 343

  702 basic_type_declaration: "float2" .

    $default  reduce using rule 702 (basic_type_declaration)


State 344

  703 basic_type_declaration: "float3" .

    $default  reduce using rule 703 (basic_type_declaration)


State 345

  704 basic_type_declaration: "float4" .

    $default  reduce using rule 704 (basic_type_declaration)


State 346

  706 basic_type_declaration: "range" .

    $default  reduce using rule 706 (basic_type_declaration)


State 347

  707 basic_type_declaration: "urange" .

    $default  reduce using rule 707 (basic_type_declaration)


State 348

  708 basic_type_declaration: "range64" .

    $default  reduce using rule 708 (basic_type_declaration)


State 349

  709 basic_type_declaration: "urange64" .

    $default  reduce using rule 709 (basic_type_declaration)


State 350

  776 type_declaration_no_options: "block" .
  779                            | "block" . '<' $@61 type_declaration '>' $@62
  782                            | "block" . '<' $@63 optional_function_argument_list optional_function_type '>' $@64

    '<'  shift, and go to state 413

    $default  reduce using rule 776 (type_declaration_no_options)


State 351

  690 basic_type_declaration: "int64" .

    $default  reduce using rule 690 (basic_type_declaration)


State 352

  697 basic_type_declaration: "uint64" .

    $default  reduce using rule 697 (basic_type_declaration)


State 353

  710 basic_type_declaration: "double" .

    $default  reduce using rule 710 (basic_type_declaration)


State 354

  783 type_declaration_no_options: "function" .
  786                            | "function" . '<' $@65 type_declaration '>' $@66
  789                            | "function" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 414

    $default  reduce using rule 783 (type_declaration_no_options)


State 355

  790 type_declaration_no_options: "lambda" .
  793                            | "lambda" . '<' $@69 type_declaration '>' $@70
  796                            | "lambda" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 415

    $default  reduce using rule 790 (type_declaration_no_options)


State 356

  688 basic_type_declaration: "int8" .

    $default  reduce using rule 688 (basic_type_declaration)


State 357

  695 basic_type_declaration: "uint8" .

    $default  reduce using rule 695 (basic_type_declaration)


State 358

  689 basic_type_declaration: "int16" .

    $default  reduce using rule 689 (basic_type_declaration)


State 359

  696 basic_type_declaration: "uint16" .

    $default  reduce using rule 696 (basic_type_declaration)


State 360

  799 type_declaration_no_options: "tuple" . '<' $@73 tuple_type_list '>' $@74

    '<'  shift, and go to state 416


State 361

  802 type_declaration_no_options: "variant" . '<' $@75 variant_type_list '>' $@76

    '<'  shift, and go to state 417


State 362

  723 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 418


State 363

  748 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  750                            | '$' . name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 419


State 364

  720 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 720 (structure_type_declaration)


State 365

  738 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 738 (type_declaration_no_options)


State 366

  741 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 741 (type_declaration_no_options)


State 367

  739 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 739 (type_declaration_no_options)


State 368

  740 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 740 (type_declaration_no_options)


State 369

  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"
  803 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "??"        shift, and go to state 424
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    $default  reduce using rule 803 (type_declaration)

    dim_list  go to state 430


State 370

  647 single_alias: optional_public_or_private_alias "name" $@40 '=' type_declaration .
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431

    $default  reduce using rule 647 (single_alias)


State 371

  820 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 . bitfield_alias_bits $@88 close_block

    $default  reduce using rule 726 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 432


State 372

  810 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 . tuple_alias_type_list $@80 close_block

    $default  reduce using rule 594 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 433


State 373

  815 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 . variant_alias_type_list $@84 close_block

    $default  reduce using rule 600 (variant_alias_type_list)

    variant_alias_type_list  go to state 434


State 374

  203 function_name: "operator" "is" "name" .

    $default  reduce using rule 203 (function_name)


State 375

  204 function_name: "operator" "as" "name" .

    $default  reduce using rule 204 (function_name)


State 376

  197 function_name: "operator" "?." "name" .

    $default  reduce using rule 197 (function_name)


State 377

  181 function_name: "operator" "?[" ']' .

    $default  reduce using rule 181 (function_name)


State 378

  205 function_name: "operator" '?' "as" .
  206              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 435

    $default  reduce using rule 205 (function_name)


State 379

  184 function_name: "operator" '.' "name" .
  185              | "operator" '.' "name" . ":="
  186              | "operator" '.' "name" . "+="
  187              | "operator" '.' "name" . "-="
  188              | "operator" '.' "name" . "*="
  189              | "operator" '.' "name" . "/="
  190              | "operator" '.' "name" . "%="
  191              | "operator" '.' "name" . "&="
  192              | "operator" '.' "name" . "|="
  193              | "operator" '.' "name" . "^="
  194              | "operator" '.' "name" . "&&="
  195              | "operator" '.' "name" . "||="
  196              | "operator" '.' "name" . "^^="

    "+="   shift, and go to state 436
    "-="   shift, and go to state 437
    "/="   shift, and go to state 438
    "*="   shift, and go to state 439
    "%="   shift, and go to state 440
    "&="   shift, and go to state 441
    "|="   shift, and go to state 442
    "^="   shift, and go to state 443
    ":="   shift, and go to state 444
    "&&="  shift, and go to state 445
    "||="  shift, and go to state 446
    "^^="  shift, and go to state 447

    $default  reduce using rule 184 (function_name)


State 380

  180 function_name: "operator" '[' ']' .

    $default  reduce using rule 180 (function_name)


State 381

  584 function_argument_declaration_type: "$a" . '(' expr ')'

    '('  shift, and go to state 448


State 382

  132 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 132 (optional_function_argument_list)


State 383

  582 function_argument_declaration_no_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_no_type
  583 function_argument_declaration_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_type

    "let"  shift, and go to state 449
    "var"  shift, and go to state 450

    $default  reduce using rule 323 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 451


State 384

  585 function_argument_list: function_argument_declaration_no_type .
  587                       | function_argument_declaration_no_type . semicolon function_argument_list

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 585 (function_argument_list)

    semicolon  go to state 452


State 385

  586 function_argument_list: function_argument_declaration_type .
  588                       | function_argument_declaration_type . semicolon function_argument_list
  589                       | function_argument_declaration_type . ',' function_argument_list

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 453

    $default  reduce using rule 586 (function_argument_list)

    semicolon  go to state 454


State 386

  133 optional_function_argument_list: '(' function_argument_list . ')'

    ')'  shift, and go to state 455


State 387

  135 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 456


State 388

  236 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 236 (function_declaration_header)


State 389

  243 expression_block: open_block expressions . close_block
  244                 | open_block expressions . close_block "finally" open_block expressions close_block
  270 expressions: expressions . expression_any
  271            | expressions . error

    error                             shift, and go to state 457
    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 460
    "if"                              shift, and go to state 461
    "static_if"                       shift, and go to state 462
    "for"                             shift, and go to state 463
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "return"                          shift, and go to state 470
    "null"                            shift, and go to state 471
    "break"                           shift, and go to state 472
    "try"                             shift, and go to state 473
    "table"                           shift, and go to state 474
    "delete"                          shift, and go to state 475
    "deref"                           shift, and go to state 476
    "with"                            shift, and go to state 477
    "assume"                          shift, and go to state 478
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 481
    "continue"                        shift, and go to state 482
    "pass"                            shift, and go to state 483
    "reinterpret"                     shift, and go to state 484
    "label"                           shift, and go to state 485
    "goto"                            shift, and go to state 486
    "unsafe"                          shift, and go to state 487
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "yield"                           shift, and go to state 494
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 497
    "@ <|"                            shift, and go to state 498
    "@@ <|"                           shift, and go to state 499
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "close scope"                     shift, and go to state 146
    "end of line"                     shift, and go to state 13
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 517
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    "end of code block"               shift, and go to state 147
    "end of expression"               shift, and go to state 14
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder             go to state 530
    expr_reader                go to state 531
    expression_label           go to state 532
    expression_goto            go to state 533
    semicolon                  go to state 534
    if_or_static_if            go to state 535
    expression_if_one_liner    go to state 536
    expression_if_then_else    go to state 537
    expression_for_loop        go to state 538
    expression_unsafe          go to state 539
    expression_while_loop      go to state 540
    expression_with            go to state 541
    expression_with_alias      go to state 542
    close_block                go to state 543
    expr_call_pipe             go to state 544
    expression_any             go to state 545
    expr_keyword               go to state 546
    expression_keyword         go to state 547
    expr_pipe                  go to state 548
    name_in_namespace          go to state 549
    expression_delete          go to state 550
    expr_new                   go to state 551
    expression_break           go to state 552
    expression_continue        go to state 553
    expression_return_no_pipe  go to state 554
    expression_return          go to state 555
    expression_yield_no_pipe   go to state 556
    expression_yield           go to state 557
    expression_try_catch       go to state 558
    kwd_let                    go to state 559
    expression_let             go to state 560
    expr_cast                  go to state 561
    expr_type_decl             go to state 562
    expr_type_info             go to state 563
    block_or_lambda            go to state 564
    expr_full_block            go to state 565
    expr_numeric_const         go to state 566
    expr_assign                go to state 567
    expr_assign_pipe           go to state 568
    expr_named_call            go to state 569
    expr_method_call           go to state 570
    func_addr_expr             go to state 571
    expr_field                 go to state 572
    expr_call                  go to state 573
    expr                       go to state 574
    expr_mtag                  go to state 575
    basic_type_declaration     go to state 576
    make_decl                  go to state 577
    make_struct_decl           go to state 578
    make_tuple_call            go to state 579
    make_dim_decl              go to state 580
    make_table_decl            go to state 581
    array_comprehension        go to state 582


State 390

  662 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block . $@44 enum_list $@45 close_block

    $default  reduce using rule 660 ($@44)

    $@44  go to state 583


State 391

  640 enum_list: enum_list . semicolon
  641          | enum_list . "name" semicolon
  642          | enum_list . "name" '=' expr semicolon
  659 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list . $@43 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 584
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 658 ($@43)

    semicolon  go to state 585
    $@43       go to state 586


State 392

  664 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 587


State 393

  667 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 667 (structure_name)


State 394

  676 optional_struct_variable_declaration_list: open_block . struct_variable_declaration_list close_block

    $default  reduce using rule 573 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 588


State 395

  679 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list .

    $default  reduce using rule 679 (structure_declaration)


State 396

  630 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 318
    "name"  shift, and go to state 319

    let_variable_name_with_pos_list  go to state 320
    let_variable_declaration         go to state 589


State 397

  560 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 590


State 398

  112 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 112 (metadata_argument_list)


State 399

  618 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 595
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 400

  619 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 596


State 401

  620 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  621                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 597


State 402

  622 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options semicolon
  623                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  624                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 598


State 403

  616 optional_ref: '&' .

    $default  reduce using rule 616 (optional_ref)


State 404

  625 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr semicolon
  626                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 599
    ":="  shift, and go to state 600
    '='   shift, and go to state 601

    copy_or_move_or_clone  go to state 602


State 405

  746 type_declaration_no_options: "type" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 744 ($@50)

    $@50  go to state 603


State 406

  769 type_declaration_no_options: "array" '<' . $@55 type_declaration '>' $@56

    $default  reduce using rule 767 ($@55)

    $@55  go to state 604


State 407

  772 type_declaration_no_options: "table" '<' . $@57 table_type_pair '>' $@58

    $default  reduce using rule 770 ($@57)

    $@57  go to state 605


State 408

  747 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 606
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 409

  775 type_declaration_no_options: "iterator" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 773 ($@59)

    $@59  go to state 607


State 410

  765 type_declaration_no_options: "smart_ptr" '<' . $@53 type_declaration '>' $@54

    $default  reduce using rule 763 ($@53)

    $@53  go to state 608


State 411

  722 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 609


State 412

  731 bitfield_type_declaration: "bitfield" '<' . $@48 bitfield_bits '>' $@49

    $default  reduce using rule 729 ($@48)

    $@48  go to state 610


State 413

  779 type_declaration_no_options: "block" '<' . $@61 type_declaration '>' $@62
  782                            | "block" '<' . $@63 optional_function_argument_list optional_function_type '>' $@64

    ':'       reduce using rule 780 ($@63)
    '>'       reduce using rule 780 ($@63)
    '('       reduce using rule 780 ($@63)
    $default  reduce using rule 777 ($@61)

    $@61  go to state 611
    $@63  go to state 612


State 414

  786 type_declaration_no_options: "function" '<' . $@65 type_declaration '>' $@66
  789                            | "function" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 787 ($@67)
    '>'       reduce using rule 787 ($@67)
    '('       reduce using rule 787 ($@67)
    $default  reduce using rule 784 ($@65)

    $@65  go to state 613
    $@67  go to state 614


State 415

  793 type_declaration_no_options: "lambda" '<' . $@69 type_declaration '>' $@70
  796                            | "lambda" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 794 ($@71)
    '>'       reduce using rule 794 ($@71)
    '('       reduce using rule 794 ($@71)
    $default  reduce using rule 791 ($@69)

    $@69  go to state 615
    $@71  go to state 616


State 416

  799 type_declaration_no_options: "tuple" '<' . $@73 tuple_type_list '>' $@74

    $default  reduce using rule 797 ($@73)

    $@73  go to state 617


State 417

  802 type_declaration_no_options: "variant" '<' . $@75 variant_type_list '>' $@76

    $default  reduce using rule 800 ($@75)

    $@75  go to state 618


State 418

  723 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 619
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 419

  748 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  750                            | '$' name_in_namespace . '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 620
    '('  shift, and go to state 621


State 420

  753 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 753 (type_declaration_no_options)


State 421

  758 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 758 (type_declaration_no_options)


State 422

  752 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 752 (type_declaration_no_options)


State 423

  760 type_declaration_no_options: type_declaration_no_options "==" . "const"
  761                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 622
    '&'      shift, and go to state 623


State 424

  766 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 766 (type_declaration_no_options)


State 425

  762 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 762 (type_declaration_no_options)


State 426

  755 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 755 (type_declaration_no_options)


State 427

  751 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  754                            | type_declaration_no_options '-' . "const"
  756                            | type_declaration_no_options '-' . '&'
  759                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 624
    '&'      shift, and go to state 625
    '['      shift, and go to state 626
    '#'      shift, and go to state 627


State 428

  736 dim_list: '[' . expr ']'
  743 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    ']'                               shift, and go to state 628
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 629
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 429

  757 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 757 (type_declaration_no_options)


State 430

  737 dim_list: dim_list . '[' expr ']'
  742 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 630

    '['       [reduce using rule 742 (type_declaration_no_options)]
    $default  reduce using rule 742 (type_declaration_no_options)


State 431

  804 type_declaration: type_declaration '|' . type_declaration_no_options
  805                 | type_declaration '|' . '#'

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363
    '#'          shift, and go to state 631

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 632


State 432

  727 bitfield_alias_bits: bitfield_alias_bits . semicolon
  728                    | bitfield_alias_bits . "name" semicolon
  820 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits . $@88 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 633
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 819 ($@88)

    semicolon  go to state 634
    $@88       go to state 635


State 433

  595 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  596                      | tuple_alias_type_list . tuple_type c_or_s
  810 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list . $@80 close_block

    "type"               shift, and go to state 323
    "array"              shift, and go to state 324
    "table"              shift, and go to state 325
    "typedecl"           shift, and go to state 326
    "iterator"           shift, and go to state 327
    "smart_ptr"          shift, and go to state 328
    "bool"               shift, and go to state 329
    "void"               shift, and go to state 330
    "string"             shift, and go to state 331
    "auto"               shift, and go to state 332
    "int"                shift, and go to state 333
    "int2"               shift, and go to state 334
    "int3"               shift, and go to state 335
    "int4"               shift, and go to state 336
    "uint"               shift, and go to state 337
    "bitfield"           shift, and go to state 338
    "uint2"              shift, and go to state 339
    "uint3"              shift, and go to state 340
    "uint4"              shift, and go to state 341
    "float"              shift, and go to state 342
    "float2"             shift, and go to state 343
    "float3"             shift, and go to state 344
    "float4"             shift, and go to state 345
    "range"              shift, and go to state 346
    "urange"             shift, and go to state 347
    "range64"            shift, and go to state 348
    "urange64"           shift, and go to state 349
    "block"              shift, and go to state 350
    "int64"              shift, and go to state 351
    "uint64"             shift, and go to state 352
    "double"             shift, and go to state 353
    "function"           shift, and go to state 354
    "lambda"             shift, and go to state 355
    "int8"               shift, and go to state 356
    "uint8"              shift, and go to state 357
    "int16"              shift, and go to state 358
    "uint16"             shift, and go to state 359
    "tuple"              shift, and go to state 360
    "variant"            shift, and go to state 361
    "::"                 shift, and go to state 62
    "$t"                 shift, and go to state 362
    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 636
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 637
    '$'                  shift, and go to state 363

    $default  reduce using rule 809 ($@80)

    semicolon                    go to state 638
    name_in_namespace            go to state 364
    tuple_type                   go to state 639
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    c_or_s                       go to state 640
    type_declaration_no_options  go to state 369
    type_declaration             go to state 641
    $@80                         go to state 642


State 434

  601 variant_alias_type_list: variant_alias_type_list . c_or_s
  602                        | variant_alias_type_list . variant_type c_or_s
  815 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list . $@84 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 643
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 637

    $default  reduce using rule 814 ($@84)

    semicolon     go to state 638
    variant_type  go to state 644
    c_or_s        go to state 645
    $@84          go to state 646


State 435

  206 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 206 (function_name)


State 436

  186 function_name: "operator" '.' "name" "+=" .

    $default  reduce using rule 186 (function_name)


State 437

  187 function_name: "operator" '.' "name" "-=" .

    $default  reduce using rule 187 (function_name)


State 438

  189 function_name: "operator" '.' "name" "/=" .

    $default  reduce using rule 189 (function_name)


State 439

  188 function_name: "operator" '.' "name" "*=" .

    $default  reduce using rule 188 (function_name)


State 440

  190 function_name: "operator" '.' "name" "%=" .

    $default  reduce using rule 190 (function_name)


State 441

  191 function_name: "operator" '.' "name" "&=" .

    $default  reduce using rule 191 (function_name)


State 442

  192 function_name: "operator" '.' "name" "|=" .

    $default  reduce using rule 192 (function_name)


State 443

  193 function_name: "operator" '.' "name" "^=" .

    $default  reduce using rule 193 (function_name)


State 444

  185 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 185 (function_name)


State 445

  194 function_name: "operator" '.' "name" "&&=" .

    $default  reduce using rule 194 (function_name)


State 446

  195 function_name: "operator" '.' "name" "||=" .

    $default  reduce using rule 195 (function_name)


State 447

  196 function_name: "operator" '.' "name" "^^=" .

    $default  reduce using rule 196 (function_name)


State 448

  584 function_argument_declaration_type: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 647
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 449

  321 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 321 (kwd_let_var_or_nothing)


State 450

  322 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 322 (kwd_let_var_or_nothing)


State 451

  582 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_no_type
  583 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_type

    "$i"    shift, and go to state 648
    "name"  shift, and go to state 649

    variable_declaration_no_type  go to state 650
    variable_declaration_type     go to state 651
    variable_name_with_pos_list   go to state 652


State 452

  587 function_argument_list: function_argument_declaration_no_type semicolon . function_argument_list

    "$a"  shift, and go to state 381
    "[["  shift, and go to state 229
    '@'   shift, and go to state 230

    $default  reduce using rule 559 (optional_field_annotation)

    metadata_argument_list                 go to state 231
    optional_field_annotation              go to state 383
    function_argument_declaration_no_type  go to state 384
    function_argument_declaration_type     go to state 385
    function_argument_list                 go to state 653


State 453

  589 function_argument_list: function_argument_declaration_type ',' . function_argument_list

    "$a"  shift, and go to state 381
    "[["  shift, and go to state 229
    '@'   shift, and go to state 230

    $default  reduce using rule 559 (optional_field_annotation)

    metadata_argument_list                 go to state 231
    optional_field_annotation              go to state 383
    function_argument_declaration_no_type  go to state 384
    function_argument_declaration_type     go to state 385
    function_argument_list                 go to state 654


State 454

  588 function_argument_list: function_argument_declaration_type semicolon . function_argument_list

    "$a"  shift, and go to state 381
    "[["  shift, and go to state 229
    '@'   shift, and go to state 230

    $default  reduce using rule 559 (optional_field_annotation)

    metadata_argument_list                 go to state 231
    optional_field_annotation              go to state 383
    function_argument_declaration_no_type  go to state 384
    function_argument_declaration_type     go to state 385
    function_argument_list                 go to state 655


State 455

  133 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 133 (optional_function_argument_list)


State 456

  135 optional_function_type: ':' type_declaration .
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431

    $default  reduce using rule 135 (optional_function_type)


State 457

  271 expressions: expressions error .

    $default  reduce using rule 271 (expressions)


State 458

  869 make_struct_decl: "struct" . '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 656


State 459

  872 make_struct_decl: "class" . '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 657


State 460

   86 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 658
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 461

   70 if_or_static_if: "if" .

    $default  reduce using rule 70 (if_or_static_if)


State 462

   71 if_or_static_if: "static_if" .

    $default  reduce using rule 71 (if_or_static_if)


State 463

   84 expression_for_loop: "for" . $@5 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 83 ($@5)

    $@5  go to state 659


State 464

  464 expr: "true" .

    $default  reduce using rule 464 (expr)


State 465

  465 expr: "false" .

    $default  reduce using rule 465 (expr)


State 466

  301 expr_new: "new" . new_type_declaration
  302         | "new" . new_type_declaration '(' use_initializer ')'
  303         | "new" . new_type_declaration '(' expr_list ')'
  304         | "new" . new_type_declaration '(' make_struct_single ')'
  305         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  306         | "new" . make_decl

    "struct"               shift, and go to state 458
    "class"                shift, and go to state 459
    "array"                shift, and go to state 469
    "table"                shift, and go to state 474
    "fixed_array"          shift, and go to state 488
    "default"              shift, and go to state 489
    "tuple"                shift, and go to state 491
    "variant"              shift, and go to state 492
    "::"                   shift, and go to state 62
    "[["                   shift, and go to state 507
    "[{"                   shift, and go to state 508
    "{{"                   shift, and go to state 509
    "name"                 shift, and go to state 63
    "begin of code block"  shift, and go to state 520
    '<'                    shift, and go to state 660
    '['                    shift, and go to state 526

    name_in_namespace           go to state 364
    new_type_declaration        go to state 661
    structure_type_declaration  go to state 662
    make_decl                   go to state 663
    make_struct_decl            go to state 578
    make_tuple_call             go to state 579
    make_dim_decl               go to state 580
    make_table_decl             go to state 581
    array_comprehension         go to state 582


State 467

  352 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  353               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  354               | "typeinfo" . '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  355               | "typeinfo" . name_in_namespace '(' expr ')'
  356               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  357               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63
    '('     shift, and go to state 664

    name_in_namespace  go to state 665


State 468

  351 expr_type_decl: "type" . '<' $@20 type_declaration '>' $@21

    '<'  shift, and go to state 666


State 469

  895 make_dim_decl: "array" . "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'
  898              | "array" . "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'
  901              | "array" . "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'
  902              | "array" . '(' expr_list optional_comma ')'
  905              | "array" . '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "struct"   shift, and go to state 667
    "tuple"    shift, and go to state 668
    "variant"  shift, and go to state 669
    '<'        shift, and go to state 670
    '('        shift, and go to state 671


State 470

  309 expression_return_no_pipe: "return" .
  310                          | "return" . expr_list
  311                          | "return" . "<-" expr_list
  313 expression_return: "return" . expr_pipe
  314                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "<-"                              shift, and go to state 672
    "$ <|"                            shift, and go to state 497
    "@ <|"                            shift, and go to state 498
    "@@ <|"                           shift, and go to state 499
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 309 (expression_return_no_pipe)

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 544
    expression_keyword      go to state 547
    expr_pipe               go to state 673
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 674
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign             go to state 675
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 676
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 471

  458 expr: "null" .

    $default  reduce using rule 458 (expr)


State 472

  307 expression_break: "break" .

    $default  reduce using rule 307 (expression_break)


State 473

  320 expression_try_catch: "try" . expression_block "recover" expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 677


State 474

  916 make_table_decl: "table" . '(' optional_expr_map_tuple_list ')'
  917                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  918                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 678
    '('  shift, and go to state 679


State 475

  295 expression_delete: "delete" . expr
  296                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "explicit"                        shift, and go to state 680
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 681
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 476

  509 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 682


State 477

   87 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 683
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 478

   89 expression_with_alias: "assume" . "name" '=' $@6 expr

    "name"  shift, and go to state 684


State 479

  342 expr_cast: "cast" . '<' $@14 type_declaration_no_options '>' $@15 expr

    '<'  shift, and go to state 685


State 480

  345 expr_cast: "upcast" . '<' $@16 type_declaration_no_options '>' $@17 expr

    '<'  shift, and go to state 686


State 481

  510 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 687


State 482

  308 expression_continue: "continue" .

    $default  reduce using rule 308 (expression_continue)


State 483

  268 expression_any: "pass" . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 688


State 484

  348 expr_cast: "reinterpret" . '<' $@18 type_declaration_no_options '>' $@19 expr

    '<'  shift, and go to state 689


State 485

   60 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 690


State 486

   61 expression_goto: "goto" . "label" "integer constant"
   62                | "goto" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "label"                           shift, and go to state 691
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 692
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 487

   85 expression_unsafe: "unsafe" . expression_block
  541 expr: "unsafe" . '(' expr ')'

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '('                    shift, and go to state 693

    open_block        go to state 297
    expression_block  go to state 694


State 488

  906 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  909              | "fixed_array" . '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 695
    '('  shift, and go to state 696


State 489

  878 make_struct_decl: "default" . '<' $@95 type_declaration_no_options '>' $@96 use_initializer

    '<'  shift, and go to state 697


State 490

  711 basic_type_declaration: "bitfield" .

    $default  reduce using rule 711 (basic_type_declaration)


State 491

  884 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  887                | "tuple" . '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 698
    '('  shift, and go to state 699


State 492

  875 make_struct_decl: "variant" . '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 700


State 493

  247 expr_call_pipe: "generator" . '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  511 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  512     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 701


State 494

  315 expression_yield_no_pipe: "yield" . expr
  316                         | "yield" . "<-" expr
  318 expression_yield: "yield" . expr_pipe
  319                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "<-"                              shift, and go to state 702
    "$ <|"                            shift, and go to state 497
    "@ <|"                            shift, and go to state 498
    "@@ <|"                           shift, and go to state 499
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 544
    expression_keyword      go to state 547
    expr_pipe               go to state 703
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign             go to state 675
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 704
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 495

  494 expr: "++" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 705
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 496

  495 expr: "--" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 706
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 497

  290 expr_pipe: "$ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 528
    '@'                    shift, and go to state 707

    open_block        go to state 297
    expression_block  go to state 708
    block_or_lambda   go to state 709
    expr_block        go to state 710


State 498

  288 expr_pipe: "@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 528
    '@'                    shift, and go to state 707

    open_block        go to state 297
    expression_block  go to state 708
    block_or_lambda   go to state 709
    expr_block        go to state 711


State 499

  289 expr_pipe: "@@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 528
    '@'                    shift, and go to state 707

    open_block        go to state 297
    expression_block  go to state 708
    block_or_lambda   go to state 709
    expr_block        go to state 712


State 500

  543 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 713


State 501

  544 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 714


State 502

  545 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 715


State 503

  546 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 716


State 504

  547 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 717


State 505

  549 expr_mtag: "$c" . '(' expr ')' '(' ')'
  550          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 718


State 506

  548 expr_mtag: "..." .

    $default  reduce using rule 548 (expr_mtag)


State 507

  861 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  862                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  863                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  864                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  891 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  925 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 719
    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 720


State 508

  865 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  866                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  892 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  926 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 721
    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 722


State 509

  915 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  928 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "for"                             shift, and go to state 723
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 724
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_map_tuple          go to state 725
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table              go to state 726
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 510

  381 expr_numeric_const: "integer constant" .

    $default  reduce using rule 381 (expr_numeric_const)


State 511

  383 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 383 (expr_numeric_const)


State 512

  382 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 382 (expr_numeric_const)


State 513

  384 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 384 (expr_numeric_const)


State 514

  385 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 385 (expr_numeric_const)


State 515

  386 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 386 (expr_numeric_const)


State 516

  387 expr_numeric_const: "double constant" .

    $default  reduce using rule 387 (expr_numeric_const)


State 517

  272 expr_keyword: "keyword" . expr expression_block
  283 expression_keyword: "keyword" . '<' $@8 type_declaration_no_options_list '>' $@9 expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '<'                               shift, and go to state 727
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 728
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 518

  286 expression_keyword: "type function" . '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    '<'  shift, and go to state 729


State 519

   37 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 34 (string_builder_body)

    string_builder_body  go to state 730


State 520

  914 make_table_decl: "begin of code block" . optional_expr_map_tuple_list "end of code block"
  927 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "for"                             shift, and go to state 731
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 277 (optional_expr_map_tuple_list)

    string_builder                go to state 530
    expr_reader                   go to state 531
    optional_expr_map_tuple_list  go to state 732
    expression_keyword            go to state 594
    name_in_namespace             go to state 549
    expr_new                      go to state 551
    expr_cast                     go to state 561
    expr_type_decl                go to state 562
    expr_type_info                go to state 563
    block_or_lambda               go to state 564
    expr_full_block               go to state 565
    expr_numeric_const            go to state 566
    expr_named_call               go to state 569
    expr_method_call              go to state 570
    func_addr_expr                go to state 571
    expr_field                    go to state 572
    expr_call                     go to state 573
    expr                          go to state 724
    expr_mtag                     go to state 575
    basic_type_declaration        go to state 576
    make_decl                     go to state 577
    make_struct_decl              go to state 578
    make_map_tuple                go to state 733
    make_tuple_call               go to state 579
    make_dim_decl                 go to state 580
    expr_map_tuple_list           go to state 734
    make_table_decl               go to state 581
    array_comprehension           go to state 582


State 521

  471 expr: '-' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 735
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 522

  470 expr: '+' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 736
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 523

  508 expr: '*' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 737
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 524

  469 expr: '~' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 738
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 525

  468 expr: '!' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 739
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 526

  890 make_dim_decl: '[' . optional_expr_list ']'
  923 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  924                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "for"                             shift, and go to state 740
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "iterator"                        shift, and go to state 741
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 273 (optional_expr_list)

    string_builder          go to state 530
    expr_reader             go to state 531
    optional_expr_list      go to state 742
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 743
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 527

  498 expr: '(' . expr_list optional_comma ')'
  499     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "$f"                              shift, and go to state 745
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 746
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 747
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_fields      go to state 748
    make_struct_single      go to state 749
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 528

  363 block_or_lambda: '$' .

    $default  reduce using rule 363 (block_or_lambda)


State 529

  364 block_or_lambda: '@' .
  365                | '@' . '@'
  434 func_addr_expr: '@' . '@' func_addr_name
  437               | '@' . '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name
  440               | '@' . '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name
  558 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 750

    $default  reduce using rule 364 (block_or_lambda)


State 530

  462 expr: string_builder .

    $default  reduce using rule 462 (expr)


State 531

  461 expr: expr_reader .

    $default  reduce using rule 461 (expr)


State 532

  266 expression_any: expression_label . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 751


State 533

  267 expression_any: expression_goto . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 752


State 534

  248 expression_any: semicolon .

    $default  reduce using rule 248 (expression_any)


State 535

   80 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 753
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 536

   82 expression_if_then_else: expression_if_one_liner . "if" $@4 expr expression_else_one_liner semicolon

    "if"  shift, and go to state 754


State 537

  264 expression_any: expression_if_then_else .

    $default  reduce using rule 264 (expression_any)


State 538

  259 expression_any: expression_for_loop .

    $default  reduce using rule 259 (expression_any)


State 539

  256 expression_any: expression_unsafe .

    $default  reduce using rule 256 (expression_any)


State 540

  255 expression_any: expression_while_loop .

    $default  reduce using rule 255 (expression_any)


State 541

  257 expression_any: expression_with .

    $default  reduce using rule 257 (expression_any)


State 542

  258 expression_any: expression_with_alias .

    $default  reduce using rule 258 (expression_any)


State 543

  243 expression_block: open_block expressions close_block .
  244                 | open_block expressions close_block . "finally" open_block expressions close_block

    "finally"  shift, and go to state 755

    $default  reduce using rule 243 (expression_block)


State 544

  291 expr_pipe: expr_call_pipe .

    $default  reduce using rule 291 (expr_pipe)


State 545

  270 expressions: expressions expression_any .

    $default  reduce using rule 270 (expressions)


State 546

  250 expression_any: expr_keyword .

    $default  reduce using rule 250 (expression_any)


State 547

  246 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  542 expr: expression_keyword .

    '$'  shift, and go to state 528
    '@'  shift, and go to state 707

    '$'       [reduce using rule 542 (expr)]
    '@'       [reduce using rule 542 (expr)]
    $default  reduce using rule 542 (expr)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 757


State 548

  249 expression_any: expr_pipe .

    $default  reduce using rule 249 (expression_any)


State 549

  428 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  429                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  451 expr_call: name_in_namespace . '(' ')'
  452          | name_in_namespace . '(' "uninitialized" ')'
  453          | name_in_namespace . '(' make_struct_single ')'
  454          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  455          | name_in_namespace . '(' expr_list ')'
  459 expr: name_in_namespace .
  540     | name_in_namespace . "name"

    "name"  shift, and go to state 758
    '('     shift, and go to state 759

    "name"    [reduce using rule 459 (expr)]
    '('       [reduce using rule 459 (expr)]
    $default  reduce using rule 459 (expr)


State 550

  253 expression_any: expression_delete . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 760


State 551

  533 expr: expr_new .

    $default  reduce using rule 533 (expr)


State 552

   78 expression_if_one_liner: expression_break .
  260 expression_any: expression_break . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 78 (expression_if_one_liner)

    semicolon  go to state 761


State 553

   79 expression_if_one_liner: expression_continue .
  261 expression_any: expression_continue . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 79 (expression_if_one_liner)

    semicolon  go to state 762


State 554

   76 expression_if_one_liner: expression_return_no_pipe .
  312 expression_return: expression_return_no_pipe . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 76 (expression_if_one_liner)

    semicolon  go to state 763


State 555

  262 expression_any: expression_return .

    $default  reduce using rule 262 (expression_any)


State 556

   77 expression_if_one_liner: expression_yield_no_pipe .
  317 expression_yield: expression_yield_no_pipe . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 77 (expression_if_one_liner)

    semicolon  go to state 764


State 557

  263 expression_any: expression_yield .

    $default  reduce using rule 263 (expression_any)


State 558

  265 expression_any: expression_try_catch .

    $default  reduce using rule 265 (expression_any)


State 559

  338 expression_let: kwd_let . optional_in_scope let_variable_declaration
  339               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 765

    $default  reduce using rule 327 (optional_in_scope)

    optional_in_scope  go to state 766


State 560

  254 expression_any: expression_let .

    $default  reduce using rule 254 (expression_any)


State 561

  532 expr: expr_cast .

    $default  reduce using rule 532 (expr)


State 562

  531 expr: expr_type_decl .

    $default  reduce using rule 531 (expr)


State 563

  530 expr: expr_type_info .

    $default  reduce using rule 530 (expr)


State 564

  378 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 16

    $default  reduce using rule 129 (optional_annotation_list)

    optional_annotation_list  go to state 767


State 565

  536 expr: expr_full_block .

    $default  reduce using rule 536 (expr)


State 566

  460 expr: expr_numeric_const .

    $default  reduce using rule 460 (expr)


State 567

  252 expression_any: expr_assign . semicolon
  287 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 768
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 769


State 568

  251 expression_any: expr_assign_pipe .

    $default  reduce using rule 251 (expression_any)


State 569

  535 expr: expr_named_call .

    $default  reduce using rule 535 (expr)


State 570

  534 expr: expr_method_call .

    $default  reduce using rule 534 (expr)


State 571

  506 expr: func_addr_expr .

    $default  reduce using rule 506 (expr)


State 572

  466 expr: expr_field .

    $default  reduce using rule 466 (expr)


State 573

  507 expr: expr_call .

    $default  reduce using rule 507 (expr)


State 574

   75 expression_if_one_liner: expr .
  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  388 expr_assign: expr .
  389            | expr . '=' expr
  390            | expr . "<-" expr
  391            | expr . ":=" expr
  392            | expr . "&=" expr
  393            | expr . "|=" expr
  394            | expr . "^=" expr
  395            | expr . "&&=" expr
  396            | expr . "||=" expr
  397            | expr . "^^=" expr
  398            | expr . "+=" expr
  399            | expr . "-=" expr
  400            | expr . "*=" expr
  401            | expr . "/=" expr
  402            | expr . "%=" expr
  403            | expr . "<<=" expr
  404            | expr . ">>=" expr
  405            | expr . "<<<=" expr
  406            | expr . ">>>=" expr
  411 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  412                 | expr . "<-" expr_assign_pipe_right
  413                 | expr . "&=" expr_assign_pipe_right
  414                 | expr . "|=" expr_assign_pipe_right
  415                 | expr . "^=" expr_assign_pipe_right
  416                 | expr . "&&=" expr_assign_pipe_right
  417                 | expr . "||=" expr_assign_pipe_right
  418                 | expr . "^^=" expr_assign_pipe_right
  419                 | expr . "+=" expr_assign_pipe_right
  420                 | expr . "-=" expr_assign_pipe_right
  421                 | expr . "*=" expr_assign_pipe_right
  422                 | expr . "/=" expr_assign_pipe_right
  423                 | expr . "%=" expr_assign_pipe_right
  424                 | expr . "<<=" expr_assign_pipe_right
  425                 | expr . ">>=" expr_assign_pipe_right
  426                 | expr . "<<<=" expr_assign_pipe_right
  427                 | expr . ">>>=" expr_assign_pipe_right
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 770
    "as"    shift, and go to state 771
    "+="    shift, and go to state 772
    "-="    shift, and go to state 773
    "/="    shift, and go to state 774
    "*="    shift, and go to state 775
    "%="    shift, and go to state 776
    "&="    shift, and go to state 777
    "|="    shift, and go to state 778
    "^="    shift, and go to state 779
    "<<"    shift, and go to state 780
    ">>"    shift, and go to state 781
    "++"    shift, and go to state 782
    "--"    shift, and go to state 783
    "<="    shift, and go to state 784
    "<<="   shift, and go to state 785
    ">>="   shift, and go to state 786
    ">="    shift, and go to state 787
    "=="    shift, and go to state 788
    "!="    shift, and go to state 789
    "->"    shift, and go to state 790
    "<-"    shift, and go to state 791
    "??"    shift, and go to state 792
    "?."    shift, and go to state 793
    "?["    shift, and go to state 794
    "<|"    shift, and go to state 795
    "|>"    shift, and go to state 796
    ":="    shift, and go to state 797
    "<<<"   shift, and go to state 798
    ">>>"   shift, and go to state 799
    "<<<="  shift, and go to state 800
    ">>>="  shift, and go to state 801
    "&&"    shift, and go to state 802
    "||"    shift, and go to state 803
    "^^"    shift, and go to state 804
    "&&="   shift, and go to state 805
    "||="   shift, and go to state 806
    "^^="   shift, and go to state 807
    ".."    shift, and go to state 808
    '='     shift, and go to state 809
    '?'     shift, and go to state 810
    '|'     shift, and go to state 811
    '^'     shift, and go to state 812
    '&'     shift, and go to state 813
    '<'     shift, and go to state 814
    '>'     shift, and go to state 815
    '-'     shift, and go to state 816
    '+'     shift, and go to state 817
    '*'     shift, and go to state 818
    '/'     shift, and go to state 819
    '%'     shift, and go to state 820
    '.'     shift, and go to state 821
    '['     shift, and go to state 822
    '$'     shift, and go to state 528
    '@'     shift, and go to state 707

    "if"      reduce using rule 75 (expression_if_one_liner)
    $default  reduce using rule 388 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 575

  467 expr: expr_mtag .

    $default  reduce using rule 467 (expr)


State 576

  456 expr_call: basic_type_declaration . '(' ')'
  457          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 824


State 577

  463 expr: make_decl .

    $default  reduce using rule 463 (expr)


State 578

  821 make_decl: make_struct_decl .

    $default  reduce using rule 821 (make_decl)


State 579

  825 make_decl: make_tuple_call .

    $default  reduce using rule 825 (make_decl)


State 580

  822 make_decl: make_dim_decl .

    $default  reduce using rule 822 (make_decl)


State 581

  823 make_decl: make_table_decl .

    $default  reduce using rule 823 (make_decl)


State 582

  824 make_decl: array_comprehension .

    $default  reduce using rule 824 (make_decl)


State 583

  662 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 . enum_list $@45 close_block

    $default  reduce using rule 639 (enum_list)

    enum_list  go to state 825


State 584

  641 enum_list: enum_list "name" . semicolon
  642          | enum_list "name" . '=' expr semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 826

    semicolon  go to state 827


State 585

  640 enum_list: enum_list semicolon .

    $default  reduce using rule 640 (enum_list)


State 586

  659 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 828


State 587

  664 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 664 (optional_structure_parent)


State 588

  574 struct_variable_declaration_list: struct_variable_declaration_list . semicolon
  576                                 | struct_variable_declaration_list . $@35 structure_variable_declaration semicolon
  578                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  580                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block
  581                                 | struct_variable_declaration_list . '[' annotation_list ']' semicolon
  676 optional_struct_variable_declaration_list: open_block struct_variable_declaration_list . close_block

    "close scope"        shift, and go to state 146
    "end of line"        shift, and go to state 13
    "end of code block"  shift, and go to state 147
    "end of expression"  shift, and go to state 14
    '['                  shift, and go to state 829

    "def"     reduce using rule 129 (optional_annotation_list)
    $default  reduce using rule 575 ($@35)

    semicolon                 go to state 830
    optional_annotation_list  go to state 831
    close_block               go to state 832
    $@35                      go to state 833


State 589

  630 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 630 (global_variable_declaration_list)


State 590

  560 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 560 (optional_field_annotation)


State 591

  541 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 693


State 592

  511 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  512     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 834


State 593

  283 expression_keyword: "keyword" . '<' $@8 type_declaration_no_options_list '>' $@9 expr

    '<'  shift, and go to state 727


State 594

  542 expr: expression_keyword .

    $default  reduce using rule 542 (expr)


State 595

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  618 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 835


State 596

  619 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 619 (let_variable_name_with_pos_list)


State 597

  620 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  621                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 836

    $default  reduce using rule 620 (let_variable_name_with_pos_list)


State 598

  622 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . semicolon
  623                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  624                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 420
    "implicit"           shift, and go to state 421
    "explicit"           shift, and go to state 422
    "=="                 shift, and go to state 423
    "<-"                 shift, and go to state 599
    "??"                 shift, and go to state 424
    ":="                 shift, and go to state 600
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 601
    '?'                  shift, and go to state 425
    '&'                  shift, and go to state 426
    '-'                  shift, and go to state 427
    '['                  shift, and go to state 428
    '#'                  shift, and go to state 429

    semicolon              go to state 837
    copy_or_move_or_clone  go to state 838
    dim_list               go to state 430


State 599

  613 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 613 (copy_or_move_or_clone)


State 600

  614 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 614 (copy_or_move_or_clone)


State 601

  612 copy_or_move_or_clone: '=' .

    $default  reduce using rule 612 (copy_or_move_or_clone)


State 602

  625 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr semicolon
  626                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 497
    "@ <|"                            shift, and go to state 498
    "@@ <|"                           shift, and go to state 499
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 544
    expression_keyword      go to state 547
    expr_pipe               go to state 839
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign             go to state 675
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 840
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 603

  746 type_declaration_no_options: "type" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 841


State 604

  769 type_declaration_no_options: "array" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 842


State 605

  772 type_declaration_no_options: "table" '<' $@57 . table_type_pair '>' $@58

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    table_type_pair              go to state 843
    type_declaration_no_options  go to state 369
    type_declaration             go to state 844


State 606

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  747 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 845


State 607

  775 type_declaration_no_options: "iterator" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 846


State 608

  765 type_declaration_no_options: "smart_ptr" '<' $@53 . type_declaration '>' $@54

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 847


State 609

  722 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 848


State 610

  731 bitfield_type_declaration: "bitfield" '<' $@48 . bitfield_bits '>' $@49

    "name"  shift, and go to state 849

    bitfield_bits  go to state 850


State 611

  779 type_declaration_no_options: "block" '<' $@61 . type_declaration '>' $@62

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 851


State 612

  782 type_declaration_no_options: "block" '<' $@63 . optional_function_argument_list optional_function_type '>' $@64

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 852


State 613

  786 type_declaration_no_options: "function" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 853


State 614

  789 type_declaration_no_options: "function" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 854


State 615

  793 type_declaration_no_options: "lambda" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 855


State 616

  796 type_declaration_no_options: "lambda" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 856


State 617

  799 type_declaration_no_options: "tuple" '<' $@73 . tuple_type_list '>' $@74

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 636
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    tuple_type                   go to state 857
    tuple_type_list              go to state 858
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 641


State 618

  802 type_declaration_no_options: "variant" '<' $@75 . variant_type_list '>' $@76

    "name"  shift, and go to state 643

    variant_type       go to state 859
    variant_type_list  go to state 860


State 619

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  723 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 861


State 620

  750 type_declaration_no_options: '$' name_in_namespace '<' . $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 749 ($@52)

    $@52  go to state 862


State 621

  748 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 273 (optional_expr_list)

    string_builder          go to state 530
    expr_reader             go to state 531
    optional_expr_list      go to state 863
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 743
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 622

  760 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 760 (type_declaration_no_options)


State 623

  761 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 761 (type_declaration_no_options)


State 624

  754 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 754 (type_declaration_no_options)


State 625

  756 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 756 (type_declaration_no_options)


State 626

  751 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 864


State 627

  759 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 759 (type_declaration_no_options)


State 628

  743 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 743 (type_declaration_no_options)


State 629

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  736 dim_list: '[' expr . ']'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ']'    shift, and go to state 865


State 630

  737 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 866
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 631

  805 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 805 (type_declaration)


State 632

  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"
  804 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "??"        shift, and go to state 424
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    $default  reduce using rule 804 (type_declaration)

    dim_list  go to state 430


State 633

  728 bitfield_alias_bits: bitfield_alias_bits "name" . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 867


State 634

  727 bitfield_alias_bits: bitfield_alias_bits semicolon .

    $default  reduce using rule 727 (bitfield_alias_bits)


State 635

  820 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 868


State 636

  292 name_in_namespace: "name" .
  293                  | "name" . "::" "name"
  591 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 104
    ':'   shift, and go to state 869

    $default  reduce using rule 292 (name_in_namespace)


State 637

  732 c_or_s: ',' .

    $default  reduce using rule 732 (c_or_s)


State 638

  733 c_or_s: semicolon .

    $default  reduce using rule 733 (c_or_s)


State 639

  596 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 637

    semicolon  go to state 638
    c_or_s     go to state 870


State 640

  595 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 595 (tuple_alias_type_list)


State 641

  590 tuple_type: type_declaration .
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431

    $default  reduce using rule 590 (tuple_type)


State 642

  810 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 871


State 643

  597 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 872


State 644

  602 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 637

    semicolon  go to state 638
    c_or_s     go to state 873


State 645

  601 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 601 (variant_alias_type_list)


State 646

  815 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 874


State 647

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  584 function_argument_declaration_type: "$a" '(' expr . ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 875


State 648

  681 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 876


State 649

  680 variable_name_with_pos_list: "name" .
  682                            | "name" . "aka" "name"

    "aka"  shift, and go to state 877

    $default  reduce using rule 680 (variable_name_with_pos_list)


State 650

  582 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type .

    $default  reduce using rule 582 (function_argument_declaration_no_type)


State 651

  583 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type .

    $default  reduce using rule 583 (function_argument_declaration_type)


State 652

  605 variable_declaration_no_type: variable_name_with_pos_list .
  606                             | variable_name_with_pos_list . '&'
  607                             | variable_name_with_pos_list . copy_or_move expr
  608 variable_declaration_type: variable_name_with_pos_list . ':' type_declaration
  609                          | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  683 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  684                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 878
    ','   shift, and go to state 879
    '='   shift, and go to state 880
    ':'   shift, and go to state 881
    '&'   shift, and go to state 882

    $default  reduce using rule 605 (variable_declaration_no_type)

    copy_or_move  go to state 883


State 653

  587 function_argument_list: function_argument_declaration_no_type semicolon function_argument_list .

    $default  reduce using rule 587 (function_argument_list)


State 654

  589 function_argument_list: function_argument_declaration_type ',' function_argument_list .

    $default  reduce using rule 589 (function_argument_list)


State 655

  588 function_argument_list: function_argument_declaration_type semicolon function_argument_list .

    $default  reduce using rule 588 (function_argument_list)


State 656

  869 make_struct_decl: "struct" '<' . $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 867 ($@89)

    $@89  go to state 884


State 657

  872 make_struct_decl: "class" '<' . $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 870 ($@91)

    $@91  go to state 885


State 658

   86 expression_while_loop: "while" expr . expression_block
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 770
    "as"                   shift, and go to state 771
    "<<"                   shift, and go to state 780
    ">>"                   shift, and go to state 781
    "++"                   shift, and go to state 782
    "--"                   shift, and go to state 783
    "<="                   shift, and go to state 784
    ">="                   shift, and go to state 787
    "=="                   shift, and go to state 788
    "!="                   shift, and go to state 789
    "->"                   shift, and go to state 790
    "??"                   shift, and go to state 792
    "?."                   shift, and go to state 793
    "?["                   shift, and go to state 794
    "<|"                   shift, and go to state 795
    "|>"                   shift, and go to state 796
    "<<<"                  shift, and go to state 798
    ">>>"                  shift, and go to state 799
    "&&"                   shift, and go to state 802
    "||"                   shift, and go to state 803
    "^^"                   shift, and go to state 804
    ".."                   shift, and go to state 808
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 810
    '|'                    shift, and go to state 811
    '^'                    shift, and go to state 812
    '&'                    shift, and go to state 813
    '<'                    shift, and go to state 814
    '>'                    shift, and go to state 815
    '-'                    shift, and go to state 816
    '+'                    shift, and go to state 817
    '*'                    shift, and go to state 818
    '/'                    shift, and go to state 819
    '%'                    shift, and go to state 820
    '.'                    shift, and go to state 821
    '['                    shift, and go to state 822

    open_block        go to state 297
    expression_block  go to state 886


State 659

   84 expression_for_loop: "for" $@5 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 648
    "name"  shift, and go to state 649

    variable_name_with_pos_list  go to state 887


State 660

  299 new_type_declaration: '<' . $@12 type_declaration '>' $@13

    $default  reduce using rule 297 ($@12)

    $@12  go to state 888


State 661

  301 expr_new: "new" new_type_declaration .
  302         | "new" new_type_declaration . '(' use_initializer ')'
  303         | "new" new_type_declaration . '(' expr_list ')'
  304         | "new" new_type_declaration . '(' make_struct_single ')'
  305         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 889

    '('       [reduce using rule 301 (expr_new)]
    $default  reduce using rule 301 (expr_new)


State 662

  300 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 300 (new_type_declaration)


State 663

  306 expr_new: "new" make_decl .

    $default  reduce using rule 306 (expr_new)


State 664

  352 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  353               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  354               | "typeinfo" '(' . name_in_namespace '<' "name" c_or_s "name" '>' expr ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 890


State 665

  355 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  356               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  357               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 891
    '('  shift, and go to state 892


State 666

  351 expr_type_decl: "type" '<' . $@20 type_declaration '>' $@21

    $default  reduce using rule 349 ($@20)

    $@20  go to state 893


State 667

  895 make_dim_decl: "array" "struct" . '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 894


State 668

  898 make_dim_decl: "array" "tuple" . '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 895


State 669

  901 make_dim_decl: "array" "variant" . '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'

    '<'  shift, and go to state 896


State 670

  905 make_dim_decl: "array" '<' . $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    $default  reduce using rule 903 ($@105)

    $@105  go to state 897


State 671

  902 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 898
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 672

  311 expression_return_no_pipe: "return" "<-" . expr_list
  314 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 497
    "@ <|"                            shift, and go to state 498
    "@@ <|"                           shift, and go to state 499
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 544
    expression_keyword      go to state 547
    expr_pipe               go to state 899
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 900
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign             go to state 675
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 676
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 673

  313 expression_return: "return" expr_pipe .

    $default  reduce using rule 313 (expression_return)


State 674

  310 expression_return_no_pipe: "return" expr_list .
  359 expr_list: expr_list . ',' expr

    ','  shift, and go to state 901

    $default  reduce using rule 310 (expression_return_no_pipe)


State 675

  287 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 768


State 676

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_list: expr .
  388 expr_assign: expr .
  389            | expr . '=' expr
  390            | expr . "<-" expr
  391            | expr . ":=" expr
  392            | expr . "&=" expr
  393            | expr . "|=" expr
  394            | expr . "^=" expr
  395            | expr . "&&=" expr
  396            | expr . "||=" expr
  397            | expr . "^^=" expr
  398            | expr . "+=" expr
  399            | expr . "-=" expr
  400            | expr . "*=" expr
  401            | expr . "/=" expr
  402            | expr . "%=" expr
  403            | expr . "<<=" expr
  404            | expr . ">>=" expr
  405            | expr . "<<<=" expr
  406            | expr . ">>>=" expr
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 770
    "as"    shift, and go to state 771
    "+="    shift, and go to state 902
    "-="    shift, and go to state 903
    "/="    shift, and go to state 904
    "*="    shift, and go to state 905
    "%="    shift, and go to state 906
    "&="    shift, and go to state 907
    "|="    shift, and go to state 908
    "^="    shift, and go to state 909
    "<<"    shift, and go to state 780
    ">>"    shift, and go to state 781
    "++"    shift, and go to state 782
    "--"    shift, and go to state 783
    "<="    shift, and go to state 784
    "<<="   shift, and go to state 910
    ">>="   shift, and go to state 911
    ">="    shift, and go to state 787
    "=="    shift, and go to state 788
    "!="    shift, and go to state 789
    "->"    shift, and go to state 790
    "<-"    shift, and go to state 912
    "??"    shift, and go to state 792
    "?."    shift, and go to state 793
    "?["    shift, and go to state 794
    "<|"    shift, and go to state 795
    "|>"    shift, and go to state 796
    ":="    shift, and go to state 797
    "<<<"   shift, and go to state 798
    ">>>"   shift, and go to state 799
    "<<<="  shift, and go to state 913
    ">>>="  shift, and go to state 914
    "&&"    shift, and go to state 802
    "||"    shift, and go to state 803
    "^^"    shift, and go to state 804
    "&&="   shift, and go to state 915
    "||="   shift, and go to state 916
    "^^="   shift, and go to state 917
    ".."    shift, and go to state 808
    '='     shift, and go to state 918
    '?'     shift, and go to state 810
    '|'     shift, and go to state 811
    '^'     shift, and go to state 812
    '&'     shift, and go to state 813
    '<'     shift, and go to state 814
    '>'     shift, and go to state 815
    '-'     shift, and go to state 816
    '+'     shift, and go to state 817
    '*'     shift, and go to state 818
    '/'     shift, and go to state 819
    '%'     shift, and go to state 820
    '.'     shift, and go to state 821
    '['     shift, and go to state 822
    '$'     shift, and go to state 528
    '@'     shift, and go to state 707

    " <|"     reduce using rule 388 (expr_assign)
    $default  reduce using rule 358 (expr_list)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 677

  320 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 919


State 678

  917 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  918                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 920


State 679

  916 make_table_decl: "table" '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 277 (optional_expr_map_tuple_list)

    string_builder                go to state 530
    expr_reader                   go to state 531
    optional_expr_map_tuple_list  go to state 921
    expression_keyword            go to state 594
    name_in_namespace             go to state 549
    expr_new                      go to state 551
    expr_cast                     go to state 561
    expr_type_decl                go to state 562
    expr_type_info                go to state 563
    block_or_lambda               go to state 564
    expr_full_block               go to state 565
    expr_numeric_const            go to state 566
    expr_named_call               go to state 569
    expr_method_call              go to state 570
    func_addr_expr                go to state 571
    expr_field                    go to state 572
    expr_call                     go to state 573
    expr                          go to state 724
    expr_mtag                     go to state 575
    basic_type_declaration        go to state 576
    make_decl                     go to state 577
    make_struct_decl              go to state 578
    make_map_tuple                go to state 733
    make_tuple_call               go to state 579
    make_dim_decl                 go to state 580
    expr_map_tuple_list           go to state 734
    make_table_decl               go to state 581
    array_comprehension           go to state 582


State 680

  296 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 922
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 681

  295 expression_delete: "delete" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 295 (expression_delete)


State 682

  509 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 923
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 683

   87 expression_with: "with" expr . expression_block
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 770
    "as"                   shift, and go to state 771
    "<<"                   shift, and go to state 780
    ">>"                   shift, and go to state 781
    "++"                   shift, and go to state 782
    "--"                   shift, and go to state 783
    "<="                   shift, and go to state 784
    ">="                   shift, and go to state 787
    "=="                   shift, and go to state 788
    "!="                   shift, and go to state 789
    "->"                   shift, and go to state 790
    "??"                   shift, and go to state 792
    "?."                   shift, and go to state 793
    "?["                   shift, and go to state 794
    "<|"                   shift, and go to state 795
    "|>"                   shift, and go to state 796
    "<<<"                  shift, and go to state 798
    ">>>"                  shift, and go to state 799
    "&&"                   shift, and go to state 802
    "||"                   shift, and go to state 803
    "^^"                   shift, and go to state 804
    ".."                   shift, and go to state 808
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 810
    '|'                    shift, and go to state 811
    '^'                    shift, and go to state 812
    '&'                    shift, and go to state 813
    '<'                    shift, and go to state 814
    '>'                    shift, and go to state 815
    '-'                    shift, and go to state 816
    '+'                    shift, and go to state 817
    '*'                    shift, and go to state 818
    '/'                    shift, and go to state 819
    '%'                    shift, and go to state 820
    '.'                    shift, and go to state 821
    '['                    shift, and go to state 822

    open_block        go to state 297
    expression_block  go to state 924


State 684

   89 expression_with_alias: "assume" "name" . '=' $@6 expr

    '='  shift, and go to state 925


State 685

  342 expr_cast: "cast" '<' . $@14 type_declaration_no_options '>' $@15 expr

    $default  reduce using rule 340 ($@14)

    $@14  go to state 926


State 686

  345 expr_cast: "upcast" '<' . $@16 type_declaration_no_options '>' $@17 expr

    $default  reduce using rule 343 ($@16)

    $@16  go to state 927


State 687

  510 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 928
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 688

  268 expression_any: "pass" semicolon .

    $default  reduce using rule 268 (expression_any)


State 689

  348 expr_cast: "reinterpret" '<' . $@18 type_declaration_no_options '>' $@19 expr

    $default  reduce using rule 346 ($@18)

    $@18  go to state 929


State 690

   60 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 930


State 691

   61 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 931


State 692

   62 expression_goto: "goto" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 62 (expression_goto)


State 693

  541 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 932
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 694

   85 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 85 (expression_unsafe)


State 695

  909 make_dim_decl: "fixed_array" '<' . $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 907 ($@107)

    $@107  go to state 933


State 696

  906 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 934
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 697

  878 make_struct_decl: "default" '<' . $@95 type_declaration_no_options '>' $@96 use_initializer

    $default  reduce using rule 876 ($@95)

    $@95  go to state 935


State 698

  887 make_tuple_call: "tuple" '<' . $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 885 ($@97)

    $@97  go to state 936


State 699

  884 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 937
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 700

  875 make_struct_decl: "variant" '<' . $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 873 ($@93)

    $@93  go to state 938


State 701

  247 expr_call_pipe: "generator" '<' . type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  511 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  512     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 939


State 702

  316 expression_yield_no_pipe: "yield" "<-" . expr
  319 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 497
    "@ <|"                            shift, and go to state 498
    "@@ <|"                           shift, and go to state 499
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 544
    expression_keyword      go to state 547
    expr_pipe               go to state 940
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign             go to state 675
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 941
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 703

  318 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 318 (expression_yield)


State 704

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  315 expression_yield_no_pipe: "yield" expr .
  388 expr_assign: expr .
  389            | expr . '=' expr
  390            | expr . "<-" expr
  391            | expr . ":=" expr
  392            | expr . "&=" expr
  393            | expr . "|=" expr
  394            | expr . "^=" expr
  395            | expr . "&&=" expr
  396            | expr . "||=" expr
  397            | expr . "^^=" expr
  398            | expr . "+=" expr
  399            | expr . "-=" expr
  400            | expr . "*=" expr
  401            | expr . "/=" expr
  402            | expr . "%=" expr
  403            | expr . "<<=" expr
  404            | expr . ">>=" expr
  405            | expr . "<<<=" expr
  406            | expr . ">>>=" expr
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 770
    "as"    shift, and go to state 771
    "+="    shift, and go to state 902
    "-="    shift, and go to state 903
    "/="    shift, and go to state 904
    "*="    shift, and go to state 905
    "%="    shift, and go to state 906
    "&="    shift, and go to state 907
    "|="    shift, and go to state 908
    "^="    shift, and go to state 909
    "<<"    shift, and go to state 780
    ">>"    shift, and go to state 781
    "++"    shift, and go to state 782
    "--"    shift, and go to state 783
    "<="    shift, and go to state 784
    "<<="   shift, and go to state 910
    ">>="   shift, and go to state 911
    ">="    shift, and go to state 787
    "=="    shift, and go to state 788
    "!="    shift, and go to state 789
    "->"    shift, and go to state 790
    "<-"    shift, and go to state 912
    "??"    shift, and go to state 792
    "?."    shift, and go to state 793
    "?["    shift, and go to state 794
    "<|"    shift, and go to state 795
    "|>"    shift, and go to state 796
    ":="    shift, and go to state 797
    "<<<"   shift, and go to state 798
    ">>>"   shift, and go to state 799
    "<<<="  shift, and go to state 913
    ">>>="  shift, and go to state 914
    "&&"    shift, and go to state 802
    "||"    shift, and go to state 803
    "^^"    shift, and go to state 804
    "&&="   shift, and go to state 915
    "||="   shift, and go to state 916
    "^^="   shift, and go to state 917
    ".."    shift, and go to state 808
    '='     shift, and go to state 918
    '?'     shift, and go to state 810
    '|'     shift, and go to state 811
    '^'     shift, and go to state 812
    '&'     shift, and go to state 813
    '<'     shift, and go to state 814
    '>'     shift, and go to state 815
    '-'     shift, and go to state 816
    '+'     shift, and go to state 817
    '*'     shift, and go to state 818
    '/'     shift, and go to state 819
    '%'     shift, and go to state 820
    '.'     shift, and go to state 821
    '['     shift, and go to state 822
    '$'     shift, and go to state 528
    '@'     shift, and go to state 707

    " <|"     reduce using rule 388 (expr_assign)
    $default  reduce using rule 315 (expression_yield_no_pipe)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 705

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  494     | "++" expr .
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 770
    "as"  shift, and go to state 771
    "++"  shift, and go to state 782
    "--"  shift, and go to state 783
    "->"  shift, and go to state 790
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    "<|"  shift, and go to state 795
    "|>"  shift, and go to state 796
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 494 (expr)


State 706

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  495     | "--" expr .
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 770
    "as"  shift, and go to state 771
    "++"  shift, and go to state 782
    "--"  shift, and go to state 783
    "->"  shift, and go to state 790
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    "<|"  shift, and go to state 795
    "|>"  shift, and go to state 796
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 495 (expr)


State 707

  364 block_or_lambda: '@' .
  365                | '@' . '@'

    '@'  shift, and go to state 942

    $default  reduce using rule 364 (block_or_lambda)


State 708

  376 expr_block: expression_block .

    $default  reduce using rule 376 (expr_block)


State 709

  377 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 16

    $default  reduce using rule 129 (optional_annotation_list)

    optional_annotation_list  go to state 943


State 710

  290 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 290 (expr_pipe)


State 711

  288 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 288 (expr_pipe)


State 712

  289 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 289 (expr_pipe)


State 713

  543 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 944
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 714

  544 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 945
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 715

  545 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 946
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 716

  546 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 947
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 717

  547 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 948
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 718

  549 expr_mtag: "$c" '(' . expr ')' '(' ')'
  550          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 949
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 719

  925 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 648
    "name"  shift, and go to state 649

    variable_name_with_pos_list  go to state 950


State 720

  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"
  861 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  862                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  863                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  864                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  891 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "const"                           shift, and go to state 420
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "where"                           shift, and go to state 951
    "reinterpret"                     shift, and go to state 484
    "implicit"                        shift, and go to state 421
    "explicit"                        shift, and go to state 422
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "=="                              shift, and go to state 423
    "??"                              shift, and go to state 424
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "$f"                              shift, and go to state 745
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 746
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '?'                               shift, and go to state 425
    '&'                               shift, and go to state 426
    '-'                               shift, and go to state 952
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 953
    '('                               shift, and go to state 954
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529
    '#'                               shift, and go to state 429

    $default  reduce using rule 845 (optional_block)

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 955
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    dim_list                go to state 430
    make_decl               go to state 577
    make_struct_fields      go to state 956
    make_struct_dim         go to state 957
    optional_block          go to state 958
    make_struct_decl        go to state 578
    make_tuple              go to state 959
    make_tuple_call         go to state 579
    make_dim                go to state 960
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 721

  926 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 648
    "name"  shift, and go to state 649

    variable_name_with_pos_list  go to state 961


State 722

  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"
  865 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  866                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  892 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "const"                           shift, and go to state 420
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "implicit"                        shift, and go to state 421
    "explicit"                        shift, and go to state 422
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "=="                              shift, and go to state 423
    "??"                              shift, and go to state 424
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "$f"                              shift, and go to state 745
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 746
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '?'                               shift, and go to state 425
    '&'                               shift, and go to state 426
    '-'                               shift, and go to state 952
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 953
    '('                               shift, and go to state 962
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529
    '#'                               shift, and go to state 429

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 955
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    dim_list                go to state 430
    make_decl               go to state 577
    make_struct_fields      go to state 956
    make_struct_dim         go to state 963
    make_struct_decl        go to state 578
    make_tuple              go to state 959
    make_tuple_call         go to state 579
    make_dim                go to state 964
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 723

  928 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 648
    "name"  shift, and go to state 649

    variable_name_with_pos_list  go to state 965


State 724

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  882 make_map_tuple: expr . "=>" expr
  883               | expr .

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "=>"   shift, and go to state 966
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 883 (make_map_tuple)


State 725

  910 make_table: make_map_tuple .

    $default  reduce using rule 910 (make_table)


State 726

  911 make_table: make_table . "end of expression" make_map_tuple
  915 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 967
    "end of expression"  shift, and go to state 968
    ";}}"                shift, and go to state 969

    optional_trailing_semicolon_cur_cur  go to state 970


State 727

  283 expression_keyword: "keyword" '<' . $@8 type_declaration_no_options_list '>' $@9 expr

    $default  reduce using rule 281 ($@8)

    $@8  go to state 971


State 728

  272 expr_keyword: "keyword" expr . expression_block
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 770
    "as"                   shift, and go to state 771
    "<<"                   shift, and go to state 780
    ">>"                   shift, and go to state 781
    "++"                   shift, and go to state 782
    "--"                   shift, and go to state 783
    "<="                   shift, and go to state 784
    ">="                   shift, and go to state 787
    "=="                   shift, and go to state 788
    "!="                   shift, and go to state 789
    "->"                   shift, and go to state 790
    "??"                   shift, and go to state 792
    "?."                   shift, and go to state 793
    "?["                   shift, and go to state 794
    "<|"                   shift, and go to state 795
    "|>"                   shift, and go to state 796
    "<<<"                  shift, and go to state 798
    ">>>"                  shift, and go to state 799
    "&&"                   shift, and go to state 802
    "||"                   shift, and go to state 803
    "^^"                   shift, and go to state 804
    ".."                   shift, and go to state 808
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 810
    '|'                    shift, and go to state 811
    '^'                    shift, and go to state 812
    '&'                    shift, and go to state 813
    '<'                    shift, and go to state 814
    '>'                    shift, and go to state 815
    '-'                    shift, and go to state 816
    '+'                    shift, and go to state 817
    '*'                    shift, and go to state 818
    '/'                    shift, and go to state 819
    '%'                    shift, and go to state 820
    '.'                    shift, and go to state 821
    '['                    shift, and go to state 822

    open_block        go to state 297
    expression_block  go to state 972


State 729

  286 expression_keyword: "type function" '<' . $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    $default  reduce using rule 284 ($@10)

    $@10  go to state 973


State 730

   35 string_builder_body: string_builder_body . character_sequence
   36                    | string_builder_body . "{" expr optional_format_string "}"
   37 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 172
    STRING_CHARACTER_ESC  shift, and go to state 173
    "end of the string"   shift, and go to state 974
    "{"                   shift, and go to state 975

    character_sequence  go to state 976


State 731

  927 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 648
    "name"  shift, and go to state 649

    variable_name_with_pos_list  go to state 977


State 732

  914 make_table_decl: "begin of code block" optional_expr_map_tuple_list . "end of code block"

    "end of code block"  shift, and go to state 978


State 733

  912 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 912 (expr_map_tuple_list)


State 734

  278 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  913 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 979

    $default  reduce using rule 921 (optional_comma)

    optional_comma  go to state 980


State 735

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  471 expr: '-' expr .
  472     | expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 770
    "as"  shift, and go to state 771
    "++"  shift, and go to state 782
    "--"  shift, and go to state 783
    "->"  shift, and go to state 790
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    "<|"  shift, and go to state 795
    "|>"  shift, and go to state 796
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 471 (expr)


State 736

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  470 expr: '+' expr .
  472     | expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 770
    "as"  shift, and go to state 771
    "++"  shift, and go to state 782
    "--"  shift, and go to state 783
    "->"  shift, and go to state 790
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    "<|"  shift, and go to state 795
    "|>"  shift, and go to state 796
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 470 (expr)


State 737

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  508     | '*' expr .
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 508 (expr)


State 738

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  469 expr: '~' expr .
  472     | expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 770
    "as"  shift, and go to state 771
    "++"  shift, and go to state 782
    "--"  shift, and go to state 783
    "->"  shift, and go to state 790
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    "<|"  shift, and go to state 795
    "|>"  shift, and go to state 796
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 469 (expr)


State 739

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  468 expr: '!' expr .
  472     | expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 770
    "as"  shift, and go to state 771
    "++"  shift, and go to state 782
    "--"  shift, and go to state 783
    "->"  shift, and go to state 790
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    "<|"  shift, and go to state 795
    "|>"  shift, and go to state 796
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 468 (expr)


State 740

  923 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 648
    "name"  shift, and go to state 649

    variable_name_with_pos_list  go to state 981


State 741

  924 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 982


State 742

  890 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 983


State 743

  274 optional_expr_list: expr_list . optional_comma
  359 expr_list: expr_list . ',' expr

    ','  shift, and go to state 984

    ','       [reduce using rule 921 (optional_comma)]
    $default  reduce using rule 921 (optional_comma)

    optional_comma  go to state 985


State 744

  358 expr_list: expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 358 (expr_list)


State 745

  830 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  831                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 986


State 746

  292 name_in_namespace: "name" .
  293                  | "name" . "::" "name"
  826 make_struct_fields: "name" . copy_or_move expr
  827                   | "name" . ":=" expr

    "<-"  shift, and go to state 878
    ":="  shift, and go to state 987
    "::"  shift, and go to state 104
    '='   shift, and go to state 880

    $default  reduce using rule 292 (name_in_namespace)

    copy_or_move  go to state 988


State 747

  359 expr_list: expr_list . ',' expr
  498 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 984

    $default  reduce using rule 921 (optional_comma)

    optional_comma  go to state 989


State 748

  828 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  829                   | make_struct_fields . ',' "name" ":=" expr
  832                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  833                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  836 make_struct_single: make_struct_fields . optional_comma

    ','  shift, and go to state 990

    $default  reduce using rule 921 (optional_comma)

    optional_comma  go to state 991


State 749

  499 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 992


State 750

  365 block_or_lambda: '@' '@' .
  434 func_addr_expr: '@' '@' . func_addr_name
  437               | '@' '@' . '<' $@23 type_declaration_no_options '>' $@24 func_addr_name
  440               | '@' '@' . '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name
  558 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 993
    "$c"    shift, and go to state 994
    "name"  shift, and go to state 63
    '<'     shift, and go to state 995

    $default  reduce using rule 365 (block_or_lambda)

    name_in_namespace  go to state 996
    func_addr_name     go to state 997


State 751

  266 expression_any: expression_label semicolon .

    $default  reduce using rule 266 (expression_any)


State 752

  267 expression_any: expression_goto semicolon .

    $default  reduce using rule 267 (expression_any)


State 753

   80 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 770
    "as"                   shift, and go to state 771
    "<<"                   shift, and go to state 780
    ">>"                   shift, and go to state 781
    "++"                   shift, and go to state 782
    "--"                   shift, and go to state 783
    "<="                   shift, and go to state 784
    ">="                   shift, and go to state 787
    "=="                   shift, and go to state 788
    "!="                   shift, and go to state 789
    "->"                   shift, and go to state 790
    "??"                   shift, and go to state 792
    "?."                   shift, and go to state 793
    "?["                   shift, and go to state 794
    "<|"                   shift, and go to state 795
    "|>"                   shift, and go to state 796
    "<<<"                  shift, and go to state 798
    ">>>"                  shift, and go to state 799
    "&&"                   shift, and go to state 802
    "||"                   shift, and go to state 803
    "^^"                   shift, and go to state 804
    ".."                   shift, and go to state 808
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 810
    '|'                    shift, and go to state 811
    '^'                    shift, and go to state 812
    '&'                    shift, and go to state 813
    '<'                    shift, and go to state 814
    '>'                    shift, and go to state 815
    '-'                    shift, and go to state 816
    '+'                    shift, and go to state 817
    '*'                    shift, and go to state 818
    '/'                    shift, and go to state 819
    '%'                    shift, and go to state 820
    '.'                    shift, and go to state 821
    '['                    shift, and go to state 822

    open_block        go to state 297
    expression_block  go to state 998


State 754

   82 expression_if_then_else: expression_if_one_liner "if" . $@4 expr expression_else_one_liner semicolon

    $default  reduce using rule 81 ($@4)

    $@4  go to state 999


State 755

  244 expression_block: open_block expressions close_block "finally" . open_block expressions close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 1000


State 756

  380 expr_full_block_assumed_piped: block_or_lambda . $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 379 ($@22)

    $@22  go to state 1001


State 757

  246 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 246 (expr_call_pipe)


State 758

  540 expr: name_in_namespace "name" .

    $default  reduce using rule 540 (expr)


State 759

  428 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  429                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  451 expr_call: name_in_namespace '(' . ')'
  452          | name_in_namespace '(' . "uninitialized" ')'
  453          | name_in_namespace '(' . make_struct_single ')'
  454          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  455          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "uninitialized"                   shift, and go to state 1002
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "$f"                              shift, and go to state 745
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 746
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 1003
    '('                               shift, and go to state 527
    ')'                               shift, and go to state 1004
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 1005
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_fields      go to state 748
    make_struct_single      go to state 1006
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 760

  253 expression_any: expression_delete semicolon .

    $default  reduce using rule 253 (expression_any)


State 761

  260 expression_any: expression_break semicolon .

    $default  reduce using rule 260 (expression_any)


State 762

  261 expression_any: expression_continue semicolon .

    $default  reduce using rule 261 (expression_any)


State 763

  312 expression_return: expression_return_no_pipe semicolon .

    $default  reduce using rule 312 (expression_return)


State 764

  317 expression_yield: expression_yield_no_pipe semicolon .

    $default  reduce using rule 317 (expression_yield)


State 765

  326 optional_in_scope: "inscope" .

    $default  reduce using rule 326 (optional_in_scope)


State 766

  338 expression_let: kwd_let optional_in_scope . let_variable_declaration
  339               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 318
    "[["    shift, and go to state 1007
    "name"  shift, and go to state 319
    '('     shift, and go to state 1008

    tuple_expansion_variable_declaration  go to state 1009
    let_variable_name_with_pos_list       go to state 320
    let_variable_declaration              go to state 1010


State 767

  378 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 1011
    "[["       shift, and go to state 1012

    $default  reduce using rule 373 (optional_capture_list)

    optional_capture_list  go to state 1013


State 768

  287 expr_pipe: expr_assign " <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 528
    '@'                    shift, and go to state 707

    open_block        go to state 297
    expression_block  go to state 708
    block_or_lambda   go to state 709
    expr_block        go to state 1014


State 769

  252 expression_any: expr_assign semicolon .

    $default  reduce using rule 252 (expression_any)


State 770

  517 expr: expr "is" . "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr "is" . basic_type_declaration
  519     | expr "is" . "name"
  557 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 1015
    "bool"      shift, and go to state 329
    "void"      shift, and go to state 330
    "string"    shift, and go to state 331
    "int"       shift, and go to state 333
    "int2"      shift, and go to state 334
    "int3"      shift, and go to state 335
    "int4"      shift, and go to state 336
    "uint"      shift, and go to state 337
    "bitfield"  shift, and go to state 490
    "uint2"     shift, and go to state 339
    "uint3"     shift, and go to state 340
    "uint4"     shift, and go to state 341
    "float"     shift, and go to state 342
    "float2"    shift, and go to state 343
    "float3"    shift, and go to state 344
    "float4"    shift, and go to state 345
    "range"     shift, and go to state 346
    "urange"    shift, and go to state 347
    "range64"   shift, and go to state 348
    "urange64"  shift, and go to state 349
    "int64"     shift, and go to state 351
    "uint64"    shift, and go to state 352
    "double"    shift, and go to state 353
    "int8"      shift, and go to state 356
    "uint8"     shift, and go to state 357
    "int16"     shift, and go to state 358
    "uint16"    shift, and go to state 359
    "$f"        shift, and go to state 1016
    "name"      shift, and go to state 1017

    basic_type_declaration  go to state 1018


State 771

  520 expr: expr "as" . "name"
  523     | expr "as" . "type" '<' $@31 type_declaration '>' $@32
  524     | expr "as" . basic_type_declaration
  555 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1019
    "bool"      shift, and go to state 329
    "void"      shift, and go to state 330
    "string"    shift, and go to state 331
    "int"       shift, and go to state 333
    "int2"      shift, and go to state 334
    "int3"      shift, and go to state 335
    "int4"      shift, and go to state 336
    "uint"      shift, and go to state 337
    "bitfield"  shift, and go to state 490
    "uint2"     shift, and go to state 339
    "uint3"     shift, and go to state 340
    "uint4"     shift, and go to state 341
    "float"     shift, and go to state 342
    "float2"    shift, and go to state 343
    "float3"    shift, and go to state 344
    "float4"    shift, and go to state 345
    "range"     shift, and go to state 346
    "urange"    shift, and go to state 347
    "range64"   shift, and go to state 348
    "urange64"  shift, and go to state 349
    "int64"     shift, and go to state 351
    "uint64"    shift, and go to state 352
    "double"    shift, and go to state 353
    "int8"      shift, and go to state 356
    "uint8"     shift, and go to state 357
    "int16"     shift, and go to state 358
    "uint16"    shift, and go to state 359
    "$f"        shift, and go to state 1020
    "name"      shift, and go to state 1021

    basic_type_declaration  go to state 1022


State 772

  398 expr_assign: expr "+=" . expr
  419 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1027
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1028
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 773

  399 expr_assign: expr "-=" . expr
  420 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1029
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1030
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 774

  401 expr_assign: expr "/=" . expr
  422 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1031
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1032
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 775

  400 expr_assign: expr "*=" . expr
  421 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1033
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1034
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 776

  402 expr_assign: expr "%=" . expr
  423 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1035
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1036
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 777

  392 expr_assign: expr "&=" . expr
  413 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1037
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1038
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 778

  393 expr_assign: expr "|=" . expr
  414 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1039
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1040
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 779

  394 expr_assign: expr "^=" . expr
  415 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1041
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1042
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 780

  472 expr: expr "<<" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1043
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 781

  473 expr: expr ">>" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1044
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 782

  496 expr: expr "++" .

    $default  reduce using rule 496 (expr)


State 783

  497 expr: expr "--" .

    $default  reduce using rule 497 (expr)


State 784

  485 expr: expr "<=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1045
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 785

  403 expr_assign: expr "<<=" . expr
  424 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1046
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1047
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 786

  404 expr_assign: expr ">>=" . expr
  425 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1048
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1049
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 787

  486 expr: expr ">=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1050
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 788

  483 expr: expr "==" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1051
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 789

  484 expr: expr "!=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1052
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 790

  430 expr_method_call: expr "->" . "name" '(' ')'
  431                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1053


State 791

  390 expr_assign: expr "<-" . expr
  412 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1054
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1055
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 792

  513 expr: expr "??" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1056
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 793

  504 expr: expr "?." . "name"
  552 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1057
    "name"  shift, and go to state 1058


State 794

  502 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1059
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 795

  537 expr: expr "<|" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1060
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 796

  538 expr: expr "|>" . expr
  539     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1061
    expr_mtag               go to state 575
    basic_type_declaration  go to state 1062
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 797

  391 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1063
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 798

  474 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1064
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 799

  475 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1065
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 800

  405 expr_assign: expr "<<<=" . expr
  426 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1066
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1067
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 801

  406 expr_assign: expr ">>>=" . expr
  427 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1068
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1069
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 802

  490 expr: expr "&&" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1070
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 803

  491 expr: expr "||" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1071
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 804

  492 expr: expr "^^" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1072
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 805

  395 expr_assign: expr "&&=" . expr
  416 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1073
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1074
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 806

  396 expr_assign: expr "||=" . expr
  417 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1075
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1076
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 807

  397 expr_assign: expr "^^=" . expr
  418 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1077
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1078
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 808

  493 expr: expr ".." . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1079
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 809

  389 expr_assign: expr '=' . expr
  411 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 1023
    "@ <|"                            shift, and go to state 1024
    "@@ <|"                           shift, and go to state 1025
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 1026
    expression_keyword      go to state 547
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign_pipe_right  go to state 1080
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1081
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 810

  514 expr: expr '?' . expr ':' expr
  525     | expr '?' . "as" "name"
  528     | expr '?' . "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr '?' . "as" basic_type_declaration
  556 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "as"                              shift, and go to state 1082
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1083
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 811

  488 expr: expr '|' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1084
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 812

  489 expr: expr '^' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1085
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 813

  487 expr: expr '&' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1086
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 814

  481 expr: expr '<' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1087
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 815

  482 expr: expr '>' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1088
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 816

  477 expr: expr '-' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1089
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 817

  476 expr: expr '+' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1090
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 818

  478 expr: expr '*' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1091
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 819

  479 expr: expr '/' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1092
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 820

  480 expr: expr '%' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1093
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 821

  441 expr_field: expr '.' . "name"
  442           | expr '.' . '.' "name"
  443           | expr '.' . "name" '(' ')'
  444           | expr '.' . "name" '(' expr_list ')'
  445           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  446           | expr '.' . basic_type_declaration '(' ')'
  447           | expr '.' . basic_type_declaration '(' expr_list ')'
  450           | expr '.' . $@27 error $@28
  501 expr: expr '.' . '[' expr ']'
  503     | expr '.' . "?[" expr ']'
  505     | expr '.' . "?." "name"
  551 expr_mtag: expr '.' . "$f" '(' expr ')'
  553          | expr '.' . '.' "$f" '(' expr ')'
  554          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 329
    "void"      shift, and go to state 330
    "string"    shift, and go to state 331
    "int"       shift, and go to state 333
    "int2"      shift, and go to state 334
    "int3"      shift, and go to state 335
    "int4"      shift, and go to state 336
    "uint"      shift, and go to state 337
    "bitfield"  shift, and go to state 490
    "uint2"     shift, and go to state 339
    "uint3"     shift, and go to state 340
    "uint4"     shift, and go to state 341
    "float"     shift, and go to state 342
    "float2"    shift, and go to state 343
    "float3"    shift, and go to state 344
    "float4"    shift, and go to state 345
    "range"     shift, and go to state 346
    "urange"    shift, and go to state 347
    "range64"   shift, and go to state 348
    "urange64"  shift, and go to state 349
    "int64"     shift, and go to state 351
    "uint64"    shift, and go to state 352
    "double"    shift, and go to state 353
    "int8"      shift, and go to state 356
    "uint8"     shift, and go to state 357
    "int16"     shift, and go to state 358
    "uint16"    shift, and go to state 359
    "?."        shift, and go to state 1094
    "?["        shift, and go to state 1095
    "$f"        shift, and go to state 1096
    "name"      shift, and go to state 1097
    '.'         shift, and go to state 1098
    '['         shift, and go to state 1099

    $default  reduce using rule 448 ($@27)

    $@27                    go to state 1100
    basic_type_declaration  go to state 1101


State 822

  500 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1102
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 823

  245 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 245 (expr_call_pipe)


State 824

  456 expr_call: basic_type_declaration '(' . ')'
  457          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    ')'                               shift, and go to state 1103
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 1104
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 825

  640 enum_list: enum_list . semicolon
  641          | enum_list . "name" semicolon
  642          | enum_list . "name" '=' expr semicolon
  662 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list . $@45 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 584
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 661 ($@45)

    semicolon  go to state 585
    $@45       go to state 1105


State 826

  642 enum_list: enum_list "name" '=' . expr semicolon

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1106
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 827

  641 enum_list: enum_list "name" semicolon .

    $default  reduce using rule 641 (enum_list)


State 828

  659 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block .

    $default  reduce using rule 659 (enum_declaration)


State 829

  130 optional_annotation_list: '[' . annotation_list ']'
  581 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' semicolon

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 73
    annotation_list               go to state 1107
    name_in_namespace             go to state 75


State 830

  574 struct_variable_declaration_list: struct_variable_declaration_list semicolon .

    $default  reduce using rule 574 (struct_variable_declaration_list)


State 831

  578 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  580                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "def"  shift, and go to state 1108


State 832

  676 optional_struct_variable_declaration_list: open_block struct_variable_declaration_list close_block .

    $default  reduce using rule 676 (optional_struct_variable_declaration_list)


State 833

  576 struct_variable_declaration_list: struct_variable_declaration_list $@35 . structure_variable_declaration semicolon

    "[["  shift, and go to state 229
    '@'   shift, and go to state 230

    $default  reduce using rule 559 (optional_field_annotation)

    metadata_argument_list          go to state 231
    optional_field_annotation       go to state 1109
    structure_variable_declaration  go to state 1110


State 834

  511 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  512     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 1111


State 835

  618 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 618 (let_variable_name_with_pos_list)


State 836

  621 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1112


State 837

  622 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options semicolon .

    $default  reduce using rule 622 (let_variable_declaration)


State 838

  623 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  624                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 497
    "@ <|"                            shift, and go to state 498
    "@@ <|"                           shift, and go to state 499
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 544
    expression_keyword      go to state 547
    expr_pipe               go to state 1113
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign             go to state 675
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1114
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 839

  626 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 626 (let_variable_declaration)


State 840

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  388 expr_assign: expr .
  389            | expr . '=' expr
  390            | expr . "<-" expr
  391            | expr . ":=" expr
  392            | expr . "&=" expr
  393            | expr . "|=" expr
  394            | expr . "^=" expr
  395            | expr . "&&=" expr
  396            | expr . "||=" expr
  397            | expr . "^^=" expr
  398            | expr . "+=" expr
  399            | expr . "-=" expr
  400            | expr . "*=" expr
  401            | expr . "/=" expr
  402            | expr . "%=" expr
  403            | expr . "<<=" expr
  404            | expr . ">>=" expr
  405            | expr . "<<<=" expr
  406            | expr . ">>>=" expr
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  625 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . semicolon

    "is"                 shift, and go to state 770
    "as"                 shift, and go to state 771
    "+="                 shift, and go to state 902
    "-="                 shift, and go to state 903
    "/="                 shift, and go to state 904
    "*="                 shift, and go to state 905
    "%="                 shift, and go to state 906
    "&="                 shift, and go to state 907
    "|="                 shift, and go to state 908
    "^="                 shift, and go to state 909
    "<<"                 shift, and go to state 780
    ">>"                 shift, and go to state 781
    "++"                 shift, and go to state 782
    "--"                 shift, and go to state 783
    "<="                 shift, and go to state 784
    "<<="                shift, and go to state 910
    ">>="                shift, and go to state 911
    ">="                 shift, and go to state 787
    "=="                 shift, and go to state 788
    "!="                 shift, and go to state 789
    "->"                 shift, and go to state 790
    "<-"                 shift, and go to state 912
    "??"                 shift, and go to state 792
    "?."                 shift, and go to state 793
    "?["                 shift, and go to state 794
    "<|"                 shift, and go to state 795
    "|>"                 shift, and go to state 796
    ":="                 shift, and go to state 797
    "<<<"                shift, and go to state 798
    ">>>"                shift, and go to state 799
    "<<<="               shift, and go to state 913
    ">>>="               shift, and go to state 914
    "&&"                 shift, and go to state 802
    "||"                 shift, and go to state 803
    "^^"                 shift, and go to state 804
    "&&="                shift, and go to state 915
    "||="                shift, and go to state 916
    "^^="                shift, and go to state 917
    ".."                 shift, and go to state 808
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 918
    '?'                  shift, and go to state 810
    '|'                  shift, and go to state 811
    '^'                  shift, and go to state 812
    '&'                  shift, and go to state 813
    '<'                  shift, and go to state 814
    '>'                  shift, and go to state 815
    '-'                  shift, and go to state 816
    '+'                  shift, and go to state 817
    '*'                  shift, and go to state 818
    '/'                  shift, and go to state 819
    '%'                  shift, and go to state 820
    '.'                  shift, and go to state 821
    '['                  shift, and go to state 822
    '$'                  shift, and go to state 528
    '@'                  shift, and go to state 707

    $default  reduce using rule 388 (expr_assign)

    semicolon                      go to state 1115
    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 841

  746 type_declaration_no_options: "type" '<' $@50 type_declaration . '>' $@51
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431
    '>'  shift, and go to state 1116


State 842

  769 type_declaration_no_options: "array" '<' $@55 type_declaration . '>' $@56
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431
    '>'  shift, and go to state 1117


State 843

  772 type_declaration_no_options: "table" '<' $@57 table_type_pair . '>' $@58

    '>'  shift, and go to state 1118


State 844

  734 table_type_pair: type_declaration .
  735                | type_declaration . c_or_s type_declaration
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 637
    '|'                  shift, and go to state 431

    $default  reduce using rule 734 (table_type_pair)

    semicolon  go to state 638
    c_or_s     go to state 1119


State 845

  747 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 747 (type_declaration_no_options)


State 846

  775 type_declaration_no_options: "iterator" '<' $@59 type_declaration . '>' $@60
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431
    '>'  shift, and go to state 1120


State 847

  765 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration . '>' $@54
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431
    '>'  shift, and go to state 1121


State 848

  722 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 722 (auto_type_declaration)


State 849

  724 bitfield_bits: "name" .

    $default  reduce using rule 724 (bitfield_bits)


State 850

  725 bitfield_bits: bitfield_bits . semicolon "name"
  731 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits . '>' $@49

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '>'                  shift, and go to state 1122

    semicolon  go to state 1123


State 851

  779 type_declaration_no_options: "block" '<' $@61 type_declaration . '>' $@62
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431
    '>'  shift, and go to state 1124


State 852

  782 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list . optional_function_type '>' $@64

    ':'  shift, and go to state 387

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1125


State 853

  786 type_declaration_no_options: "function" '<' $@65 type_declaration . '>' $@66
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431
    '>'  shift, and go to state 1126


State 854

  789 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 387

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1127


State 855

  793 type_declaration_no_options: "lambda" '<' $@69 type_declaration . '>' $@70
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431
    '>'  shift, and go to state 1128


State 856

  796 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 387

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1129


State 857

  592 tuple_type_list: tuple_type .

    $default  reduce using rule 592 (tuple_type_list)


State 858

  593 tuple_type_list: tuple_type_list . c_or_s tuple_type
  799 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list . '>' $@74

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 637
    '>'                  shift, and go to state 1130

    semicolon  go to state 638
    c_or_s     go to state 1131


State 859

  598 variant_type_list: variant_type .

    $default  reduce using rule 598 (variant_type_list)


State 860

  599 variant_type_list: variant_type_list . c_or_s variant_type
  802 type_declaration_no_options: "variant" '<' $@75 variant_type_list . '>' $@76

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 637
    '>'                  shift, and go to state 1132

    semicolon  go to state 638
    c_or_s     go to state 1133


State 861

  723 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 723 (auto_type_declaration)


State 862

  750 type_declaration_no_options: '$' name_in_namespace '<' $@52 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    type_declaration_no_options_list  go to state 1134
    name_in_namespace                 go to state 364
    basic_type_declaration            go to state 365
    structure_type_declaration        go to state 366
    auto_type_declaration             go to state 367
    bitfield_type_declaration         go to state 368
    type_declaration_no_options       go to state 369
    type_declaration                  go to state 1135


State 863

  748 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1136


State 864

  751 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 751 (type_declaration_no_options)


State 865

  736 dim_list: '[' expr ']' .

    $default  reduce using rule 736 (dim_list)


State 866

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  737 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ']'    shift, and go to state 1137


State 867

  728 bitfield_alias_bits: bitfield_alias_bits "name" semicolon .

    $default  reduce using rule 728 (bitfield_alias_bits)


State 868

  820 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block .

    $default  reduce using rule 820 (bitfield_alias_declaration)


State 869

  591 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 1138


State 870

  596 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 596 (tuple_alias_type_list)


State 871

  810 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block .

    $default  reduce using rule 810 (tuple_alias_declaration)


State 872

  597 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 1139


State 873

  602 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 602 (variant_alias_type_list)


State 874

  815 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block .

    $default  reduce using rule 815 (variant_alias_declaration)


State 875

  584 function_argument_declaration_type: "$a" '(' expr ')' .

    $default  reduce using rule 584 (function_argument_declaration_type)


State 876

  681 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1140
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 877

  682 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1141


State 878

  604 copy_or_move: "<-" .

    $default  reduce using rule 604 (copy_or_move)


State 879

  683 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  684                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1142


State 880

  603 copy_or_move: '=' .

    $default  reduce using rule 603 (copy_or_move)


State 881

  608 variable_declaration_type: variable_name_with_pos_list ':' . type_declaration
  609                          | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 1143


State 882

  606 variable_declaration_no_type: variable_name_with_pos_list '&' .

    $default  reduce using rule 606 (variable_declaration_no_type)


State 883

  607 variable_declaration_no_type: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1144
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 884

  869 make_struct_decl: "struct" '<' $@89 . type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 1145


State 885

  872 make_struct_decl: "class" '<' $@91 . type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 1146


State 886

   86 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 86 (expression_while_loop)


State 887

   84 expression_for_loop: "for" $@5 variable_name_with_pos_list . "in" expr_list expression_block
  683 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  684                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1147
    ','   shift, and go to state 879


State 888

  299 new_type_declaration: '<' $@12 . type_declaration '>' $@13

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 1148


State 889

  302 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  303         | "new" new_type_declaration '(' . expr_list ')'
  304         | "new" new_type_declaration '(' . make_struct_single ')'
  305         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "uninitialized"                   shift, and go to state 1149
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "$f"                              shift, and go to state 745
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 746
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 859 (use_initializer)

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 1150
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_fields      go to state 748
    make_struct_single      go to state 1151
    use_initializer         go to state 1152
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 890

  352 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  353               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  354               | "typeinfo" '(' name_in_namespace . '<' "name" c_or_s "name" '>' expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '<'                               shift, and go to state 1153
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1154
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 891

  356 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  357               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 1155


State 892

  355 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1156
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 893

  351 expr_type_decl: "type" '<' $@20 . type_declaration '>' $@21

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 1157


State 894

  895 make_dim_decl: "array" "struct" '<' . $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 893 ($@99)

    $@99  go to state 1158


State 895

  898 make_dim_decl: "array" "tuple" '<' . $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 896 ($@101)

    $@101  go to state 1159


State 896

  901 make_dim_decl: "array" "variant" '<' . $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'

    $default  reduce using rule 899 ($@103)

    $@103  go to state 1160


State 897

  905 make_dim_decl: "array" '<' $@105 . type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 1161


State 898

  359 expr_list: expr_list . ',' expr
  902 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 984

    $default  reduce using rule 921 (optional_comma)

    optional_comma  go to state 1162


State 899

  314 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 314 (expression_return)


State 900

  311 expression_return_no_pipe: "return" "<-" expr_list .
  359 expr_list: expr_list . ',' expr

    ','  shift, and go to state 901

    $default  reduce using rule 311 (expression_return_no_pipe)


State 901

  359 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1163
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 902

  398 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1164
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 903

  399 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1165
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 904

  401 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1166
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 905

  400 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1167
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 906

  402 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1168
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 907

  392 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1169
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 908

  393 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1170
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 909

  394 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1171
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 910

  403 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1172
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 911

  404 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1173
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 912

  390 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1174
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 913

  405 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1175
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 914

  406 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1176
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 915

  395 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1177
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 916

  396 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1178
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 917

  397 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1179
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 918

  389 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1180
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 919

  320 expression_try_catch: "try" expression_block "recover" . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 1181


State 920

  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"
  917 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  918                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"              shift, and go to state 420
    "implicit"           shift, and go to state 421
    "explicit"           shift, and go to state 422
    "=="                 shift, and go to state 423
    "??"                 shift, and go to state 424
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 637
    '?'                  shift, and go to state 425
    '&'                  shift, and go to state 426
    '>'                  shift, and go to state 1182
    '-'                  shift, and go to state 427
    '['                  shift, and go to state 428
    '#'                  shift, and go to state 429

    semicolon  go to state 638
    c_or_s     go to state 1183
    dim_list   go to state 430


State 921

  916 make_table_decl: "table" '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1184


State 922

  296 expression_delete: "delete" "explicit" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 296 (expression_delete)


State 923

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  509     | "deref" '(' expr . ')'
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1185


State 924

   87 expression_with: "with" expr expression_block .

    $default  reduce using rule 87 (expression_with)


State 925

   89 expression_with_alias: "assume" "name" '=' . $@6 expr

    $default  reduce using rule 88 ($@6)

    $@6  go to state 1186


State 926

  342 expr_cast: "cast" '<' $@14 . type_declaration_no_options '>' $@15 expr

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 1187


State 927

  345 expr_cast: "upcast" '<' $@16 . type_declaration_no_options '>' $@17 expr

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 1188


State 928

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  510     | "addr" '(' expr . ')'
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1189


State 929

  348 expr_cast: "reinterpret" '<' $@18 . type_declaration_no_options '>' $@19 expr

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 1190


State 930

   60 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 60 (expression_label)


State 931

   61 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 61 (expression_goto)


State 932

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  541     | "unsafe" '(' expr . ')'
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1191


State 933

  909 make_dim_decl: "fixed_array" '<' $@107 . type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 1192


State 934

  359 expr_list: expr_list . ',' expr
  906 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 984

    $default  reduce using rule 921 (optional_comma)

    optional_comma  go to state 1193


State 935

  878 make_struct_decl: "default" '<' $@95 . type_declaration_no_options '>' $@96 use_initializer

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 1194


State 936

  887 make_tuple_call: "tuple" '<' $@97 . tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 636
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    tuple_type                   go to state 857
    tuple_type_list              go to state 1195
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 641


State 937

  359 expr_list: expr_list . ',' expr
  884 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 984

    $default  reduce using rule 921 (optional_comma)

    optional_comma  go to state 1196


State 938

  875 make_struct_decl: "variant" '<' $@93 . variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 643

    variant_type       go to state 859
    variant_type_list  go to state 1197


State 939

  247 expr_call_pipe: "generator" '<' type_declaration_no_options . '>' optional_capture_list expr_full_block_assumed_piped
  511 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  512     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "??"        shift, and go to state 424
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '>'         shift, and go to state 1198
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    dim_list  go to state 430


State 940

  319 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 319 (expression_yield)


State 941

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  316 expression_yield_no_pipe: "yield" "<-" expr .
  388 expr_assign: expr .
  389            | expr . '=' expr
  390            | expr . "<-" expr
  391            | expr . ":=" expr
  392            | expr . "&=" expr
  393            | expr . "|=" expr
  394            | expr . "^=" expr
  395            | expr . "&&=" expr
  396            | expr . "||=" expr
  397            | expr . "^^=" expr
  398            | expr . "+=" expr
  399            | expr . "-=" expr
  400            | expr . "*=" expr
  401            | expr . "/=" expr
  402            | expr . "%=" expr
  403            | expr . "<<=" expr
  404            | expr . ">>=" expr
  405            | expr . "<<<=" expr
  406            | expr . ">>>=" expr
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 770
    "as"    shift, and go to state 771
    "+="    shift, and go to state 902
    "-="    shift, and go to state 903
    "/="    shift, and go to state 904
    "*="    shift, and go to state 905
    "%="    shift, and go to state 906
    "&="    shift, and go to state 907
    "|="    shift, and go to state 908
    "^="    shift, and go to state 909
    "<<"    shift, and go to state 780
    ">>"    shift, and go to state 781
    "++"    shift, and go to state 782
    "--"    shift, and go to state 783
    "<="    shift, and go to state 784
    "<<="   shift, and go to state 910
    ">>="   shift, and go to state 911
    ">="    shift, and go to state 787
    "=="    shift, and go to state 788
    "!="    shift, and go to state 789
    "->"    shift, and go to state 790
    "<-"    shift, and go to state 912
    "??"    shift, and go to state 792
    "?."    shift, and go to state 793
    "?["    shift, and go to state 794
    "<|"    shift, and go to state 795
    "|>"    shift, and go to state 796
    ":="    shift, and go to state 797
    "<<<"   shift, and go to state 798
    ">>>"   shift, and go to state 799
    "<<<="  shift, and go to state 913
    ">>>="  shift, and go to state 914
    "&&"    shift, and go to state 802
    "||"    shift, and go to state 803
    "^^"    shift, and go to state 804
    "&&="   shift, and go to state 915
    "||="   shift, and go to state 916
    "^^="   shift, and go to state 917
    ".."    shift, and go to state 808
    '='     shift, and go to state 918
    '?'     shift, and go to state 810
    '|'     shift, and go to state 811
    '^'     shift, and go to state 812
    '&'     shift, and go to state 813
    '<'     shift, and go to state 814
    '>'     shift, and go to state 815
    '-'     shift, and go to state 816
    '+'     shift, and go to state 817
    '*'     shift, and go to state 818
    '/'     shift, and go to state 819
    '%'     shift, and go to state 820
    '.'     shift, and go to state 821
    '['     shift, and go to state 822
    '$'     shift, and go to state 528
    '@'     shift, and go to state 707

    " <|"     reduce using rule 388 (expr_assign)
    $default  reduce using rule 316 (expression_yield_no_pipe)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 942

  365 block_or_lambda: '@' '@' .

    $default  reduce using rule 365 (block_or_lambda)


State 943

  377 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 1011
    "[["       shift, and go to state 1012

    $default  reduce using rule 373 (optional_capture_list)

    optional_capture_list  go to state 1199


State 944

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  543 expr_mtag: "$$" '(' expr . ')'
  551          | expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1200


State 945

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  544 expr_mtag: "$i" '(' expr . ')'
  551          | expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1201


State 946

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  545 expr_mtag: "$v" '(' expr . ')'
  551          | expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1202


State 947

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  546 expr_mtag: "$b" '(' expr . ')'
  551          | expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1203


State 948

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  547 expr_mtag: "$a" '(' expr . ')'
  551          | expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1204


State 949

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  549 expr_mtag: "$c" '(' expr . ')' '(' ')'
  550          | "$c" '(' expr . ')' '(' expr_list ')'
  551          | expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1205


State 950

  683 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  684                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  925 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1206
    ','   shift, and go to state 879


State 951

  846 optional_block: "where" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 528
    '@'                    shift, and go to state 707

    open_block        go to state 297
    expression_block  go to state 708
    block_or_lambda   go to state 709
    expr_block        go to state 1207


State 952

  471 expr: '-' . expr
  751 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  754                            | type_declaration_no_options '-' . "const"
  756                            | type_declaration_no_options '-' . '&'
  759                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "const"                           shift, and go to state 624
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '&'                               shift, and go to state 625
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 1208
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529
    '#'                               shift, and go to state 627

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 735
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 953

  736 dim_list: '[' . expr ']'
  743 type_declaration_no_options: type_declaration_no_options '[' . ']'
  890 make_dim_decl: '[' . optional_expr_list ']'
  923 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  924                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "for"                             shift, and go to state 740
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "iterator"                        shift, and go to state 741
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    ']'                               shift, and go to state 628
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    ']'  [reduce using rule 273 (optional_expr_list)]

    string_builder          go to state 530
    expr_reader             go to state 531
    optional_expr_list      go to state 742
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 743
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1209
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 954

  498 expr: '(' . expr_list optional_comma ')'
  499     | '(' . make_struct_single ')'
  863 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  864                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "$f"                              shift, and go to state 745
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 746
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    ')'                               shift, and go to state 1210
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 747
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_fields      go to state 748
    make_struct_single      go to state 749
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 955

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  879 make_tuple: expr .
  880           | expr . "=>" expr

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "=>"   shift, and go to state 1211
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 879 (make_tuple)


State 956

  828 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  829                   | make_struct_fields . ',' "name" ":=" expr
  832                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  833                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  837 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1212

    $default  reduce using rule 837 (make_struct_dim)


State 957

  838 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  861 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 951
    "end of expression"  shift, and go to state 1213

    $default  reduce using rule 845 (optional_block)

    optional_block  go to state 1214


State 958

  862 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1215
    ",]]"  shift, and go to state 1216
    ']'    shift, and go to state 1217

    optional_trailing_delim_sqr_sqr  go to state 1218


State 959

  881 make_tuple: make_tuple . ',' expr
  888 make_dim: make_tuple .

    ','  shift, and go to state 1219

    $default  reduce using rule 888 (make_dim)


State 960

  889 make_dim: make_dim . "end of expression" make_tuple
  891 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1220
    ";]]"                shift, and go to state 1221
    ']'                  shift, and go to state 1222

    optional_trailing_semicolon_sqr_sqr  go to state 1223


State 961

  683 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  684                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  926 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1224
    ','   shift, and go to state 879


State 962

  498 expr: '(' . expr_list optional_comma ')'
  499     | '(' . make_struct_single ')'
  866 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "$f"                              shift, and go to state 745
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 746
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    ')'                               shift, and go to state 1225
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 747
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_fields      go to state 748
    make_struct_single      go to state 749
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 963

  838 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  865 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 951
    "end of expression"  shift, and go to state 1213

    $default  reduce using rule 845 (optional_block)

    optional_block  go to state 1226


State 964

  889 make_dim: make_dim . "end of expression" make_tuple
  892 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1227
    "end of expression"  shift, and go to state 1220
    ";}]"                shift, and go to state 1228

    optional_trailing_semicolon_cur_sqr  go to state 1229


State 965

  683 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  684                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  928 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1230
    ','   shift, and go to state 879


State 966

  882 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1231
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 967

  847 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1232


State 968

  911 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 724
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_map_tuple          go to state 1233
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 969

  848 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 848 (optional_trailing_semicolon_cur_cur)


State 970

  915 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 915 (make_table_decl)


State 971

  283 expression_keyword: "keyword" '<' $@8 . type_declaration_no_options_list '>' $@9 expr

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    type_declaration_no_options_list  go to state 1234
    name_in_namespace                 go to state 364
    basic_type_declaration            go to state 365
    structure_type_declaration        go to state 366
    auto_type_declaration             go to state 367
    bitfield_type_declaration         go to state 368
    type_declaration_no_options       go to state 369
    type_declaration                  go to state 1135


State 972

  272 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 272 (expr_keyword)


State 973

  286 expression_keyword: "type function" '<' $@10 . type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    type_declaration_no_options_list  go to state 1235
    name_in_namespace                 go to state 364
    basic_type_declaration            go to state 365
    structure_type_declaration        go to state 366
    auto_type_declaration             go to state 367
    bitfield_type_declaration         go to state 368
    type_declaration_no_options       go to state 369
    type_declaration                  go to state 1135


State 974

   37 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 37 (string_builder)


State 975

   36 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1236
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 976

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   35 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 233
    STRING_CHARACTER_ESC  shift, and go to state 234

    $default  reduce using rule 35 (string_builder_body)


State 977

  683 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  684                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  927 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1237
    ','   shift, and go to state 879


State 978

  914 make_table_decl: "begin of code block" optional_expr_map_tuple_list "end of code block" .

    $default  reduce using rule 914 (make_table_decl)


State 979

  913 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  922 optional_comma: ',' .

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 922 (optional_comma)

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 724
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_map_tuple          go to state 1238
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 980

  278 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 278 (optional_expr_map_tuple_list)


State 981

  683 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  684                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  923 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1239
    ','   shift, and go to state 879


State 982

  924 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 648
    "name"  shift, and go to state 649

    variable_name_with_pos_list  go to state 1240


State 983

  890 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 890 (make_dim_decl)


State 984

  359 expr_list: expr_list ',' . expr
  922 optional_comma: ',' .

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 922 (optional_comma)

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1163
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 985

  274 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 274 (optional_expr_list)


State 986

  830 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  831                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1241
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 987

  827 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1242
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 988

  826 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1243
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 989

  498 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1244


State 990

  828 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  829                   | make_struct_fields ',' . "name" ":=" expr
  832                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  833                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr
  922 optional_comma: ',' .

    "$f"    shift, and go to state 1245
    "name"  shift, and go to state 1246

    $default  reduce using rule 922 (optional_comma)


State 991

  836 make_struct_single: make_struct_fields optional_comma .

    $default  reduce using rule 836 (make_struct_single)


State 992

  499 expr: '(' make_struct_single ')' .

    $default  reduce using rule 499 (expr)


State 993

  433 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1247


State 994

  558 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1248


State 995

  437 func_addr_expr: '@' '@' '<' . $@23 type_declaration_no_options '>' $@24 func_addr_name
  440               | '@' '@' '<' . $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name

    ':'       reduce using rule 438 ($@25)
    '>'       reduce using rule 438 ($@25)
    '('       reduce using rule 438 ($@25)
    $default  reduce using rule 435 ($@23)

    $@23  go to state 1249
    $@25  go to state 1250


State 996

  432 func_addr_name: name_in_namespace .

    $default  reduce using rule 432 (func_addr_name)


State 997

  434 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 434 (func_addr_expr)


State 998

   80 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1251
    "elif"         shift, and go to state 1252
    "static_elif"  shift, and go to state 1253

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1254
    expression_else      go to state 1255


State 999

   82 expression_if_then_else: expression_if_one_liner "if" $@4 . expr expression_else_one_liner semicolon

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1256
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1000

  244 expression_block: open_block expressions close_block "finally" open_block . expressions close_block

    $default  reduce using rule 269 (expressions)

    expressions  go to state 1257


State 1001

  380 expr_full_block_assumed_piped: block_or_lambda $@22 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 16

    $default  reduce using rule 129 (optional_annotation_list)

    optional_annotation_list  go to state 1258


State 1002

  452 expr_call: name_in_namespace '(' "uninitialized" . ')'
  454          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 745
    "name"  shift, and go to state 1259
    ')'     shift, and go to state 1260

    make_struct_fields  go to state 748
    make_struct_single  go to state 1261


State 1003

  428 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  890 make_dim_decl: '[' . optional_expr_list ']'
  923 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  924                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "for"                             shift, and go to state 740
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "iterator"                        shift, and go to state 741
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "$f"                              shift, and go to state 745
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 746
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 273 (optional_expr_list)

    string_builder          go to state 530
    expr_reader             go to state 531
    optional_expr_list      go to state 742
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 743
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_fields      go to state 1262
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1004

  451 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 451 (expr_call)


State 1005

  359 expr_list: expr_list . ',' expr
  429 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  455 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1263
    ')'  shift, and go to state 1264


State 1006

  453 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1265


State 1007

  330 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  331                                     | "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  334                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  335                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1266

    tuple_expansion  go to state 1267


State 1008

  332 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  333                                     | '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  336                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon
  337                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1266

    tuple_expansion  go to state 1268


State 1009

  339 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 339 (expression_let)


State 1010

  338 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 338 (expression_let)


State 1011

  375 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1269


State 1012

  374 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"    shift, and go to state 1270
    ":="    shift, and go to state 1271
    "name"  shift, and go to state 1272
    '='     shift, and go to state 1273
    '&'     shift, and go to state 1274

    capture_entry  go to state 1275
    capture_list   go to state 1276


State 1013

  378 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 1277


State 1014

  287 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 287 (expr_pipe)


State 1015

  517 expr: expr "is" "type" . '<' $@29 type_declaration_no_options '>' $@30

    '<'  shift, and go to state 1278


State 1016

  557 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1279


State 1017

  519 expr: expr "is" "name" .

    $default  reduce using rule 519 (expr)


State 1018

  518 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 518 (expr)


State 1019

  523 expr: expr "as" "type" . '<' $@31 type_declaration '>' $@32

    '<'  shift, and go to state 1280


State 1020

  555 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1281


State 1021

  520 expr: expr "as" "name" .

    $default  reduce using rule 520 (expr)


State 1022

  524 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 524 (expr)


State 1023

  409 expr_assign_pipe_right: "$ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 528
    '@'                    shift, and go to state 707

    open_block        go to state 297
    expression_block  go to state 708
    block_or_lambda   go to state 709
    expr_block        go to state 1282


State 1024

  407 expr_assign_pipe_right: "@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 528
    '@'                    shift, and go to state 707

    open_block        go to state 297
    expression_block  go to state 708
    block_or_lambda   go to state 709
    expr_block        go to state 1283


State 1025

  408 expr_assign_pipe_right: "@@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 528
    '@'                    shift, and go to state 707

    open_block        go to state 297
    expression_block  go to state 708
    block_or_lambda   go to state 709
    expr_block        go to state 1284


State 1026

  410 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 410 (expr_assign_pipe_right)


State 1027

  419 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 419 (expr_assign_pipe)


State 1028

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  398 expr_assign: expr "+=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 398 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1029

  420 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 420 (expr_assign_pipe)


State 1030

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  399 expr_assign: expr "-=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 399 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1031

  422 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 422 (expr_assign_pipe)


State 1032

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  401 expr_assign: expr "/=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 401 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1033

  421 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 421 (expr_assign_pipe)


State 1034

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  400 expr_assign: expr "*=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 400 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1035

  423 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 423 (expr_assign_pipe)


State 1036

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  402 expr_assign: expr "%=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 402 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1037

  413 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 413 (expr_assign_pipe)


State 1038

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  392 expr_assign: expr "&=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 392 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1039

  414 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 414 (expr_assign_pipe)


State 1040

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  393 expr_assign: expr "|=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 393 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1041

  415 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 415 (expr_assign_pipe)


State 1042

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  394 expr_assign: expr "^=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 394 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1043

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  472     | expr "<<" expr .
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 770
    "as"  shift, and go to state 771
    "++"  shift, and go to state 782
    "--"  shift, and go to state 783
    "->"  shift, and go to state 790
    "??"  shift, and go to state 792
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    "<|"  shift, and go to state 795
    "|>"  shift, and go to state 796
    '-'   shift, and go to state 816
    '+'   shift, and go to state 817
    '*'   shift, and go to state 818
    '/'   shift, and go to state 819
    '%'   shift, and go to state 820
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 472 (expr)


State 1044

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  473     | expr ">>" expr .
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 770
    "as"  shift, and go to state 771
    "++"  shift, and go to state 782
    "--"  shift, and go to state 783
    "->"  shift, and go to state 790
    "??"  shift, and go to state 792
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    "<|"  shift, and go to state 795
    "|>"  shift, and go to state 796
    '-'   shift, and go to state 816
    '+'   shift, and go to state 817
    '*'   shift, and go to state 818
    '/'   shift, and go to state 819
    '%'   shift, and go to state 820
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 473 (expr)


State 1045

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  485     | expr "<=" expr .
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 485 (expr)


State 1046

  424 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 424 (expr_assign_pipe)


State 1047

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  403 expr_assign: expr "<<=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 403 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1048

  425 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 425 (expr_assign_pipe)


State 1049

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  404 expr_assign: expr ">>=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 404 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1050

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  486     | expr ">=" expr .
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 486 (expr)


State 1051

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  483     | expr "==" expr .
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 483 (expr)


State 1052

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  484     | expr "!=" expr .
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 484 (expr)


State 1053

  430 expr_method_call: expr "->" "name" . '(' ')'
  431                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1285


State 1054

  412 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 412 (expr_assign_pipe)


State 1055

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  390 expr_assign: expr "<-" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 390 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1056

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  513     | expr "??" expr .
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 770
    "as"  shift, and go to state 771
    "++"  shift, and go to state 782
    "--"  shift, and go to state 783
    "->"  shift, and go to state 790
    "??"  shift, and go to state 792
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    "<|"  shift, and go to state 795
    "|>"  shift, and go to state 796
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 513 (expr)


State 1057

  552 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1286


State 1058

  504 expr: expr "?." "name" .

    $default  reduce using rule 504 (expr)


State 1059

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  502     | expr "?[" expr . ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ']'    shift, and go to state 1287


State 1060

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  537     | expr "<|" expr .
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 790
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 537 (expr)


State 1061

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  538     | expr "|>" expr .
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 790
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 538 (expr)


State 1062

  456 expr_call: basic_type_declaration . '(' ')'
  457          | basic_type_declaration . '(' expr_list ')'
  539 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 824

    $default  reduce using rule 539 (expr)


State 1063

  391 expr_assign: expr ":=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 391 (expr_assign)


State 1064

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  474     | expr "<<<" expr .
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 770
    "as"  shift, and go to state 771
    "++"  shift, and go to state 782
    "--"  shift, and go to state 783
    "->"  shift, and go to state 790
    "??"  shift, and go to state 792
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    "<|"  shift, and go to state 795
    "|>"  shift, and go to state 796
    '-'   shift, and go to state 816
    '+'   shift, and go to state 817
    '*'   shift, and go to state 818
    '/'   shift, and go to state 819
    '%'   shift, and go to state 820
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 474 (expr)


State 1065

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  475     | expr ">>>" expr .
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 770
    "as"  shift, and go to state 771
    "++"  shift, and go to state 782
    "--"  shift, and go to state 783
    "->"  shift, and go to state 790
    "??"  shift, and go to state 792
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    "<|"  shift, and go to state 795
    "|>"  shift, and go to state 796
    '-'   shift, and go to state 816
    '+'   shift, and go to state 817
    '*'   shift, and go to state 818
    '/'   shift, and go to state 819
    '%'   shift, and go to state 820
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 475 (expr)


State 1066

  426 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 426 (expr_assign_pipe)


State 1067

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  405 expr_assign: expr "<<<=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 405 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1068

  427 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 427 (expr_assign_pipe)


State 1069

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  406 expr_assign: expr ">>>=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 406 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1070

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  490     | expr "&&" expr .
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 490 (expr)


State 1071

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  491     | expr "||" expr .
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "^^"   shift, and go to state 804
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 491 (expr)


State 1072

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  492     | expr "^^" expr .
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 492 (expr)


State 1073

  416 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 416 (expr_assign_pipe)


State 1074

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  395 expr_assign: expr "&&=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 395 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1075

  417 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 417 (expr_assign_pipe)


State 1076

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  396 expr_assign: expr "||=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 396 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1077

  418 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 418 (expr_assign_pipe)


State 1078

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  397 expr_assign: expr "^^=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 397 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1079

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  493     | expr ".." expr .
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    ".."  error (nonassociative)

    $default  reduce using rule 493 (expr)


State 1080

  411 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 411 (expr_assign_pipe)


State 1081

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  389 expr_assign: expr '=' expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    '$'    shift, and go to state 528
    '@'    shift, and go to state 707

    $default  reduce using rule 389 (expr_assign)

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1082

  525 expr: expr '?' "as" . "name"
  528     | expr '?' "as" . "type" '<' $@33 type_declaration '>' $@34
  529     | expr '?' "as" . basic_type_declaration
  556 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1288
    "bool"      shift, and go to state 329
    "void"      shift, and go to state 330
    "string"    shift, and go to state 331
    "int"       shift, and go to state 333
    "int2"      shift, and go to state 334
    "int3"      shift, and go to state 335
    "int4"      shift, and go to state 336
    "uint"      shift, and go to state 337
    "bitfield"  shift, and go to state 490
    "uint2"     shift, and go to state 339
    "uint3"     shift, and go to state 340
    "uint4"     shift, and go to state 341
    "float"     shift, and go to state 342
    "float2"    shift, and go to state 343
    "float3"    shift, and go to state 344
    "float4"    shift, and go to state 345
    "range"     shift, and go to state 346
    "urange"    shift, and go to state 347
    "range64"   shift, and go to state 348
    "urange64"  shift, and go to state 349
    "int64"     shift, and go to state 351
    "uint64"    shift, and go to state 352
    "double"    shift, and go to state 353
    "int8"      shift, and go to state 356
    "uint8"     shift, and go to state 357
    "int16"     shift, and go to state 358
    "uint16"    shift, and go to state 359
    "$f"        shift, and go to state 1289
    "name"      shift, and go to state 1290

    basic_type_declaration  go to state 1291


State 1083

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  514     | expr '?' expr . ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    ':'    shift, and go to state 1292
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822


State 1084

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  488     | expr '|' expr .
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 488 (expr)


State 1085

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  489     | expr '^' expr .
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 489 (expr)


State 1086

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  487     | expr '&' expr .
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 487 (expr)


State 1087

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  481     | expr '<' expr .
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 481 (expr)


State 1088

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  482     | expr '>' expr .
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 482 (expr)


State 1089

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  477     | expr '-' expr .
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 770
    "as"  shift, and go to state 771
    "++"  shift, and go to state 782
    "--"  shift, and go to state 783
    "->"  shift, and go to state 790
    "??"  shift, and go to state 792
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    "<|"  shift, and go to state 795
    "|>"  shift, and go to state 796
    '*'   shift, and go to state 818
    '/'   shift, and go to state 819
    '%'   shift, and go to state 820
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 477 (expr)


State 1090

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  476     | expr '+' expr .
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 770
    "as"  shift, and go to state 771
    "++"  shift, and go to state 782
    "--"  shift, and go to state 783
    "->"  shift, and go to state 790
    "??"  shift, and go to state 792
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    "<|"  shift, and go to state 795
    "|>"  shift, and go to state 796
    '*'   shift, and go to state 818
    '/'   shift, and go to state 819
    '%'   shift, and go to state 820
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 476 (expr)


State 1091

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  478     | expr '*' expr .
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 770
    "as"  shift, and go to state 771
    "++"  shift, and go to state 782
    "--"  shift, and go to state 783
    "->"  shift, and go to state 790
    "??"  shift, and go to state 792
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    "<|"  shift, and go to state 795
    "|>"  shift, and go to state 796
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 478 (expr)


State 1092

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  479     | expr '/' expr .
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 770
    "as"  shift, and go to state 771
    "++"  shift, and go to state 782
    "--"  shift, and go to state 783
    "->"  shift, and go to state 790
    "??"  shift, and go to state 792
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    "<|"  shift, and go to state 795
    "|>"  shift, and go to state 796
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 479 (expr)


State 1093

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  480     | expr '%' expr .
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 770
    "as"  shift, and go to state 771
    "++"  shift, and go to state 782
    "--"  shift, and go to state 783
    "->"  shift, and go to state 790
    "??"  shift, and go to state 792
    "?."  shift, and go to state 793
    "?["  shift, and go to state 794
    "<|"  shift, and go to state 795
    "|>"  shift, and go to state 796
    '.'   shift, and go to state 821
    '['   shift, and go to state 822

    $default  reduce using rule 480 (expr)


State 1094

  505 expr: expr '.' "?." . "name"
  554 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1293
    "name"  shift, and go to state 1294


State 1095

  503 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1295
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1096

  551 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1296


State 1097

  441 expr_field: expr '.' "name" .
  443           | expr '.' "name" . '(' ')'
  444           | expr '.' "name" . '(' expr_list ')'
  445           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1297

    '('       [reduce using rule 441 (expr_field)]
    $default  reduce using rule 441 (expr_field)


State 1098

  442 expr_field: expr '.' '.' . "name"
  553 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1298
    "name"  shift, and go to state 1299


State 1099

  501 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1300
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1100

  450 expr_field: expr '.' $@27 . error $@28

    error  shift, and go to state 1301


State 1101

  446 expr_field: expr '.' basic_type_declaration . '(' ')'
  447           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1302


State 1102

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  500     | expr '[' expr . ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ']'    shift, and go to state 1303


State 1103

  456 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 456 (expr_call)


State 1104

  359 expr_list: expr_list . ',' expr
  457 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 901
    ')'  shift, and go to state 1304


State 1105

  662 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 1305


State 1106

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  642 enum_list: enum_list "name" '=' expr . semicolon

    "is"                 shift, and go to state 770
    "as"                 shift, and go to state 771
    "<<"                 shift, and go to state 780
    ">>"                 shift, and go to state 781
    "++"                 shift, and go to state 782
    "--"                 shift, and go to state 783
    "<="                 shift, and go to state 784
    ">="                 shift, and go to state 787
    "=="                 shift, and go to state 788
    "!="                 shift, and go to state 789
    "->"                 shift, and go to state 790
    "??"                 shift, and go to state 792
    "?."                 shift, and go to state 793
    "?["                 shift, and go to state 794
    "<|"                 shift, and go to state 795
    "|>"                 shift, and go to state 796
    "<<<"                shift, and go to state 798
    ">>>"                shift, and go to state 799
    "&&"                 shift, and go to state 802
    "||"                 shift, and go to state 803
    "^^"                 shift, and go to state 804
    ".."                 shift, and go to state 808
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '?'                  shift, and go to state 810
    '|'                  shift, and go to state 811
    '^'                  shift, and go to state 812
    '&'                  shift, and go to state 813
    '<'                  shift, and go to state 814
    '>'                  shift, and go to state 815
    '-'                  shift, and go to state 816
    '+'                  shift, and go to state 817
    '*'                  shift, and go to state 818
    '/'                  shift, and go to state 819
    '%'                  shift, and go to state 820
    '.'                  shift, and go to state 821
    '['                  shift, and go to state 822

    semicolon  go to state 1306


State 1107

  128 annotation_list: annotation_list . ',' annotation_declaration
  130 optional_annotation_list: '[' annotation_list . ']'
  581 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' semicolon

    ','  shift, and go to state 113
    ']'  shift, and go to state 1307


State 1108

  578 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  580                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "public"   shift, and go to state 1308
    "private"  shift, and go to state 1309

    $default  reduce using rule 567 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1310


State 1109

  572 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1311

    $default  reduce using rule 570 (optional_static_member_variable)

    optional_static_member_variable  go to state 1312


State 1110

  576 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1313


State 1111

  511 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  512     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "??"        shift, and go to state 424
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '>'         shift, and go to state 1314
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    dim_list  go to state 430


State 1112

  621 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 621 (let_variable_name_with_pos_list)


State 1113

  624 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 624 (let_variable_declaration)


State 1114

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  388 expr_assign: expr .
  389            | expr . '=' expr
  390            | expr . "<-" expr
  391            | expr . ":=" expr
  392            | expr . "&=" expr
  393            | expr . "|=" expr
  394            | expr . "^=" expr
  395            | expr . "&&=" expr
  396            | expr . "||=" expr
  397            | expr . "^^=" expr
  398            | expr . "+=" expr
  399            | expr . "-=" expr
  400            | expr . "*=" expr
  401            | expr . "/=" expr
  402            | expr . "%=" expr
  403            | expr . "<<=" expr
  404            | expr . ">>=" expr
  405            | expr . "<<<=" expr
  406            | expr . ">>>=" expr
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  623 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon

    "is"                 shift, and go to state 770
    "as"                 shift, and go to state 771
    "+="                 shift, and go to state 902
    "-="                 shift, and go to state 903
    "/="                 shift, and go to state 904
    "*="                 shift, and go to state 905
    "%="                 shift, and go to state 906
    "&="                 shift, and go to state 907
    "|="                 shift, and go to state 908
    "^="                 shift, and go to state 909
    "<<"                 shift, and go to state 780
    ">>"                 shift, and go to state 781
    "++"                 shift, and go to state 782
    "--"                 shift, and go to state 783
    "<="                 shift, and go to state 784
    "<<="                shift, and go to state 910
    ">>="                shift, and go to state 911
    ">="                 shift, and go to state 787
    "=="                 shift, and go to state 788
    "!="                 shift, and go to state 789
    "->"                 shift, and go to state 790
    "<-"                 shift, and go to state 912
    "??"                 shift, and go to state 792
    "?."                 shift, and go to state 793
    "?["                 shift, and go to state 794
    "<|"                 shift, and go to state 795
    "|>"                 shift, and go to state 796
    ":="                 shift, and go to state 797
    "<<<"                shift, and go to state 798
    ">>>"                shift, and go to state 799
    "<<<="               shift, and go to state 913
    ">>>="               shift, and go to state 914
    "&&"                 shift, and go to state 802
    "||"                 shift, and go to state 803
    "^^"                 shift, and go to state 804
    "&&="                shift, and go to state 915
    "||="                shift, and go to state 916
    "^^="                shift, and go to state 917
    ".."                 shift, and go to state 808
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 918
    '?'                  shift, and go to state 810
    '|'                  shift, and go to state 811
    '^'                  shift, and go to state 812
    '&'                  shift, and go to state 813
    '<'                  shift, and go to state 814
    '>'                  shift, and go to state 815
    '-'                  shift, and go to state 816
    '+'                  shift, and go to state 817
    '*'                  shift, and go to state 818
    '/'                  shift, and go to state 819
    '%'                  shift, and go to state 820
    '.'                  shift, and go to state 821
    '['                  shift, and go to state 822
    '$'                  shift, and go to state 528
    '@'                  shift, and go to state 707

    $default  reduce using rule 388 (expr_assign)

    semicolon                      go to state 1315
    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1115

  625 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 625 (let_variable_declaration)


State 1116

  746 type_declaration_no_options: "type" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 745 ($@51)

    $@51  go to state 1316


State 1117

  769 type_declaration_no_options: "array" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 768 ($@56)

    $@56  go to state 1317


State 1118

  772 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' . $@58

    $default  reduce using rule 771 ($@58)

    $@58  go to state 1318


State 1119

  735 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 1319


State 1120

  775 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 774 ($@60)

    $@60  go to state 1320


State 1121

  765 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 764 ($@54)

    $@54  go to state 1321


State 1122

  731 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' . $@49

    $default  reduce using rule 730 ($@49)

    $@49  go to state 1322


State 1123

  725 bitfield_bits: bitfield_bits semicolon . "name"

    "name"  shift, and go to state 1323


State 1124

  779 type_declaration_no_options: "block" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 778 ($@62)

    $@62  go to state 1324


State 1125

  782 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type . '>' $@64

    '>'  shift, and go to state 1325


State 1126

  786 type_declaration_no_options: "function" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 785 ($@66)

    $@66  go to state 1326


State 1127

  789 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1327


State 1128

  793 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 792 ($@70)

    $@70  go to state 1328


State 1129

  796 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1329


State 1130

  799 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' . $@74

    $default  reduce using rule 798 ($@74)

    $@74  go to state 1330


State 1131

  593 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 636
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    tuple_type                   go to state 1331
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 641


State 1132

  802 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' . $@76

    $default  reduce using rule 801 ($@76)

    $@76  go to state 1332


State 1133

  599 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 643

    variant_type  go to state 1333


State 1134

  280 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  750 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 637
    '>'                  shift, and go to state 1334

    semicolon  go to state 638
    c_or_s     go to state 1335


State 1135

  279 type_declaration_no_options_list: type_declaration .
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431

    $default  reduce using rule 279 (type_declaration_no_options_list)


State 1136

  748 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 748 (type_declaration_no_options)


State 1137

  737 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 737 (dim_list)


State 1138

  591 tuple_type: "name" ':' type_declaration .
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431

    $default  reduce using rule 591 (tuple_type)


State 1139

  597 variant_type: "name" ':' type_declaration .
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431

    $default  reduce using rule 597 (variant_type)


State 1140

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  681 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1336


State 1141

  682 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 682 (variable_name_with_pos_list)


State 1142

  683 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  684                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1337

    $default  reduce using rule 683 (variable_name_with_pos_list)


State 1143

  608 variable_declaration_type: variable_name_with_pos_list ':' type_declaration .
  609                          | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 878
    '='   shift, and go to state 880
    '|'   shift, and go to state 431

    $default  reduce using rule 608 (variable_declaration_type)

    copy_or_move  go to state 1338


State 1144

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  607 variable_declaration_no_type: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 607 (variable_declaration_no_type)


State 1145

  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"
  869 make_struct_decl: "struct" '<' $@89 type_declaration_no_options . '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "??"        shift, and go to state 424
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '>'         shift, and go to state 1339
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    dim_list  go to state 430


State 1146

  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"
  872 make_struct_decl: "class" '<' $@91 type_declaration_no_options . '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "??"        shift, and go to state 424
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '>'         shift, and go to state 1340
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    dim_list  go to state 430


State 1147

   84 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 1341
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1148

  299 new_type_declaration: '<' $@12 type_declaration . '>' $@13
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431
    '>'  shift, and go to state 1342


State 1149

  305 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  860 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 745
    "name"  shift, and go to state 1259

    $default  reduce using rule 860 (use_initializer)

    make_struct_fields  go to state 748
    make_struct_single  go to state 1343


State 1150

  303 expr_new: "new" new_type_declaration '(' expr_list . ')'
  359 expr_list: expr_list . ',' expr

    ','  shift, and go to state 901
    ')'  shift, and go to state 1344


State 1151

  304 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1345


State 1152

  302 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1346


State 1153

  353 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  354               | "typeinfo" '(' name_in_namespace '<' . "name" c_or_s "name" '>' expr ')'

    "name"  shift, and go to state 1347


State 1154

  352 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1348


State 1155

  356 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  357               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1349
    '>'                  shift, and go to state 1350


State 1156

  355 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1351


State 1157

  351 expr_type_decl: "type" '<' $@20 type_declaration . '>' $@21
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431
    '>'  shift, and go to state 1352


State 1158

  895 make_dim_decl: "array" "struct" '<' $@99 . type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 1353


State 1159

  898 make_dim_decl: "array" "tuple" '<' $@101 . tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 636
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    tuple_type                   go to state 857
    tuple_type_list              go to state 1354
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 641


State 1160

  901 make_dim_decl: "array" "variant" '<' $@103 . variant_type_list '>' $@104 '(' make_variant_dim ')'

    "name"  shift, and go to state 643

    variant_type       go to state 859
    variant_type_list  go to state 1355


State 1161

  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"
  905 make_dim_decl: "array" '<' $@105 type_declaration_no_options . '>' $@106 '(' optional_expr_list ')'

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "??"        shift, and go to state 424
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '>'         shift, and go to state 1356
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    dim_list  go to state 430


State 1162

  902 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1357


State 1163

  359 expr_list: expr_list ',' expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 359 (expr_list)


State 1164

  398 expr_assign: expr "+=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 398 (expr_assign)


State 1165

  399 expr_assign: expr "-=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 399 (expr_assign)


State 1166

  401 expr_assign: expr "/=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 401 (expr_assign)


State 1167

  400 expr_assign: expr "*=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 400 (expr_assign)


State 1168

  402 expr_assign: expr "%=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 402 (expr_assign)


State 1169

  392 expr_assign: expr "&=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 392 (expr_assign)


State 1170

  393 expr_assign: expr "|=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 393 (expr_assign)


State 1171

  394 expr_assign: expr "^=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 394 (expr_assign)


State 1172

  403 expr_assign: expr "<<=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 403 (expr_assign)


State 1173

  404 expr_assign: expr ">>=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 404 (expr_assign)


State 1174

  390 expr_assign: expr "<-" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 390 (expr_assign)


State 1175

  405 expr_assign: expr "<<<=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 405 (expr_assign)


State 1176

  406 expr_assign: expr ">>>=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 406 (expr_assign)


State 1177

  395 expr_assign: expr "&&=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 395 (expr_assign)


State 1178

  396 expr_assign: expr "||=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 396 (expr_assign)


State 1179

  397 expr_assign: expr "^^=" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 397 (expr_assign)


State 1180

  389 expr_assign: expr '=' expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 389 (expr_assign)


State 1181

  320 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 320 (expression_try_catch)


State 1182

  917 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1358


State 1183

  918 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 1359


State 1184

  916 make_table_decl: "table" '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 916 (make_table_decl)


State 1185

  509 expr: "deref" '(' expr ')' .

    $default  reduce using rule 509 (expr)


State 1186

   89 expression_with_alias: "assume" "name" '=' $@6 . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1360
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1187

  342 expr_cast: "cast" '<' $@14 type_declaration_no_options . '>' $@15 expr
  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "??"        shift, and go to state 424
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '>'         shift, and go to state 1361
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    dim_list  go to state 430


State 1188

  345 expr_cast: "upcast" '<' $@16 type_declaration_no_options . '>' $@17 expr
  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "??"        shift, and go to state 424
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '>'         shift, and go to state 1362
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    dim_list  go to state 430


State 1189

  510 expr: "addr" '(' expr ')' .

    $default  reduce using rule 510 (expr)


State 1190

  348 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options . '>' $@19 expr
  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "??"        shift, and go to state 424
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '>'         shift, and go to state 1363
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    dim_list  go to state 430


State 1191

  541 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 541 (expr)


State 1192

  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"
  909 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options . '>' $@108 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "??"        shift, and go to state 424
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '>'         shift, and go to state 1364
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    dim_list  go to state 430


State 1193

  906 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1365


State 1194

  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"
  878 make_struct_decl: "default" '<' $@95 type_declaration_no_options . '>' $@96 use_initializer

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "??"        shift, and go to state 424
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '>'         shift, and go to state 1366
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    dim_list  go to state 430


State 1195

  593 tuple_type_list: tuple_type_list . c_or_s tuple_type
  887 make_tuple_call: "tuple" '<' $@97 tuple_type_list . '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 637
    '>'                  shift, and go to state 1367

    semicolon  go to state 638
    c_or_s     go to state 1131


State 1196

  884 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1368


State 1197

  599 variant_type_list: variant_type_list . c_or_s variant_type
  875 make_struct_decl: "variant" '<' $@93 variant_type_list . '>' $@94 '(' use_initializer make_variant_dim ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 637
    '>'                  shift, and go to state 1369

    semicolon  go to state 638
    c_or_s     go to state 1133


State 1198

  247 expr_call_pipe: "generator" '<' type_declaration_no_options '>' . optional_capture_list expr_full_block_assumed_piped
  511 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  512     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 1011
    "[["       shift, and go to state 1012

    $default  reduce using rule 373 (optional_capture_list)

    optional_capture_list  go to state 1370


State 1199

  377 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 1371


State 1200

  543 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 543 (expr_mtag)


State 1201

  544 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 544 (expr_mtag)


State 1202

  545 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 545 (expr_mtag)


State 1203

  546 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 546 (expr_mtag)


State 1204

  547 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 547 (expr_mtag)


State 1205

  549 expr_mtag: "$c" '(' expr ')' . '(' ')'
  550          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1372


State 1206

  925 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 1373
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1207

  846 optional_block: "where" expr_block .

    $default  reduce using rule 846 (optional_block)


State 1208

  751 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  890 make_dim_decl: '[' . optional_expr_list ']'
  923 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  924                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "for"                             shift, and go to state 740
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "iterator"                        shift, and go to state 741
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    ']'                               shift, and go to state 864
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    ']'  [reduce using rule 273 (optional_expr_list)]

    string_builder          go to state 530
    expr_reader             go to state 531
    optional_expr_list      go to state 742
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 743
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1209

  358 expr_list: expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  736 dim_list: '[' expr . ']'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ']'    shift, and go to state 865

    ']'       [reduce using rule 358 (expr_list)]
    $default  reduce using rule 358 (expr_list)


State 1210

  863 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  864                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 951
    "$f"     shift, and go to state 745
    "name"   shift, and go to state 1259

    $default  reduce using rule 845 (optional_block)

    make_struct_fields  go to state 956
    make_struct_dim     go to state 1374
    optional_block      go to state 1375


State 1211

  880 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1376
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1212

  828 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  829                   | make_struct_fields ',' . "name" ":=" expr
  832                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  833                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1245
    "name"  shift, and go to state 1246


State 1213

  838 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 745
    "name"  shift, and go to state 1259

    make_struct_fields  go to state 1377


State 1214

  861 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1215
    ",]]"  shift, and go to state 1216
    ']'    shift, and go to state 1217

    optional_trailing_delim_sqr_sqr  go to state 1378


State 1215

  854 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 854 (optional_trailing_delim_sqr_sqr)


State 1216

  855 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 855 (optional_trailing_delim_sqr_sqr)


State 1217

  853 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1379


State 1218

  862 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 862 (make_struct_decl)


State 1219

  881 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1380
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1220

  889 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 955
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple              go to state 1381
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1221

  852 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 852 (optional_trailing_semicolon_sqr_sqr)


State 1222

  851 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1382


State 1223

  891 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 891 (make_dim_decl)


State 1224

  926 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 1383
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1225

  866 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 745
    "name"  shift, and go to state 1259

    make_struct_fields  go to state 956
    make_struct_dim     go to state 1384


State 1226

  865 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1385
    ";}]"                shift, and go to state 1386
    ",}]"                shift, and go to state 1387

    optional_trailing_delim_cur_sqr  go to state 1388


State 1227

  849 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1389


State 1228

  850 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 850 (optional_trailing_semicolon_cur_sqr)


State 1229

  892 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 892 (make_dim_decl)


State 1230

  928 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 1390
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1231

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  882 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 882 (make_map_tuple)


State 1232

  847 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 847 (optional_trailing_semicolon_cur_cur)


State 1233

  911 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 911 (make_table)


State 1234

  280 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  283 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list . '>' $@9 expr

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 637
    '>'                  shift, and go to state 1391

    semicolon  go to state 638
    c_or_s     go to state 1335


State 1235

  280 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  286 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list . '>' $@11 optional_expr_list_in_braces

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 637
    '>'                  shift, and go to state 1392

    semicolon  go to state 638
    c_or_s     go to state 1335


State 1236

   36 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    ':'    shift, and go to state 1393
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 31 (optional_format_string)

    optional_format_string  go to state 1394


State 1237

  927 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 1395
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1238

  913 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 913 (expr_map_tuple_list)


State 1239

  923 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 1396
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1240

  683 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  684                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  924 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1397
    ','   shift, and go to state 879


State 1241

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  830 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  831                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1398


State 1242

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  827 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 827 (make_struct_fields)


State 1243

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  826 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 826 (make_struct_fields)


State 1244

  498 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 498 (expr)


State 1245

  832 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  833                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1399


State 1246

  828 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  829                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 878
    ":="  shift, and go to state 1400
    '='   shift, and go to state 880

    copy_or_move  go to state 1401


State 1247

  433 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1402
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1248

  558 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1403
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1249

  437 func_addr_expr: '@' '@' '<' $@23 . type_declaration_no_options '>' $@24 func_addr_name

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 1404


State 1250

  440 func_addr_expr: '@' '@' '<' $@25 . optional_function_argument_list optional_function_type '>' $@26 func_addr_name

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 1405


State 1251

   66 expression_else: "else" . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 1406


State 1252

   63 elif_or_static_elif: "elif" .

    $default  reduce using rule 63 (elif_or_static_elif)


State 1253

   64 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 64 (elif_or_static_elif)


State 1254

   67 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1407
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1255

   80 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 80 (expression_if_then_else)


State 1256

   82 expression_if_then_else: expression_if_one_liner "if" $@4 expr . expression_else_one_liner semicolon
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1408
    "is"    shift, and go to state 770
    "as"    shift, and go to state 771
    "<<"    shift, and go to state 780
    ">>"    shift, and go to state 781
    "++"    shift, and go to state 782
    "--"    shift, and go to state 783
    "<="    shift, and go to state 784
    ">="    shift, and go to state 787
    "=="    shift, and go to state 788
    "!="    shift, and go to state 789
    "->"    shift, and go to state 790
    "??"    shift, and go to state 792
    "?."    shift, and go to state 793
    "?["    shift, and go to state 794
    "<|"    shift, and go to state 795
    "|>"    shift, and go to state 796
    "<<<"   shift, and go to state 798
    ">>>"   shift, and go to state 799
    "&&"    shift, and go to state 802
    "||"    shift, and go to state 803
    "^^"    shift, and go to state 804
    ".."    shift, and go to state 808
    '?'     shift, and go to state 810
    '|'     shift, and go to state 811
    '^'     shift, and go to state 812
    '&'     shift, and go to state 813
    '<'     shift, and go to state 814
    '>'     shift, and go to state 815
    '-'     shift, and go to state 816
    '+'     shift, and go to state 817
    '*'     shift, and go to state 818
    '/'     shift, and go to state 819
    '%'     shift, and go to state 820
    '.'     shift, and go to state 821
    '['     shift, and go to state 822

    $default  reduce using rule 72 (expression_else_one_liner)

    expression_else_one_liner  go to state 1409


State 1257

  244 expression_block: open_block expressions close_block "finally" open_block expressions . close_block
  270 expressions: expressions . expression_any
  271            | expressions . error

    error                             shift, and go to state 457
    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 460
    "if"                              shift, and go to state 461
    "static_if"                       shift, and go to state 462
    "for"                             shift, and go to state 463
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "return"                          shift, and go to state 470
    "null"                            shift, and go to state 471
    "break"                           shift, and go to state 472
    "try"                             shift, and go to state 473
    "table"                           shift, and go to state 474
    "delete"                          shift, and go to state 475
    "deref"                           shift, and go to state 476
    "with"                            shift, and go to state 477
    "assume"                          shift, and go to state 478
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 481
    "continue"                        shift, and go to state 482
    "pass"                            shift, and go to state 483
    "reinterpret"                     shift, and go to state 484
    "label"                           shift, and go to state 485
    "goto"                            shift, and go to state 486
    "unsafe"                          shift, and go to state 487
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "yield"                           shift, and go to state 494
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 497
    "@ <|"                            shift, and go to state 498
    "@@ <|"                           shift, and go to state 499
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "close scope"                     shift, and go to state 146
    "end of line"                     shift, and go to state 13
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 517
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    "end of code block"               shift, and go to state 147
    "end of expression"               shift, and go to state 14
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder             go to state 530
    expr_reader                go to state 531
    expression_label           go to state 532
    expression_goto            go to state 533
    semicolon                  go to state 534
    if_or_static_if            go to state 535
    expression_if_one_liner    go to state 536
    expression_if_then_else    go to state 537
    expression_for_loop        go to state 538
    expression_unsafe          go to state 539
    expression_while_loop      go to state 540
    expression_with            go to state 541
    expression_with_alias      go to state 542
    close_block                go to state 1410
    expr_call_pipe             go to state 544
    expression_any             go to state 545
    expr_keyword               go to state 546
    expression_keyword         go to state 547
    expr_pipe                  go to state 548
    name_in_namespace          go to state 549
    expression_delete          go to state 550
    expr_new                   go to state 551
    expression_break           go to state 552
    expression_continue        go to state 553
    expression_return_no_pipe  go to state 554
    expression_return          go to state 555
    expression_yield_no_pipe   go to state 556
    expression_yield           go to state 557
    expression_try_catch       go to state 558
    kwd_let                    go to state 559
    expression_let             go to state 560
    expr_cast                  go to state 561
    expr_type_decl             go to state 562
    expr_type_info             go to state 563
    block_or_lambda            go to state 564
    expr_full_block            go to state 565
    expr_numeric_const         go to state 566
    expr_assign                go to state 567
    expr_assign_pipe           go to state 568
    expr_named_call            go to state 569
    expr_method_call           go to state 570
    func_addr_expr             go to state 571
    expr_field                 go to state 572
    expr_call                  go to state 573
    expr                       go to state 574
    expr_mtag                  go to state 575
    basic_type_declaration     go to state 576
    make_decl                  go to state 577
    make_struct_decl           go to state 578
    make_tuple_call            go to state 579
    make_dim_decl              go to state 580
    make_table_decl            go to state 581
    array_comprehension        go to state 582


State 1258

  380 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 1011
    "[["       shift, and go to state 1012

    $default  reduce using rule 373 (optional_capture_list)

    optional_capture_list  go to state 1411


State 1259

  826 make_struct_fields: "name" . copy_or_move expr
  827                   | "name" . ":=" expr

    "<-"  shift, and go to state 878
    ":="  shift, and go to state 987
    '='   shift, and go to state 880

    copy_or_move  go to state 988


State 1260

  452 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 452 (expr_call)


State 1261

  454 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1412


State 1262

  428 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  828 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  829                   | make_struct_fields . ',' "name" ":=" expr
  832                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  833                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1212
    ']'  shift, and go to state 1413


State 1263

  359 expr_list: expr_list ',' . expr
  429 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 1414
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1163
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1264

  455 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 455 (expr_call)


State 1265

  453 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 453 (expr_call)


State 1266

  328 tuple_expansion: "name" .

    $default  reduce using rule 328 (tuple_expansion)


State 1267

  329 tuple_expansion: tuple_expansion . ',' "name"
  330 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  331                                     | "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  334                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  335                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1415
    ']'  shift, and go to state 1416


State 1268

  329 tuple_expansion: tuple_expansion . ',' "name"
  332 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  333                                     | '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  336                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr semicolon
  337                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1415
    ')'  shift, and go to state 1417


State 1269

  375 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1270
    ":="    shift, and go to state 1271
    "name"  shift, and go to state 1272
    '='     shift, and go to state 1273
    '&'     shift, and go to state 1274

    capture_entry  go to state 1275
    capture_list   go to state 1418


State 1270

  368 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1419


State 1271

  369 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1420


State 1272

  370 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1421


State 1273

  367 capture_entry: '=' . "name"

    "name"  shift, and go to state 1422


State 1274

  366 capture_entry: '&' . "name"

    "name"  shift, and go to state 1423


State 1275

  371 capture_list: capture_entry .

    $default  reduce using rule 371 (capture_list)


State 1276

  372 capture_list: capture_list . ',' capture_entry
  374 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1424
    ']'  shift, and go to state 1425


State 1277

  378 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 387

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1426


State 1278

  517 expr: expr "is" "type" '<' . $@29 type_declaration_no_options '>' $@30

    $default  reduce using rule 515 ($@29)

    $@29  go to state 1427


State 1279

  557 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1428
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1280

  523 expr: expr "as" "type" '<' . $@31 type_declaration '>' $@32

    $default  reduce using rule 521 ($@31)

    $@31  go to state 1429


State 1281

  555 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1430
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1282

  409 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 409 (expr_assign_pipe_right)


State 1283

  407 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 407 (expr_assign_pipe_right)


State 1284

  408 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 408 (expr_assign_pipe_right)


State 1285

  430 expr_method_call: expr "->" "name" '(' . ')'
  431                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    ')'                               shift, and go to state 1431
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 1432
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1286

  552 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1433
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1287

  502 expr: expr "?[" expr ']' .

    $default  reduce using rule 502 (expr)


State 1288

  528 expr: expr '?' "as" "type" . '<' $@33 type_declaration '>' $@34

    '<'  shift, and go to state 1434


State 1289

  556 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1435


State 1290

  525 expr: expr '?' "as" "name" .

    $default  reduce using rule 525 (expr)


State 1291

  529 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 529 (expr)


State 1292

  514 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1436
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1293

  554 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1437


State 1294

  505 expr: expr '.' "?." "name" .

    $default  reduce using rule 505 (expr)


State 1295

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  503     | expr '.' "?[" expr . ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ']'    shift, and go to state 1438


State 1296

  551 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1439
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1297

  443 expr_field: expr '.' "name" '(' . ')'
  444           | expr '.' "name" '(' . expr_list ')'
  445           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 1440
    '('                               shift, and go to state 527
    ')'                               shift, and go to state 1441
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 1442
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1298

  553 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1443


State 1299

  442 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 442 (expr_field)


State 1300

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  501     | expr '.' '[' expr . ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ']'    shift, and go to state 1444


State 1301

  450 expr_field: expr '.' $@27 error . $@28

    $default  reduce using rule 449 ($@28)

    $@28  go to state 1445


State 1302

  446 expr_field: expr '.' basic_type_declaration '(' . ')'
  447           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    ')'                               shift, and go to state 1446
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 1447
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1303

  500 expr: expr '[' expr ']' .

    $default  reduce using rule 500 (expr)


State 1304

  457 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 457 (expr_call)


State 1305

  662 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block .

    $default  reduce using rule 662 (enum_declaration)


State 1306

  642 enum_list: enum_list "name" '=' expr semicolon .

    $default  reduce using rule 642 (enum_list)


State 1307

  130 optional_annotation_list: '[' annotation_list ']' .
  581 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 130 (optional_annotation_list)

    semicolon  go to state 1448


State 1308

  568 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 568 (optional_public_or_private_member_variable)


State 1309

  569 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 569 (optional_public_or_private_member_variable)


State 1310

  578 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@36 function_declaration_header semicolon
  580                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "abstract"  shift, and go to state 1449
    "static"    shift, and go to state 1311

    $default  reduce using rule 570 (optional_static_member_variable)

    optional_static_member_variable  go to state 1450


State 1311

  571 optional_static_member_variable: "static" .

    $default  reduce using rule 571 (optional_static_member_variable)


State 1312

  572 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1451
    "sealed"    shift, and go to state 1452

    $default  reduce using rule 562 (optional_override)

    optional_override  go to state 1453


State 1313

  576 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration semicolon .

    $default  reduce using rule 576 (struct_variable_declaration_list)


State 1314

  511 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  512     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 1011
    "[["       shift, and go to state 1012

    $default  reduce using rule 373 (optional_capture_list)

    optional_capture_list  go to state 1454


State 1315

  623 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 623 (let_variable_declaration)


State 1316

  746 type_declaration_no_options: "type" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 746 (type_declaration_no_options)


State 1317

  769 type_declaration_no_options: "array" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 769 (type_declaration_no_options)


State 1318

  772 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' $@58 .

    $default  reduce using rule 772 (type_declaration_no_options)


State 1319

  735 table_type_pair: type_declaration c_or_s type_declaration .
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431

    $default  reduce using rule 735 (table_type_pair)


State 1320

  775 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 775 (type_declaration_no_options)


State 1321

  765 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 765 (type_declaration_no_options)


State 1322

  731 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' $@49 .

    $default  reduce using rule 731 (bitfield_type_declaration)


State 1323

  725 bitfield_bits: bitfield_bits semicolon "name" .

    $default  reduce using rule 725 (bitfield_bits)


State 1324

  779 type_declaration_no_options: "block" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 779 (type_declaration_no_options)


State 1325

  782 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' . $@64

    $default  reduce using rule 781 ($@64)

    $@64  go to state 1455


State 1326

  786 type_declaration_no_options: "function" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 786 (type_declaration_no_options)


State 1327

  789 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 788 ($@68)

    $@68  go to state 1456


State 1328

  793 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 793 (type_declaration_no_options)


State 1329

  796 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 795 ($@72)

    $@72  go to state 1457


State 1330

  799 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' $@74 .

    $default  reduce using rule 799 (type_declaration_no_options)


State 1331

  593 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 593 (tuple_type_list)


State 1332

  802 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' $@76 .

    $default  reduce using rule 802 (type_declaration_no_options)


State 1333

  599 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 599 (variant_type_list)


State 1334

  750 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1458


State 1335

  280 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 1459


State 1336

  681 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 681 (variable_name_with_pos_list)


State 1337

  684 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1460


State 1338

  609 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1461
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1339

  869 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' . $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 868 ($@90)

    $@90  go to state 1462


State 1340

  872 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' . $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 871 ($@92)

    $@92  go to state 1463


State 1341

   84 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list . expression_block
  359 expr_list: expr_list . ',' expr

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    ','                    shift, and go to state 901

    open_block        go to state 297
    expression_block  go to state 1464


State 1342

  299 new_type_declaration: '<' $@12 type_declaration '>' . $@13

    $default  reduce using rule 298 ($@13)

    $@13  go to state 1465


State 1343

  305 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1466


State 1344

  303 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 303 (expr_new)


State 1345

  304 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 304 (expr_new)


State 1346

  302 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 302 (expr_new)


State 1347

  353 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  354               | "typeinfo" '(' name_in_namespace '<' "name" . c_or_s "name" '>' expr ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 637
    '>'                  shift, and go to state 1467

    semicolon  go to state 638
    c_or_s     go to state 1468


State 1348

  352 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 352 (expr_type_info)


State 1349

  357 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1469


State 1350

  356 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1470


State 1351

  355 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 355 (expr_type_info)


State 1352

  351 expr_type_decl: "type" '<' $@20 type_declaration '>' . $@21

    $default  reduce using rule 350 ($@21)

    $@21  go to state 1471


State 1353

  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"
  895 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options . '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "??"        shift, and go to state 424
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '>'         shift, and go to state 1472
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    dim_list  go to state 430


State 1354

  593 tuple_type_list: tuple_type_list . c_or_s tuple_type
  898 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 637
    '>'                  shift, and go to state 1473

    semicolon  go to state 638
    c_or_s     go to state 1131


State 1355

  599 variant_type_list: variant_type_list . c_or_s variant_type
  901 make_dim_decl: "array" "variant" '<' $@103 variant_type_list . '>' $@104 '(' make_variant_dim ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 637
    '>'                  shift, and go to state 1474

    semicolon  go to state 638
    c_or_s     go to state 1133


State 1356

  905 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' . $@106 '(' optional_expr_list ')'

    $default  reduce using rule 904 ($@106)

    $@106  go to state 1475


State 1357

  902 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 902 (make_dim_decl)


State 1358

  917 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 277 (optional_expr_map_tuple_list)

    string_builder                go to state 530
    expr_reader                   go to state 531
    optional_expr_map_tuple_list  go to state 1476
    expression_keyword            go to state 594
    name_in_namespace             go to state 549
    expr_new                      go to state 551
    expr_cast                     go to state 561
    expr_type_decl                go to state 562
    expr_type_info                go to state 563
    block_or_lambda               go to state 564
    expr_full_block               go to state 565
    expr_numeric_const            go to state 566
    expr_named_call               go to state 569
    expr_method_call              go to state 570
    func_addr_expr                go to state 571
    expr_field                    go to state 572
    expr_call                     go to state 573
    expr                          go to state 724
    expr_mtag                     go to state 575
    basic_type_declaration        go to state 576
    make_decl                     go to state 577
    make_struct_decl              go to state 578
    make_map_tuple                go to state 733
    make_tuple_call               go to state 579
    make_dim_decl                 go to state 580
    expr_map_tuple_list           go to state 734
    make_table_decl               go to state 581
    array_comprehension           go to state 582


State 1359

  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"
  918 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "??"        shift, and go to state 424
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '>'         shift, and go to state 1477
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    dim_list  go to state 430


State 1360

   89 expression_with_alias: "assume" "name" '=' $@6 expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 89 (expression_with_alias)


State 1361

  342 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' . $@15 expr

    $default  reduce using rule 341 ($@15)

    $@15  go to state 1478


State 1362

  345 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' . $@17 expr

    $default  reduce using rule 344 ($@17)

    $@17  go to state 1479


State 1363

  348 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' . $@19 expr

    $default  reduce using rule 347 ($@19)

    $@19  go to state 1480


State 1364

  909 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' . $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 908 ($@108)

    $@108  go to state 1481


State 1365

  906 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 906 (make_dim_decl)


State 1366

  878 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' . $@96 use_initializer

    $default  reduce using rule 877 ($@96)

    $@96  go to state 1482


State 1367

  887 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' . $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 886 ($@98)

    $@98  go to state 1483


State 1368

  884 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 884 (make_tuple_call)


State 1369

  875 make_struct_decl: "variant" '<' $@93 variant_type_list '>' . $@94 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 874 ($@94)

    $@94  go to state 1484


State 1370

  247 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list . expr_full_block_assumed_piped
  511 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  512     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1485
    '$'  shift, and go to state 528
    '@'  shift, and go to state 707

    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 1486


State 1371

  377 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 387

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1487


State 1372

  549 expr_mtag: "$c" '(' expr ')' '(' . ')'
  550          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    ')'                               shift, and go to state 1488
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 1489
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1373

  359 expr_list: expr_list . ',' expr
  925 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1490
    ','                  shift, and go to state 901


State 1374

  838 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  864 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 951
    "end of expression"  shift, and go to state 1213

    $default  reduce using rule 845 (optional_block)

    optional_block  go to state 1491


State 1375

  863 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1215
    ",]]"  shift, and go to state 1216
    ']'    shift, and go to state 1217

    optional_trailing_delim_sqr_sqr  go to state 1492


State 1376

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  880 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 880 (make_tuple)


State 1377

  828 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  829                   | make_struct_fields . ',' "name" ":=" expr
  832                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  833                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  838 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1212

    $default  reduce using rule 838 (make_struct_dim)


State 1378

  861 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 861 (make_struct_decl)


State 1379

  853 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 853 (optional_trailing_delim_sqr_sqr)


State 1380

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  881 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 881 (make_tuple)


State 1381

  881 make_tuple: make_tuple . ',' expr
  889 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1219

    $default  reduce using rule 889 (make_dim)


State 1382

  851 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 851 (optional_trailing_semicolon_sqr_sqr)


State 1383

  359 expr_list: expr_list . ',' expr
  926 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1493
    ','                  shift, and go to state 901


State 1384

  838 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  866 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 951
    "end of expression"  shift, and go to state 1213

    $default  reduce using rule 845 (optional_block)

    optional_block  go to state 1494


State 1385

  856 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1495


State 1386

  857 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 857 (optional_trailing_delim_cur_sqr)


State 1387

  858 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 858 (optional_trailing_delim_cur_sqr)


State 1388

  865 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 865 (make_struct_decl)


State 1389

  849 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 849 (optional_trailing_semicolon_cur_sqr)


State 1390

  359 expr_list: expr_list . ',' expr
  928 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1496
    ','                  shift, and go to state 901


State 1391

  283 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' . $@9 expr

    $default  reduce using rule 282 ($@9)

    $@9  go to state 1497


State 1392

  286 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' . $@11 optional_expr_list_in_braces

    $default  reduce using rule 285 ($@11)

    $@11  go to state 1498


State 1393

   33 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 32 ($@1)

    $@1  go to state 1499


State 1394

   36 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1500


State 1395

  359 expr_list: expr_list . ',' expr
  927 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1501
    ','                  shift, and go to state 901


State 1396

  359 expr_list: expr_list . ',' expr
  923 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1502
    ','                  shift, and go to state 901


State 1397

  924 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 1503
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1398

  830 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  831                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 878
    ":="  shift, and go to state 1504
    '='   shift, and go to state 880

    copy_or_move  go to state 1505


State 1399

  832 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  833                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1506
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1400

  829 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1507
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1401

  828 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1508
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1402

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  433 func_addr_name: "$i" '(' expr . ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1509


State 1403

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  558          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1510


State 1404

  437 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options . '>' $@24 func_addr_name
  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "??"        shift, and go to state 424
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '>'         shift, and go to state 1511
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    dim_list  go to state 430


State 1405

  440 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list . optional_function_type '>' $@26 func_addr_name

    ':'  shift, and go to state 387

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1512


State 1406

   66 expression_else: "else" expression_block .

    $default  reduce using rule 66 (expression_else)


State 1407

   67 expression_else: elif_or_static_elif expr . expression_block expression_else
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 770
    "as"                   shift, and go to state 771
    "<<"                   shift, and go to state 780
    ">>"                   shift, and go to state 781
    "++"                   shift, and go to state 782
    "--"                   shift, and go to state 783
    "<="                   shift, and go to state 784
    ">="                   shift, and go to state 787
    "=="                   shift, and go to state 788
    "!="                   shift, and go to state 789
    "->"                   shift, and go to state 790
    "??"                   shift, and go to state 792
    "?."                   shift, and go to state 793
    "?["                   shift, and go to state 794
    "<|"                   shift, and go to state 795
    "|>"                   shift, and go to state 796
    "<<<"                  shift, and go to state 798
    ">>>"                  shift, and go to state 799
    "&&"                   shift, and go to state 802
    "||"                   shift, and go to state 803
    "^^"                   shift, and go to state 804
    ".."                   shift, and go to state 808
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 810
    '|'                    shift, and go to state 811
    '^'                    shift, and go to state 812
    '&'                    shift, and go to state 813
    '<'                    shift, and go to state 814
    '>'                    shift, and go to state 815
    '-'                    shift, and go to state 816
    '+'                    shift, and go to state 817
    '*'                    shift, and go to state 818
    '/'                    shift, and go to state 819
    '%'                    shift, and go to state 820
    '.'                    shift, and go to state 821
    '['                    shift, and go to state 822

    open_block        go to state 297
    expression_block  go to state 1513


State 1408

   74 expression_else_one_liner: "else" . $@3 expression_if_one_liner

    $default  reduce using rule 73 ($@3)

    $@3  go to state 1514


State 1409

   82 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1515


State 1410

  244 expression_block: open_block expressions close_block "finally" open_block expressions close_block .

    $default  reduce using rule 244 (expression_block)


State 1411

  380 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 1516


State 1412

  454 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 454 (expr_call)


State 1413

  428 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1517


State 1414

  429 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  890 make_dim_decl: '[' . optional_expr_list ']'
  923 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  924                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "for"                             shift, and go to state 740
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "iterator"                        shift, and go to state 741
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "$f"                              shift, and go to state 745
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 746
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 273 (optional_expr_list)

    string_builder          go to state 530
    expr_reader             go to state 531
    optional_expr_list      go to state 742
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 743
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_fields      go to state 1518
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1415

  329 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1519


State 1416

  330 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  331                                     | "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  334                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr semicolon
  335                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr_pipe

    ']'  shift, and go to state 1520


State 1417

  332 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  333                                     | '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  336                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr semicolon
  337                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1521
    '&'  shift, and go to state 403

    $default  reduce using rule 615 (optional_ref)

    optional_ref  go to state 1522


State 1418

  372 capture_list: capture_list . ',' capture_entry
  375 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1424
    ')'  shift, and go to state 1523


State 1419

  368 capture_entry: "<-" "name" .

    $default  reduce using rule 368 (capture_entry)


State 1420

  369 capture_entry: ":=" "name" .

    $default  reduce using rule 369 (capture_entry)


State 1421

  370 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1524


State 1422

  367 capture_entry: '=' "name" .

    $default  reduce using rule 367 (capture_entry)


State 1423

  366 capture_entry: '&' "name" .

    $default  reduce using rule 366 (capture_entry)


State 1424

  372 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1270
    ":="    shift, and go to state 1271
    "name"  shift, and go to state 1272
    '='     shift, and go to state 1273
    '&'     shift, and go to state 1274

    capture_entry  go to state 1525


State 1425

  374 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1526


State 1426

  378 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1527
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block             go to state 297
    expression_block       go to state 1528
    block_or_simple_block  go to state 1529


State 1427

  517 expr: expr "is" "type" '<' $@29 . type_declaration_no_options '>' $@30

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 1530


State 1428

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  557          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1531


State 1429

  523 expr: expr "as" "type" '<' $@31 . type_declaration '>' $@32

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 1532


State 1430

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  555          | expr "as" "$f" '(' expr . ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1533


State 1431

  430 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 430 (expr_method_call)


State 1432

  359 expr_list: expr_list . ',' expr
  431 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 901
    ')'  shift, and go to state 1534


State 1433

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  552          | expr "?." "$f" '(' expr . ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1535


State 1434

  528 expr: expr '?' "as" "type" '<' . $@33 type_declaration '>' $@34

    $default  reduce using rule 526 ($@33)

    $@33  go to state 1536


State 1435

  556 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1537
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1436

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  514     | expr '?' expr ':' expr .
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 514 (expr)


State 1437

  554 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1538
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1438

  503 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 503 (expr)


State 1439

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  551          | expr '.' "$f" '(' expr . ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1539


State 1440

  445 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  890 make_dim_decl: '[' . optional_expr_list ']'
  923 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  924                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "for"                             shift, and go to state 740
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "iterator"                        shift, and go to state 741
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "$f"                              shift, and go to state 745
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 746
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 273 (optional_expr_list)

    string_builder          go to state 530
    expr_reader             go to state 531
    optional_expr_list      go to state 742
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 743
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_fields      go to state 1540
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1441

  443 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 443 (expr_field)


State 1442

  359 expr_list: expr_list . ',' expr
  444 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 901
    ')'  shift, and go to state 1541


State 1443

  553 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1542
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1444

  501 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 501 (expr)


State 1445

  450 expr_field: expr '.' $@27 error $@28 .

    $default  reduce using rule 450 (expr_field)


State 1446

  446 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 446 (expr_field)


State 1447

  359 expr_list: expr_list . ',' expr
  447 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 901
    ')'  shift, and go to state 1543


State 1448

  581 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' semicolon .

    $default  reduce using rule 581 (struct_variable_declaration_list)


State 1449

  578 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@36 function_declaration_header semicolon

    "const"  shift, and go to state 1544

    $default  reduce using rule 565 (optional_constant)

    optional_constant  go to state 1545


State 1450

  580 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@37 function_declaration_header expression_block

    "override"  shift, and go to state 1451
    "sealed"    shift, and go to state 1452

    $default  reduce using rule 562 (optional_override)

    optional_override  go to state 1546


State 1451

  563 optional_override: "override" .

    $default  reduce using rule 563 (optional_override)


State 1452

  564 optional_override: "sealed" .

    $default  reduce using rule 564 (optional_override)


State 1453

  572 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1308
    "private"  shift, and go to state 1309

    $default  reduce using rule 567 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1547


State 1454

  511 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  512     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1485


State 1455

  782 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64 .

    $default  reduce using rule 782 (type_declaration_no_options)


State 1456

  789 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 789 (type_declaration_no_options)


State 1457

  796 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 796 (type_declaration_no_options)


State 1458

  750 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 273 (optional_expr_list)

    string_builder          go to state 530
    expr_reader             go to state 531
    optional_expr_list      go to state 1548
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 743
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1459

  280 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431

    $default  reduce using rule 280 (type_declaration_no_options_list)


State 1460

  684 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 684 (variable_name_with_pos_list)


State 1461

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  609 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 609 (variable_declaration_type)


State 1462

  869 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1549


State 1463

  872 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1550


State 1464

   84 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 84 (expression_for_loop)


State 1465

  299 new_type_declaration: '<' $@12 type_declaration '>' $@13 .

    $default  reduce using rule 299 (new_type_declaration)


State 1466

  305 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 305 (expr_new)


State 1467

  353 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1551
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1468

  354 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s . "name" '>' expr ')'

    "name"  shift, and go to state 1552


State 1469

  357 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1553


State 1470

  356 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1554
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1471

  351 expr_type_decl: "type" '<' $@20 type_declaration '>' $@21 .

    $default  reduce using rule 351 (expr_type_decl)


State 1472

  895 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' . $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 894 ($@100)

    $@100  go to state 1555


State 1473

  898 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 897 ($@102)

    $@102  go to state 1556


State 1474

  901 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' . $@104 '(' make_variant_dim ')'

    $default  reduce using rule 900 ($@104)

    $@104  go to state 1557


State 1475

  905 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 . '(' optional_expr_list ')'

    '('  shift, and go to state 1558


State 1476

  917 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1559


State 1477

  918 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1560


State 1478

  342 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1561
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1479

  345 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1562
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1480

  348 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1563
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1481

  909 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1564


State 1482

  878 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 . use_initializer

    "uninitialized"  shift, and go to state 1565

    $default  reduce using rule 859 (use_initializer)

    use_initializer  go to state 1566


State 1483

  887 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1567


State 1484

  875 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1568


State 1485

  511 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  512     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    ')'                               shift, and go to state 1569
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1570
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1486

  247 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped .

    $default  reduce using rule 247 (expr_call_pipe)


State 1487

  377 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1527
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block             go to state 297
    expression_block       go to state 1528
    block_or_simple_block  go to state 1571


State 1488

  549 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 549 (expr_mtag)


State 1489

  359 expr_list: expr_list . ',' expr
  550 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 901
    ')'  shift, and go to state 1572


State 1490

  925 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1573
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1491

  864 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1215
    ",]]"  shift, and go to state 1216
    ']'    shift, and go to state 1217

    optional_trailing_delim_sqr_sqr  go to state 1574


State 1492

  863 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 863 (make_struct_decl)


State 1493

  926 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1575
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1494

  866 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1385
    ";}]"                shift, and go to state 1386
    ",}]"                shift, and go to state 1387

    optional_trailing_delim_cur_sqr  go to state 1576


State 1495

  856 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 856 (optional_trailing_delim_cur_sqr)


State 1496

  928 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 724
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_map_tuple          go to state 1577
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1497

  283 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1578
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1498

  286 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 . optional_expr_list_in_braces

    '('  shift, and go to state 1579

    '('       [reduce using rule 275 (optional_expr_list_in_braces)]
    $default  reduce using rule 275 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1580


State 1499

   33 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 29 (format_string)

    format_string  go to state 1581


State 1500

   36 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 36 (string_builder_body)


State 1501

  927 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 724
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_map_tuple          go to state 1582
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1502

  923 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1583
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1503

  359 expr_list: expr_list . ',' expr
  924 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1584
    ','                  shift, and go to state 901


State 1504

  831 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1585
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1505

  830 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1586
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1506

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  832 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  833                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1587


State 1507

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  829 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 829 (make_struct_fields)


State 1508

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  828 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 828 (make_struct_fields)


State 1509

  433 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 433 (func_addr_name)


State 1510

  558 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 558 (expr_mtag)


State 1511

  437 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' . $@24 func_addr_name

    $default  reduce using rule 436 ($@24)

    $@24  go to state 1588


State 1512

  440 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type . '>' $@26 func_addr_name

    '>'  shift, and go to state 1589


State 1513

   67 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1251
    "elif"         shift, and go to state 1252
    "static_elif"  shift, and go to state 1253

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1254
    expression_else      go to state 1590


State 1514

   74 expression_else_one_liner: "else" $@3 . expression_if_one_liner

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "return"                          shift, and go to state 1591
    "null"                            shift, and go to state 471
    "break"                           shift, and go to state 472
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "continue"                        shift, and go to state 482
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "yield"                           shift, and go to state 1592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder             go to state 530
    expr_reader                go to state 531
    expression_if_one_liner    go to state 1593
    expression_keyword         go to state 594
    name_in_namespace          go to state 549
    expr_new                   go to state 551
    expression_break           go to state 1594
    expression_continue        go to state 1595
    expression_return_no_pipe  go to state 1596
    expression_yield_no_pipe   go to state 1597
    expr_cast                  go to state 561
    expr_type_decl             go to state 562
    expr_type_info             go to state 563
    block_or_lambda            go to state 564
    expr_full_block            go to state 565
    expr_numeric_const         go to state 566
    expr_named_call            go to state 569
    expr_method_call           go to state 570
    func_addr_expr             go to state 571
    expr_field                 go to state 572
    expr_call                  go to state 573
    expr                       go to state 1598
    expr_mtag                  go to state 575
    basic_type_declaration     go to state 576
    make_decl                  go to state 577
    make_struct_decl           go to state 578
    make_tuple_call            go to state 579
    make_dim_decl              go to state 580
    make_table_decl            go to state 581
    array_comprehension        go to state 582


State 1515

   82 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner semicolon .

    $default  reduce using rule 82 (expression_if_then_else)


State 1516

  380 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 387

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1599


State 1517

  428 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 428 (expr_named_call)


State 1518

  429 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  828 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  829                   | make_struct_fields . ',' "name" ":=" expr
  832                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  833                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1212
    ']'  shift, and go to state 1600


State 1519

  329 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 329 (tuple_expansion)


State 1520

  330 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  331                                     | "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  334                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr semicolon
  335                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1601
    '&'  shift, and go to state 403

    $default  reduce using rule 615 (optional_ref)

    optional_ref  go to state 1602


State 1521

  332 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  333                                     | '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 1603


State 1522

  336 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr semicolon
  337                                     | '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 599
    ":="  shift, and go to state 600
    '='   shift, and go to state 601

    copy_or_move_or_clone  go to state 1604


State 1523

  375 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 375 (optional_capture_list)


State 1524

  370 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1605


State 1525

  372 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 372 (capture_list)


State 1526

  374 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 374 (optional_capture_list)


State 1527

  361 block_or_simple_block: "=>" . expr
  362                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "<-"                              shift, and go to state 1606
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1607
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1528

  360 block_or_simple_block: expression_block .

    $default  reduce using rule 360 (block_or_simple_block)


State 1529

  378 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 378 (expr_full_block)


State 1530

  517 expr: expr "is" "type" '<' $@29 type_declaration_no_options . '>' $@30
  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "??"        shift, and go to state 424
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '>'         shift, and go to state 1608
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    dim_list  go to state 430


State 1531

  557 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 557 (expr_mtag)


State 1532

  523 expr: expr "as" "type" '<' $@31 type_declaration . '>' $@32
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431
    '>'  shift, and go to state 1609


State 1533

  555 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 555 (expr_mtag)


State 1534

  431 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 431 (expr_method_call)


State 1535

  552 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 552 (expr_mtag)


State 1536

  528 expr: expr '?' "as" "type" '<' $@33 . type_declaration '>' $@34

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 369
    type_declaration             go to state 1610


State 1537

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  556          | expr '?' "as" "$f" '(' expr . ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1611


State 1538

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  554          | expr '.' "?." "$f" '(' expr . ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1612


State 1539

  551 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 551 (expr_mtag)


State 1540

  445 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  828 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  829                   | make_struct_fields . ',' "name" ":=" expr
  832                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  833                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1212
    ']'  shift, and go to state 1613


State 1541

  444 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 444 (expr_field)


State 1542

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  553          | expr '.' '.' "$f" '(' expr . ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1614


State 1543

  447 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 447 (expr_field)


State 1544

  566 optional_constant: "const" .

    $default  reduce using rule 566 (optional_constant)


State 1545

  578 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@36 function_declaration_header semicolon

    $default  reduce using rule 577 ($@36)

    $@36  go to state 1615


State 1546

  580 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@37 function_declaration_header expression_block

    "const"  shift, and go to state 1544

    $default  reduce using rule 565 (optional_constant)

    optional_constant  go to state 1616


State 1547

  572 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 648
    "name"  shift, and go to state 649

    variable_declaration_no_type  go to state 1617
    variable_declaration_type     go to state 1618
    variable_declaration          go to state 1619
    variable_name_with_pos_list   go to state 652


State 1548

  750 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1620


State 1549

  869 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1565

    $default  reduce using rule 859 (use_initializer)

    use_initializer  go to state 1621


State 1550

  872 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1565

    $default  reduce using rule 859 (use_initializer)

    use_initializer  go to state 1622


State 1551

  353 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1623


State 1552

  354 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" . '>' expr ')'

    '>'  shift, and go to state 1624


State 1553

  357 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1625


State 1554

  356 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1626


State 1555

  895 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1627


State 1556

  898 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1628


State 1557

  901 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 . '(' make_variant_dim ')'

    '('  shift, and go to state 1629


State 1558

  905 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 273 (optional_expr_list)

    string_builder          go to state 530
    expr_reader             go to state 531
    optional_expr_list      go to state 1630
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 743
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1559

  917 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 917 (make_table_decl)


State 1560

  918 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 277 (optional_expr_map_tuple_list)

    string_builder                go to state 530
    expr_reader                   go to state 531
    optional_expr_map_tuple_list  go to state 1631
    expression_keyword            go to state 594
    name_in_namespace             go to state 549
    expr_new                      go to state 551
    expr_cast                     go to state 561
    expr_type_decl                go to state 562
    expr_type_info                go to state 563
    block_or_lambda               go to state 564
    expr_full_block               go to state 565
    expr_numeric_const            go to state 566
    expr_named_call               go to state 569
    expr_method_call              go to state 570
    func_addr_expr                go to state 571
    expr_field                    go to state 572
    expr_call                     go to state 573
    expr                          go to state 724
    expr_mtag                     go to state 575
    basic_type_declaration        go to state 576
    make_decl                     go to state 577
    make_struct_decl              go to state 578
    make_map_tuple                go to state 733
    make_tuple_call               go to state 579
    make_dim_decl                 go to state 580
    expr_map_tuple_list           go to state 734
    make_table_decl               go to state 581
    array_comprehension           go to state 582


State 1561

  342 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 342 (expr_cast)


State 1562

  345 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 345 (expr_cast)


State 1563

  348 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 348 (expr_cast)


State 1564

  909 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 1632
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1565

  860 use_initializer: "uninitialized" .

    $default  reduce using rule 860 (use_initializer)


State 1566

  878 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer .

    $default  reduce using rule 878 (make_struct_decl)


State 1567

  887 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1565

    $default  reduce using rule 859 (use_initializer)

    use_initializer  go to state 1633


State 1568

  875 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1565

    $default  reduce using rule 859 (use_initializer)

    use_initializer  go to state 1634


State 1569

  511 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 511 (expr)


State 1570

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  512     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1635


State 1571

  377 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 377 (expr_block)


State 1572

  550 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 550 (expr_mtag)


State 1573

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  925 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 770
    "as"                 shift, and go to state 771
    "<<"                 shift, and go to state 780
    ">>"                 shift, and go to state 781
    "++"                 shift, and go to state 782
    "--"                 shift, and go to state 783
    "<="                 shift, and go to state 784
    ">="                 shift, and go to state 787
    "=="                 shift, and go to state 788
    "!="                 shift, and go to state 789
    "->"                 shift, and go to state 790
    "??"                 shift, and go to state 792
    "?."                 shift, and go to state 793
    "?["                 shift, and go to state 794
    "<|"                 shift, and go to state 795
    "|>"                 shift, and go to state 796
    "<<<"                shift, and go to state 798
    ">>>"                shift, and go to state 799
    "&&"                 shift, and go to state 802
    "||"                 shift, and go to state 803
    "^^"                 shift, and go to state 804
    ".."                 shift, and go to state 808
    "end of expression"  shift, and go to state 1636
    '?'                  shift, and go to state 810
    '|'                  shift, and go to state 811
    '^'                  shift, and go to state 812
    '&'                  shift, and go to state 813
    '<'                  shift, and go to state 814
    '>'                  shift, and go to state 815
    '-'                  shift, and go to state 816
    '+'                  shift, and go to state 817
    '*'                  shift, and go to state 818
    '/'                  shift, and go to state 819
    '%'                  shift, and go to state 820
    '.'                  shift, and go to state 821
    '['                  shift, and go to state 822

    $default  reduce using rule 919 (array_comprehension_where)

    array_comprehension_where  go to state 1637


State 1574

  864 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 864 (make_struct_decl)


State 1575

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  926 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 770
    "as"                 shift, and go to state 771
    "<<"                 shift, and go to state 780
    ">>"                 shift, and go to state 781
    "++"                 shift, and go to state 782
    "--"                 shift, and go to state 783
    "<="                 shift, and go to state 784
    ">="                 shift, and go to state 787
    "=="                 shift, and go to state 788
    "!="                 shift, and go to state 789
    "->"                 shift, and go to state 790
    "??"                 shift, and go to state 792
    "?."                 shift, and go to state 793
    "?["                 shift, and go to state 794
    "<|"                 shift, and go to state 795
    "|>"                 shift, and go to state 796
    "<<<"                shift, and go to state 798
    ">>>"                shift, and go to state 799
    "&&"                 shift, and go to state 802
    "||"                 shift, and go to state 803
    "^^"                 shift, and go to state 804
    ".."                 shift, and go to state 808
    "end of expression"  shift, and go to state 1636
    '?'                  shift, and go to state 810
    '|'                  shift, and go to state 811
    '^'                  shift, and go to state 812
    '&'                  shift, and go to state 813
    '<'                  shift, and go to state 814
    '>'                  shift, and go to state 815
    '-'                  shift, and go to state 816
    '+'                  shift, and go to state 817
    '*'                  shift, and go to state 818
    '/'                  shift, and go to state 819
    '%'                  shift, and go to state 820
    '.'                  shift, and go to state 821
    '['                  shift, and go to state 822

    $default  reduce using rule 919 (array_comprehension_where)

    array_comprehension_where  go to state 1638


State 1576

  866 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 866 (make_struct_decl)


State 1577

  928 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1636

    $default  reduce using rule 919 (array_comprehension_where)

    array_comprehension_where  go to state 1639


State 1578

  283 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 283 (expression_keyword)


State 1579

  276 optional_expr_list_in_braces: '(' . optional_expr_list optional_comma ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 273 (optional_expr_list)

    string_builder          go to state 530
    expr_reader             go to state 531
    optional_expr_list      go to state 1640
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 743
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1580

  286 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces .

    $default  reduce using rule 286 (expression_keyword)


State 1581

   30 format_string: format_string . STRING_CHARACTER
   33 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1641

    $default  reduce using rule 33 (optional_format_string)


State 1582

  927 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1636

    $default  reduce using rule 919 (array_comprehension_where)

    array_comprehension_where  go to state 1642


State 1583

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  923 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 770
    "as"                 shift, and go to state 771
    "<<"                 shift, and go to state 780
    ">>"                 shift, and go to state 781
    "++"                 shift, and go to state 782
    "--"                 shift, and go to state 783
    "<="                 shift, and go to state 784
    ">="                 shift, and go to state 787
    "=="                 shift, and go to state 788
    "!="                 shift, and go to state 789
    "->"                 shift, and go to state 790
    "??"                 shift, and go to state 792
    "?."                 shift, and go to state 793
    "?["                 shift, and go to state 794
    "<|"                 shift, and go to state 795
    "|>"                 shift, and go to state 796
    "<<<"                shift, and go to state 798
    ">>>"                shift, and go to state 799
    "&&"                 shift, and go to state 802
    "||"                 shift, and go to state 803
    "^^"                 shift, and go to state 804
    ".."                 shift, and go to state 808
    "end of expression"  shift, and go to state 1636
    '?'                  shift, and go to state 810
    '|'                  shift, and go to state 811
    '^'                  shift, and go to state 812
    '&'                  shift, and go to state 813
    '<'                  shift, and go to state 814
    '>'                  shift, and go to state 815
    '-'                  shift, and go to state 816
    '+'                  shift, and go to state 817
    '*'                  shift, and go to state 818
    '/'                  shift, and go to state 819
    '%'                  shift, and go to state 820
    '.'                  shift, and go to state 821
    '['                  shift, and go to state 822

    $default  reduce using rule 919 (array_comprehension_where)

    array_comprehension_where  go to state 1643


State 1584

  924 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1644
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1585

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  831 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 831 (make_struct_fields)


State 1586

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  830 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 830 (make_struct_fields)


State 1587

  832 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  833                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 878
    ":="  shift, and go to state 1645
    '='   shift, and go to state 880

    copy_or_move  go to state 1646


State 1588

  437 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 . func_addr_name

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 993
    "name"  shift, and go to state 63

    name_in_namespace  go to state 996
    func_addr_name     go to state 1647


State 1589

  440 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' . $@26 func_addr_name

    $default  reduce using rule 439 ($@26)

    $@26  go to state 1648


State 1590

   67 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 67 (expression_else)


State 1591

  309 expression_return_no_pipe: "return" .
  310                          | "return" . expr_list
  311                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "<-"                              shift, and go to state 1649
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    $default  reduce using rule 309 (expression_return_no_pipe)

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 674
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1592

  315 expression_yield_no_pipe: "yield" . expr
  316                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "<-"                              shift, and go to state 1650
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1651
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1593

   74 expression_else_one_liner: "else" $@3 expression_if_one_liner .

    $default  reduce using rule 74 (expression_else_one_liner)


State 1594

   78 expression_if_one_liner: expression_break .

    $default  reduce using rule 78 (expression_if_one_liner)


State 1595

   79 expression_if_one_liner: expression_continue .

    $default  reduce using rule 79 (expression_if_one_liner)


State 1596

   76 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 76 (expression_if_one_liner)


State 1597

   77 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 77 (expression_if_one_liner)


State 1598

   75 expression_if_one_liner: expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 75 (expression_if_one_liner)


State 1599

  380 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 1652


State 1600

  429 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1653


State 1601

  330 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  331                                     | "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 323
    "array"      shift, and go to state 324
    "table"      shift, and go to state 325
    "typedecl"   shift, and go to state 326
    "iterator"   shift, and go to state 327
    "smart_ptr"  shift, and go to state 328
    "bool"       shift, and go to state 329
    "void"       shift, and go to state 330
    "string"     shift, and go to state 331
    "auto"       shift, and go to state 332
    "int"        shift, and go to state 333
    "int2"       shift, and go to state 334
    "int3"       shift, and go to state 335
    "int4"       shift, and go to state 336
    "uint"       shift, and go to state 337
    "bitfield"   shift, and go to state 338
    "uint2"      shift, and go to state 339
    "uint3"      shift, and go to state 340
    "uint4"      shift, and go to state 341
    "float"      shift, and go to state 342
    "float2"     shift, and go to state 343
    "float3"     shift, and go to state 344
    "float4"     shift, and go to state 345
    "range"      shift, and go to state 346
    "urange"     shift, and go to state 347
    "range64"    shift, and go to state 348
    "urange64"   shift, and go to state 349
    "block"      shift, and go to state 350
    "int64"      shift, and go to state 351
    "uint64"     shift, and go to state 352
    "double"     shift, and go to state 353
    "function"   shift, and go to state 354
    "lambda"     shift, and go to state 355
    "int8"       shift, and go to state 356
    "uint8"      shift, and go to state 357
    "int16"      shift, and go to state 358
    "uint16"     shift, and go to state 359
    "tuple"      shift, and go to state 360
    "variant"    shift, and go to state 361
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 362
    "name"       shift, and go to state 63
    '$'          shift, and go to state 363

    name_in_namespace            go to state 364
    basic_type_declaration       go to state 365
    structure_type_declaration   go to state 366
    auto_type_declaration        go to state 367
    bitfield_type_declaration    go to state 368
    type_declaration_no_options  go to state 1654


State 1602

  334 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr semicolon
  335                                     | "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 599
    ":="  shift, and go to state 600
    '='   shift, and go to state 601

    copy_or_move_or_clone  go to state 1655


State 1603

  332 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  333                                     | '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "<-"        shift, and go to state 599
    "??"        shift, and go to state 424
    ":="        shift, and go to state 600
    '='         shift, and go to state 601
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    copy_or_move_or_clone  go to state 1656
    dim_list               go to state 430


State 1604

  336 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr semicolon
  337                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 497
    "@ <|"                            shift, and go to state 498
    "@@ <|"                           shift, and go to state 499
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 544
    expression_keyword      go to state 547
    expr_pipe               go to state 1657
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign             go to state 675
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1658
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1605

  370 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 370 (capture_entry)


State 1606

  362 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1659
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1607

  361 block_or_simple_block: "=>" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    ".."  error (nonassociative)

    $default  reduce using rule 361 (block_or_simple_block)


State 1608

  517 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' . $@30

    $default  reduce using rule 516 ($@30)

    $@30  go to state 1660


State 1609

  523 expr: expr "as" "type" '<' $@31 type_declaration '>' . $@32

    $default  reduce using rule 522 ($@32)

    $@32  go to state 1661


State 1610

  528 expr: expr '?' "as" "type" '<' $@33 type_declaration . '>' $@34
  804 type_declaration: type_declaration . '|' type_declaration_no_options
  805                 | type_declaration . '|' '#'

    '|'  shift, and go to state 431
    '>'  shift, and go to state 1662


State 1611

  556 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 556 (expr_mtag)


State 1612

  554 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 554 (expr_mtag)


State 1613

  445 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1663


State 1614

  553 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 553 (expr_mtag)


State 1615

  578 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 . function_declaration_header semicolon

    "operator"  shift, and go to state 192
    "bool"      shift, and go to state 193
    "string"    shift, and go to state 194
    "int"       shift, and go to state 195
    "int2"      shift, and go to state 196
    "int3"      shift, and go to state 197
    "int4"      shift, and go to state 198
    "uint"      shift, and go to state 199
    "uint2"     shift, and go to state 200
    "uint3"     shift, and go to state 201
    "uint4"     shift, and go to state 202
    "float"     shift, and go to state 203
    "float2"    shift, and go to state 204
    "float3"    shift, and go to state 205
    "float4"    shift, and go to state 206
    "range"     shift, and go to state 207
    "urange"    shift, and go to state 208
    "range64"   shift, and go to state 209
    "urange64"  shift, and go to state 210
    "int64"     shift, and go to state 211
    "uint64"    shift, and go to state 212
    "double"    shift, and go to state 213
    "int8"      shift, and go to state 214
    "uint8"     shift, and go to state 215
    "int16"     shift, and go to state 216
    "uint16"    shift, and go to state 217
    "++"        shift, and go to state 218
    "--"        shift, and go to state 219
    "name"      shift, and go to state 220

    function_name                go to state 221
    function_declaration_header  go to state 1664


State 1616

  580 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@37 function_declaration_header expression_block

    $default  reduce using rule 579 ($@37)

    $@37  go to state 1665


State 1617

  611 variable_declaration: variable_declaration_no_type .

    $default  reduce using rule 611 (variable_declaration)


State 1618

  610 variable_declaration: variable_declaration_type .

    $default  reduce using rule 610 (variable_declaration)


State 1619

  572 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 572 (structure_variable_declaration)


State 1620

  750 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 750 (type_declaration_no_options)


State 1621

  869 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 745
    "name"  shift, and go to state 1259
    '('     shift, and go to state 1666

    $default  reduce using rule 844 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1667
    make_struct_dim_list           go to state 1668
    make_struct_dim_decl           go to state 1669
    optional_make_struct_dim_decl  go to state 1670


State 1622

  872 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 745
    "name"  shift, and go to state 1259
    '('     shift, and go to state 1666

    $default  reduce using rule 844 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1667
    make_struct_dim_list           go to state 1668
    make_struct_dim_decl           go to state 1669
    optional_make_struct_dim_decl  go to state 1671


State 1623

  353 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 353 (expr_type_info)


State 1624

  354 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1672
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1625

  357 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1673
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1626

  356 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 356 (expr_type_info)


State 1627

  895 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1565

    $default  reduce using rule 859 (use_initializer)

    use_initializer  go to state 1674


State 1628

  898 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1565

    $default  reduce using rule 859 (use_initializer)

    use_initializer  go to state 1675


State 1629

  901 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 745
    "name"  shift, and go to state 1259

    $default  reduce using rule 834 (make_variant_dim)

    make_struct_fields  go to state 1676
    make_variant_dim    go to state 1677


State 1630

  905 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1678


State 1631

  918 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1679


State 1632

  359 expr_list: expr_list . ',' expr
  909 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 984

    $default  reduce using rule 921 (optional_comma)

    optional_comma  go to state 1680


State 1633

  887 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 745
    "name"  shift, and go to state 1259
    '('     shift, and go to state 1666

    $default  reduce using rule 844 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1667
    make_struct_dim_list           go to state 1668
    make_struct_dim_decl           go to state 1669
    optional_make_struct_dim_decl  go to state 1681


State 1634

  875 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 745
    "name"  shift, and go to state 1259

    $default  reduce using rule 834 (make_variant_dim)

    make_struct_fields  go to state 1676
    make_variant_dim    go to state 1682


State 1635

  512 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 512 (expr)


State 1636

  920 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1683


State 1637

  925 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1684


State 1638

  926 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1685


State 1639

  928 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1686


State 1640

  276 optional_expr_list_in_braces: '(' optional_expr_list . optional_comma ')'

    ','  shift, and go to state 1687

    $default  reduce using rule 921 (optional_comma)

    optional_comma  go to state 1688


State 1641

   30 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 30 (format_string)


State 1642

  927 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1689


State 1643

  923 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1690


State 1644

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  924 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 770
    "as"                 shift, and go to state 771
    "<<"                 shift, and go to state 780
    ">>"                 shift, and go to state 781
    "++"                 shift, and go to state 782
    "--"                 shift, and go to state 783
    "<="                 shift, and go to state 784
    ">="                 shift, and go to state 787
    "=="                 shift, and go to state 788
    "!="                 shift, and go to state 789
    "->"                 shift, and go to state 790
    "??"                 shift, and go to state 792
    "?."                 shift, and go to state 793
    "?["                 shift, and go to state 794
    "<|"                 shift, and go to state 795
    "|>"                 shift, and go to state 796
    "<<<"                shift, and go to state 798
    ">>>"                shift, and go to state 799
    "&&"                 shift, and go to state 802
    "||"                 shift, and go to state 803
    "^^"                 shift, and go to state 804
    ".."                 shift, and go to state 808
    "end of expression"  shift, and go to state 1636
    '?'                  shift, and go to state 810
    '|'                  shift, and go to state 811
    '^'                  shift, and go to state 812
    '&'                  shift, and go to state 813
    '<'                  shift, and go to state 814
    '>'                  shift, and go to state 815
    '-'                  shift, and go to state 816
    '+'                  shift, and go to state 817
    '*'                  shift, and go to state 818
    '/'                  shift, and go to state 819
    '%'                  shift, and go to state 820
    '.'                  shift, and go to state 821
    '['                  shift, and go to state 822

    $default  reduce using rule 919 (array_comprehension_where)

    array_comprehension_where  go to state 1691


State 1645

  833 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1692
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1646

  832 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1693
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1647

  437 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name .

    $default  reduce using rule 437 (func_addr_expr)


State 1648

  440 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 . func_addr_name

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 993
    "name"  shift, and go to state 63

    name_in_namespace  go to state 996
    func_addr_name     go to state 1694


State 1649

  311 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    expr_list               go to state 900
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 744
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1650

  316 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1695
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1651

  315 expression_yield_no_pipe: "yield" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 315 (expression_yield_no_pipe)


State 1652

  380 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 380 (expr_full_block_assumed_piped)


State 1653

  429 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 429 (expr_named_call)


State 1654

  330 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  331                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  742 type_declaration_no_options: type_declaration_no_options . dim_list
  743                            | type_declaration_no_options . '[' ']'
  751                            | type_declaration_no_options . '-' '[' ']'
  752                            | type_declaration_no_options . "explicit"
  753                            | type_declaration_no_options . "const"
  754                            | type_declaration_no_options . '-' "const"
  755                            | type_declaration_no_options . '&'
  756                            | type_declaration_no_options . '-' '&'
  757                            | type_declaration_no_options . '#'
  758                            | type_declaration_no_options . "implicit"
  759                            | type_declaration_no_options . '-' '#'
  760                            | type_declaration_no_options . "==" "const"
  761                            | type_declaration_no_options . "==" '&'
  762                            | type_declaration_no_options . '?'
  766                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 420
    "implicit"  shift, and go to state 421
    "explicit"  shift, and go to state 422
    "=="        shift, and go to state 423
    "<-"        shift, and go to state 599
    "??"        shift, and go to state 424
    ":="        shift, and go to state 600
    '='         shift, and go to state 601
    '?'         shift, and go to state 425
    '&'         shift, and go to state 426
    '-'         shift, and go to state 427
    '['         shift, and go to state 428
    '#'         shift, and go to state 429

    copy_or_move_or_clone  go to state 1696
    dim_list               go to state 430


State 1655

  334 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr semicolon
  335                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 497
    "@ <|"                            shift, and go to state 498
    "@@ <|"                           shift, and go to state 499
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 544
    expression_keyword      go to state 547
    expr_pipe               go to state 1697
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign             go to state 675
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1698
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1656

  332 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  333                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 497
    "@ <|"                            shift, and go to state 498
    "@@ <|"                           shift, and go to state 499
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 544
    expression_keyword      go to state 547
    expr_pipe               go to state 1699
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign             go to state 675
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1700
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1657

  337 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 337 (tuple_expansion_variable_declaration)


State 1658

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  336 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . semicolon
  388 expr_assign: expr .
  389            | expr . '=' expr
  390            | expr . "<-" expr
  391            | expr . ":=" expr
  392            | expr . "&=" expr
  393            | expr . "|=" expr
  394            | expr . "^=" expr
  395            | expr . "&&=" expr
  396            | expr . "||=" expr
  397            | expr . "^^=" expr
  398            | expr . "+=" expr
  399            | expr . "-=" expr
  400            | expr . "*=" expr
  401            | expr . "/=" expr
  402            | expr . "%=" expr
  403            | expr . "<<=" expr
  404            | expr . ">>=" expr
  405            | expr . "<<<=" expr
  406            | expr . ">>>=" expr
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 770
    "as"                 shift, and go to state 771
    "+="                 shift, and go to state 902
    "-="                 shift, and go to state 903
    "/="                 shift, and go to state 904
    "*="                 shift, and go to state 905
    "%="                 shift, and go to state 906
    "&="                 shift, and go to state 907
    "|="                 shift, and go to state 908
    "^="                 shift, and go to state 909
    "<<"                 shift, and go to state 780
    ">>"                 shift, and go to state 781
    "++"                 shift, and go to state 782
    "--"                 shift, and go to state 783
    "<="                 shift, and go to state 784
    "<<="                shift, and go to state 910
    ">>="                shift, and go to state 911
    ">="                 shift, and go to state 787
    "=="                 shift, and go to state 788
    "!="                 shift, and go to state 789
    "->"                 shift, and go to state 790
    "<-"                 shift, and go to state 912
    "??"                 shift, and go to state 792
    "?."                 shift, and go to state 793
    "?["                 shift, and go to state 794
    "<|"                 shift, and go to state 795
    "|>"                 shift, and go to state 796
    ":="                 shift, and go to state 797
    "<<<"                shift, and go to state 798
    ">>>"                shift, and go to state 799
    "<<<="               shift, and go to state 913
    ">>>="               shift, and go to state 914
    "&&"                 shift, and go to state 802
    "||"                 shift, and go to state 803
    "^^"                 shift, and go to state 804
    "&&="                shift, and go to state 915
    "||="                shift, and go to state 916
    "^^="                shift, and go to state 917
    ".."                 shift, and go to state 808
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 918
    '?'                  shift, and go to state 810
    '|'                  shift, and go to state 811
    '^'                  shift, and go to state 812
    '&'                  shift, and go to state 813
    '<'                  shift, and go to state 814
    '>'                  shift, and go to state 815
    '-'                  shift, and go to state 816
    '+'                  shift, and go to state 817
    '*'                  shift, and go to state 818
    '/'                  shift, and go to state 819
    '%'                  shift, and go to state 820
    '.'                  shift, and go to state 821
    '['                  shift, and go to state 822
    '$'                  shift, and go to state 528
    '@'                  shift, and go to state 707

    $default  reduce using rule 388 (expr_assign)

    semicolon                      go to state 1701
    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1659

  362 block_or_simple_block: "=>" "<-" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 362 (block_or_simple_block)


State 1660

  517 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' $@30 .

    $default  reduce using rule 517 (expr)


State 1661

  523 expr: expr "as" "type" '<' $@31 type_declaration '>' $@32 .

    $default  reduce using rule 523 (expr)


State 1662

  528 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' . $@34

    $default  reduce using rule 527 ($@34)

    $@34  go to state 1702


State 1663

  445 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 445 (expr_field)


State 1664

  578 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1703


State 1665

  580 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 . function_declaration_header expression_block

    "operator"  shift, and go to state 192
    "bool"      shift, and go to state 193
    "string"    shift, and go to state 194
    "int"       shift, and go to state 195
    "int2"      shift, and go to state 196
    "int3"      shift, and go to state 197
    "int4"      shift, and go to state 198
    "uint"      shift, and go to state 199
    "uint2"     shift, and go to state 200
    "uint3"     shift, and go to state 201
    "uint4"     shift, and go to state 202
    "float"     shift, and go to state 203
    "float2"    shift, and go to state 204
    "float3"    shift, and go to state 205
    "float4"    shift, and go to state 206
    "range"     shift, and go to state 207
    "urange"    shift, and go to state 208
    "range64"   shift, and go to state 209
    "urange64"  shift, and go to state 210
    "int64"     shift, and go to state 211
    "uint64"    shift, and go to state 212
    "double"    shift, and go to state 213
    "int8"      shift, and go to state 214
    "uint8"     shift, and go to state 215
    "int16"     shift, and go to state 216
    "uint16"    shift, and go to state 217
    "++"        shift, and go to state 218
    "--"        shift, and go to state 219
    "name"      shift, and go to state 220

    function_name                go to state 221
    function_declaration_header  go to state 1704


State 1666

  839 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 745
    "name"  shift, and go to state 1259

    make_struct_fields  go to state 1705


State 1667

  828 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  829                   | make_struct_fields . ',' "name" ":=" expr
  832                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  833                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  841 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1212

    $default  reduce using rule 841 (make_struct_dim_decl)


State 1668

  840 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  842 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1706

    $default  reduce using rule 921 (optional_comma)

    optional_comma  go to state 1707


State 1669

  843 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 843 (optional_make_struct_dim_decl)


State 1670

  869 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1708


State 1671

  872 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1709


State 1672

  354 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr . ')'
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1710


State 1673

  357 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822
    ')'    shift, and go to state 1711


State 1674

  895 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 745
    "name"  shift, and go to state 1259
    '('     shift, and go to state 1666

    $default  reduce using rule 844 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1667
    make_struct_dim_list           go to state 1668
    make_struct_dim_decl           go to state 1669
    optional_make_struct_dim_decl  go to state 1712


State 1675

  898 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 745
    "name"  shift, and go to state 1259
    '('     shift, and go to state 1666

    $default  reduce using rule 844 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1667
    make_struct_dim_list           go to state 1668
    make_struct_dim_decl           go to state 1669
    optional_make_struct_dim_decl  go to state 1713


State 1676

  828 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  829                   | make_struct_fields . ',' "name" ":=" expr
  832                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  833                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  835 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1212

    $default  reduce using rule 835 (make_variant_dim)


State 1677

  901 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1714


State 1678

  905 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')' .

    $default  reduce using rule 905 (make_dim_decl)


State 1679

  918 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 918 (make_table_decl)


State 1680

  909 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1715


State 1681

  887 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1716


State 1682

  875 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1717


State 1683

  920 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 592
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expression_keyword      go to state 594
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1718
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1684

  925 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1719


State 1685

  926 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1720


State 1686

  928 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1721


State 1687

  922 optional_comma: ',' .

    $default  reduce using rule 922 (optional_comma)


State 1688

  276 optional_expr_list_in_braces: '(' optional_expr_list optional_comma . ')'

    ')'  shift, and go to state 1722


State 1689

  927 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 927 (array_comprehension)


State 1690

  923 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 923 (array_comprehension)


State 1691

  924 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1723


State 1692

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  833 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 833 (make_struct_fields)


State 1693

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  832 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 832 (make_struct_fields)


State 1694

  440 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name .

    $default  reduce using rule 440 (func_addr_expr)


State 1695

  316 expression_yield_no_pipe: "yield" "<-" expr .
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 316 (expression_yield_no_pipe)


State 1696

  330 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  331                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 458
    "class"                           shift, and go to state 459
    "true"                            shift, and go to state 464
    "false"                           shift, and go to state 465
    "new"                             shift, and go to state 466
    "typeinfo"                        shift, and go to state 467
    "type"                            shift, and go to state 468
    "array"                           shift, and go to state 469
    "null"                            shift, and go to state 471
    "table"                           shift, and go to state 474
    "deref"                           shift, and go to state 476
    "cast"                            shift, and go to state 479
    "upcast"                          shift, and go to state 480
    "addr"                            shift, and go to state 481
    "reinterpret"                     shift, and go to state 484
    "unsafe"                          shift, and go to state 591
    "fixed_array"                     shift, and go to state 488
    "default"                         shift, and go to state 489
    "bool"                            shift, and go to state 329
    "void"                            shift, and go to state 330
    "string"                          shift, and go to state 331
    "int"                             shift, and go to state 333
    "int2"                            shift, and go to state 334
    "int3"                            shift, and go to state 335
    "int4"                            shift, and go to state 336
    "uint"                            shift, and go to state 337
    "bitfield"                        shift, and go to state 490
    "uint2"                           shift, and go to state 339
    "uint3"                           shift, and go to state 340
    "uint4"                           shift, and go to state 341
    "float"                           shift, and go to state 342
    "float2"                          shift, and go to state 343
    "float3"                          shift, and go to state 344
    "float4"                          shift, and go to state 345
    "range"                           shift, and go to state 346
    "urange"                          shift, and go to state 347
    "range64"                         shift, and go to state 348
    "urange64"                        shift, and go to state 349
    "int64"                           shift, and go to state 351
    "uint64"                          shift, and go to state 352
    "double"                          shift, and go to state 353
    "int8"                            shift, and go to state 356
    "uint8"                           shift, and go to state 357
    "int16"                           shift, and go to state 358
    "uint16"                          shift, and go to state 359
    "tuple"                           shift, and go to state 491
    "variant"                         shift, and go to state 492
    "generator"                       shift, and go to state 493
    "++"                              shift, and go to state 495
    "--"                              shift, and go to state 496
    "$ <|"                            shift, and go to state 497
    "@ <|"                            shift, and go to state 498
    "@@ <|"                           shift, and go to state 499
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 500
    "$i"                              shift, and go to state 501
    "$v"                              shift, and go to state 502
    "$b"                              shift, and go to state 503
    "$a"                              shift, and go to state 504
    "$c"                              shift, and go to state 505
    "..."                             shift, and go to state 506
    "[["                              shift, and go to state 507
    "[{"                              shift, and go to state 508
    "{{"                              shift, and go to state 509
    "integer constant"                shift, and go to state 510
    "long integer constant"           shift, and go to state 511
    "unsigned integer constant"       shift, and go to state 512
    "unsigned long integer constant"  shift, and go to state 513
    "unsigned int8 constant"          shift, and go to state 514
    "floating point constant"         shift, and go to state 515
    "double constant"                 shift, and go to state 516
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 593
    "type function"                   shift, and go to state 518
    "start of the string"             shift, and go to state 519
    "begin of code block"             shift, and go to state 520
    '-'                               shift, and go to state 521
    '+'                               shift, and go to state 522
    '*'                               shift, and go to state 523
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 524
    '!'                               shift, and go to state 525
    '['                               shift, and go to state 526
    '('                               shift, and go to state 527
    '$'                               shift, and go to state 528
    '@'                               shift, and go to state 529

    string_builder          go to state 530
    expr_reader             go to state 531
    expr_call_pipe          go to state 544
    expression_keyword      go to state 547
    expr_pipe               go to state 1724
    name_in_namespace       go to state 549
    expr_new                go to state 551
    expr_cast               go to state 561
    expr_type_decl          go to state 562
    expr_type_info          go to state 563
    block_or_lambda         go to state 564
    expr_full_block         go to state 565
    expr_numeric_const      go to state 566
    expr_assign             go to state 675
    expr_named_call         go to state 569
    expr_method_call        go to state 570
    func_addr_expr          go to state 571
    expr_field              go to state 572
    expr_call               go to state 573
    expr                    go to state 1725
    expr_mtag               go to state 575
    basic_type_declaration  go to state 576
    make_decl               go to state 577
    make_struct_decl        go to state 578
    make_tuple_call         go to state 579
    make_dim_decl           go to state 580
    make_table_decl         go to state 581
    array_comprehension     go to state 582


State 1697

  335 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 335 (tuple_expansion_variable_declaration)


State 1698

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  334 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . semicolon
  388 expr_assign: expr .
  389            | expr . '=' expr
  390            | expr . "<-" expr
  391            | expr . ":=" expr
  392            | expr . "&=" expr
  393            | expr . "|=" expr
  394            | expr . "^=" expr
  395            | expr . "&&=" expr
  396            | expr . "||=" expr
  397            | expr . "^^=" expr
  398            | expr . "+=" expr
  399            | expr . "-=" expr
  400            | expr . "*=" expr
  401            | expr . "/=" expr
  402            | expr . "%=" expr
  403            | expr . "<<=" expr
  404            | expr . ">>=" expr
  405            | expr . "<<<=" expr
  406            | expr . ">>>=" expr
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 770
    "as"                 shift, and go to state 771
    "+="                 shift, and go to state 902
    "-="                 shift, and go to state 903
    "/="                 shift, and go to state 904
    "*="                 shift, and go to state 905
    "%="                 shift, and go to state 906
    "&="                 shift, and go to state 907
    "|="                 shift, and go to state 908
    "^="                 shift, and go to state 909
    "<<"                 shift, and go to state 780
    ">>"                 shift, and go to state 781
    "++"                 shift, and go to state 782
    "--"                 shift, and go to state 783
    "<="                 shift, and go to state 784
    "<<="                shift, and go to state 910
    ">>="                shift, and go to state 911
    ">="                 shift, and go to state 787
    "=="                 shift, and go to state 788
    "!="                 shift, and go to state 789
    "->"                 shift, and go to state 790
    "<-"                 shift, and go to state 912
    "??"                 shift, and go to state 792
    "?."                 shift, and go to state 793
    "?["                 shift, and go to state 794
    "<|"                 shift, and go to state 795
    "|>"                 shift, and go to state 796
    ":="                 shift, and go to state 797
    "<<<"                shift, and go to state 798
    ">>>"                shift, and go to state 799
    "<<<="               shift, and go to state 913
    ">>>="               shift, and go to state 914
    "&&"                 shift, and go to state 802
    "||"                 shift, and go to state 803
    "^^"                 shift, and go to state 804
    "&&="                shift, and go to state 915
    "||="                shift, and go to state 916
    "^^="                shift, and go to state 917
    ".."                 shift, and go to state 808
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 918
    '?'                  shift, and go to state 810
    '|'                  shift, and go to state 811
    '^'                  shift, and go to state 812
    '&'                  shift, and go to state 813
    '<'                  shift, and go to state 814
    '>'                  shift, and go to state 815
    '-'                  shift, and go to state 816
    '+'                  shift, and go to state 817
    '*'                  shift, and go to state 818
    '/'                  shift, and go to state 819
    '%'                  shift, and go to state 820
    '.'                  shift, and go to state 821
    '['                  shift, and go to state 822
    '$'                  shift, and go to state 528
    '@'                  shift, and go to state 707

    $default  reduce using rule 388 (expr_assign)

    semicolon                      go to state 1726
    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1699

  333 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 333 (tuple_expansion_variable_declaration)


State 1700

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  332 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon
  388 expr_assign: expr .
  389            | expr . '=' expr
  390            | expr . "<-" expr
  391            | expr . ":=" expr
  392            | expr . "&=" expr
  393            | expr . "|=" expr
  394            | expr . "^=" expr
  395            | expr . "&&=" expr
  396            | expr . "||=" expr
  397            | expr . "^^=" expr
  398            | expr . "+=" expr
  399            | expr . "-=" expr
  400            | expr . "*=" expr
  401            | expr . "/=" expr
  402            | expr . "%=" expr
  403            | expr . "<<=" expr
  404            | expr . ">>=" expr
  405            | expr . "<<<=" expr
  406            | expr . ">>>=" expr
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 770
    "as"                 shift, and go to state 771
    "+="                 shift, and go to state 902
    "-="                 shift, and go to state 903
    "/="                 shift, and go to state 904
    "*="                 shift, and go to state 905
    "%="                 shift, and go to state 906
    "&="                 shift, and go to state 907
    "|="                 shift, and go to state 908
    "^="                 shift, and go to state 909
    "<<"                 shift, and go to state 780
    ">>"                 shift, and go to state 781
    "++"                 shift, and go to state 782
    "--"                 shift, and go to state 783
    "<="                 shift, and go to state 784
    "<<="                shift, and go to state 910
    ">>="                shift, and go to state 911
    ">="                 shift, and go to state 787
    "=="                 shift, and go to state 788
    "!="                 shift, and go to state 789
    "->"                 shift, and go to state 790
    "<-"                 shift, and go to state 912
    "??"                 shift, and go to state 792
    "?."                 shift, and go to state 793
    "?["                 shift, and go to state 794
    "<|"                 shift, and go to state 795
    "|>"                 shift, and go to state 796
    ":="                 shift, and go to state 797
    "<<<"                shift, and go to state 798
    ">>>"                shift, and go to state 799
    "<<<="               shift, and go to state 913
    ">>>="               shift, and go to state 914
    "&&"                 shift, and go to state 802
    "||"                 shift, and go to state 803
    "^^"                 shift, and go to state 804
    "&&="                shift, and go to state 915
    "||="                shift, and go to state 916
    "^^="                shift, and go to state 917
    ".."                 shift, and go to state 808
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 918
    '?'                  shift, and go to state 810
    '|'                  shift, and go to state 811
    '^'                  shift, and go to state 812
    '&'                  shift, and go to state 813
    '<'                  shift, and go to state 814
    '>'                  shift, and go to state 815
    '-'                  shift, and go to state 816
    '+'                  shift, and go to state 817
    '*'                  shift, and go to state 818
    '/'                  shift, and go to state 819
    '%'                  shift, and go to state 820
    '.'                  shift, and go to state 821
    '['                  shift, and go to state 822
    '$'                  shift, and go to state 528
    '@'                  shift, and go to state 707

    $default  reduce using rule 388 (expr_assign)

    semicolon                      go to state 1727
    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1701

  336 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 336 (tuple_expansion_variable_declaration)


State 1702

  528 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' $@34 .

    $default  reduce using rule 528 (expr)


State 1703

  578 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon .

    $default  reduce using rule 578 (struct_variable_declaration_list)


State 1704

  580 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 1728


State 1705

  828 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  829                   | make_struct_fields . ',' "name" ":=" expr
  832                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  833                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  839 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1212
    ')'  shift, and go to state 1729


State 1706

  840 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  922 optional_comma: ',' .

    '('  shift, and go to state 1730

    $default  reduce using rule 922 (optional_comma)


State 1707

  842 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 842 (make_struct_dim_decl)


State 1708

  869 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 869 (make_struct_decl)


State 1709

  872 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 872 (make_struct_decl)


State 1710

  354 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')' .

    $default  reduce using rule 354 (expr_type_info)


State 1711

  357 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 357 (expr_type_info)


State 1712

  895 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1731


State 1713

  898 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1732


State 1714

  901 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')' .

    $default  reduce using rule 901 (make_dim_decl)


State 1715

  909 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')' .

    $default  reduce using rule 909 (make_dim_decl)


State 1716

  887 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 887 (make_tuple_call)


State 1717

  875 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 875 (make_struct_decl)


State 1718

  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'
  920 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 770
    "as"   shift, and go to state 771
    "<<"   shift, and go to state 780
    ">>"   shift, and go to state 781
    "++"   shift, and go to state 782
    "--"   shift, and go to state 783
    "<="   shift, and go to state 784
    ">="   shift, and go to state 787
    "=="   shift, and go to state 788
    "!="   shift, and go to state 789
    "->"   shift, and go to state 790
    "??"   shift, and go to state 792
    "?."   shift, and go to state 793
    "?["   shift, and go to state 794
    "<|"   shift, and go to state 795
    "|>"   shift, and go to state 796
    "<<<"  shift, and go to state 798
    ">>>"  shift, and go to state 799
    "&&"   shift, and go to state 802
    "||"   shift, and go to state 803
    "^^"   shift, and go to state 804
    ".."   shift, and go to state 808
    '?'    shift, and go to state 810
    '|'    shift, and go to state 811
    '^'    shift, and go to state 812
    '&'    shift, and go to state 813
    '<'    shift, and go to state 814
    '>'    shift, and go to state 815
    '-'    shift, and go to state 816
    '+'    shift, and go to state 817
    '*'    shift, and go to state 818
    '/'    shift, and go to state 819
    '%'    shift, and go to state 820
    '.'    shift, and go to state 821
    '['    shift, and go to state 822

    $default  reduce using rule 920 (array_comprehension_where)


State 1719

  925 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 925 (array_comprehension)


State 1720

  926 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 926 (array_comprehension)


State 1721

  928 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 928 (array_comprehension)


State 1722

  276 optional_expr_list_in_braces: '(' optional_expr_list optional_comma ')' .

    $default  reduce using rule 276 (optional_expr_list_in_braces)


State 1723

  924 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 924 (array_comprehension)


State 1724

  331 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 331 (tuple_expansion_variable_declaration)


State 1725

  245 expr_call_pipe: expr . expr_full_block_assumed_piped
  330 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon
  388 expr_assign: expr .
  389            | expr . '=' expr
  390            | expr . "<-" expr
  391            | expr . ":=" expr
  392            | expr . "&=" expr
  393            | expr . "|=" expr
  394            | expr . "^=" expr
  395            | expr . "&&=" expr
  396            | expr . "||=" expr
  397            | expr . "^^=" expr
  398            | expr . "+=" expr
  399            | expr . "-=" expr
  400            | expr . "*=" expr
  401            | expr . "/=" expr
  402            | expr . "%=" expr
  403            | expr . "<<=" expr
  404            | expr . ">>=" expr
  405            | expr . "<<<=" expr
  406            | expr . ">>>=" expr
  430 expr_method_call: expr . "->" "name" '(' ')'
  431                 | expr . "->" "name" '(' expr_list ')'
  441 expr_field: expr . '.' "name"
  442           | expr . '.' '.' "name"
  443           | expr . '.' "name" '(' ')'
  444           | expr . '.' "name" '(' expr_list ')'
  445           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  446           | expr . '.' basic_type_declaration '(' ')'
  447           | expr . '.' basic_type_declaration '(' expr_list ')'
  450           | expr . '.' $@27 error $@28
  472 expr: expr . "<<" expr
  473     | expr . ">>" expr
  474     | expr . "<<<" expr
  475     | expr . ">>>" expr
  476     | expr . '+' expr
  477     | expr . '-' expr
  478     | expr . '*' expr
  479     | expr . '/' expr
  480     | expr . '%' expr
  481     | expr . '<' expr
  482     | expr . '>' expr
  483     | expr . "==" expr
  484     | expr . "!=" expr
  485     | expr . "<=" expr
  486     | expr . ">=" expr
  487     | expr . '&' expr
  488     | expr . '|' expr
  489     | expr . '^' expr
  490     | expr . "&&" expr
  491     | expr . "||" expr
  492     | expr . "^^" expr
  493     | expr . ".." expr
  496     | expr . "++"
  497     | expr . "--"
  500     | expr . '[' expr ']'
  501     | expr . '.' '[' expr ']'
  502     | expr . "?[" expr ']'
  503     | expr . '.' "?[" expr ']'
  504     | expr . "?." "name"
  505     | expr . '.' "?." "name"
  513     | expr . "??" expr
  514     | expr . '?' expr ':' expr
  517     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  518     | expr . "is" basic_type_declaration
  519     | expr . "is" "name"
  520     | expr . "as" "name"
  523     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  524     | expr . "as" basic_type_declaration
  525     | expr . '?' "as" "name"
  528     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  529     | expr . '?' "as" basic_type_declaration
  537     | expr . "<|" expr
  538     | expr . "|>" expr
  539     | expr . "|>" basic_type_declaration
  551 expr_mtag: expr . '.' "$f" '(' expr ')'
  552          | expr . "?." "$f" '(' expr ')'
  553          | expr . '.' '.' "$f" '(' expr ')'
  554          | expr . '.' "?." "$f" '(' expr ')'
  555          | expr . "as" "$f" '(' expr ')'
  556          | expr . '?' "as" "$f" '(' expr ')'
  557          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 770
    "as"                 shift, and go to state 771
    "+="                 shift, and go to state 902
    "-="                 shift, and go to state 903
    "/="                 shift, and go to state 904
    "*="                 shift, and go to state 905
    "%="                 shift, and go to state 906
    "&="                 shift, and go to state 907
    "|="                 shift, and go to state 908
    "^="                 shift, and go to state 909
    "<<"                 shift, and go to state 780
    ">>"                 shift, and go to state 781
    "++"                 shift, and go to state 782
    "--"                 shift, and go to state 783
    "<="                 shift, and go to state 784
    "<<="                shift, and go to state 910
    ">>="                shift, and go to state 911
    ">="                 shift, and go to state 787
    "=="                 shift, and go to state 788
    "!="                 shift, and go to state 789
    "->"                 shift, and go to state 790
    "<-"                 shift, and go to state 912
    "??"                 shift, and go to state 792
    "?."                 shift, and go to state 793
    "?["                 shift, and go to state 794
    "<|"                 shift, and go to state 795
    "|>"                 shift, and go to state 796
    ":="                 shift, and go to state 797
    "<<<"                shift, and go to state 798
    ">>>"                shift, and go to state 799
    "<<<="               shift, and go to state 913
    ">>>="               shift, and go to state 914
    "&&"                 shift, and go to state 802
    "||"                 shift, and go to state 803
    "^^"                 shift, and go to state 804
    "&&="                shift, and go to state 915
    "||="                shift, and go to state 916
    "^^="                shift, and go to state 917
    ".."                 shift, and go to state 808
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 918
    '?'                  shift, and go to state 810
    '|'                  shift, and go to state 811
    '^'                  shift, and go to state 812
    '&'                  shift, and go to state 813
    '<'                  shift, and go to state 814
    '>'                  shift, and go to state 815
    '-'                  shift, and go to state 816
    '+'                  shift, and go to state 817
    '*'                  shift, and go to state 818
    '/'                  shift, and go to state 819
    '%'                  shift, and go to state 820
    '.'                  shift, and go to state 821
    '['                  shift, and go to state 822
    '$'                  shift, and go to state 528
    '@'                  shift, and go to state 707

    $default  reduce using rule 388 (expr_assign)

    semicolon                      go to state 1733
    block_or_lambda                go to state 756
    expr_full_block_assumed_piped  go to state 823


State 1726

  334 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 334 (tuple_expansion_variable_declaration)


State 1727

  332 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 332 (tuple_expansion_variable_declaration)


State 1728

  580 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block .

    $default  reduce using rule 580 (struct_variable_declaration_list)


State 1729

  839 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 839 (make_struct_dim_list)


State 1730

  840 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 745
    "name"  shift, and go to state 1259

    make_struct_fields  go to state 1734


State 1731

  895 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 895 (make_dim_decl)


State 1732

  898 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 898 (make_dim_decl)


State 1733

  330 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 330 (tuple_expansion_variable_declaration)


State 1734

  828 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  829                   | make_struct_fields . ',' "name" ":=" expr
  832                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  833                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  840 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1212
    ')'  shift, and go to state 1735


State 1735

  840 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 840 (make_struct_dim_list)
